ingoing state : 1
outgoing state : 2
event : start

ingoing state : 2
outgoing state : 2
event : 0

ingoing state : 2
outgoing state : 3
predicate : (!(rt_input.trianglea > rt_input.trianglec) and (rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea == rt_input.triangleb))
event : 2

ingoing state : 2
outgoing state : 4
predicate : (!(rt_input.trianglea > rt_input.triangleb) and (rt_input.trianglea >= rt_input.triangleb) and !(1 > rt_output.result))
event : 1

ingoing state : 2
outgoing state : 5
predicate : (1 > rt_output.result)
event : 6

ingoing state : 2
outgoing state : 6
predicate : ((!(3 == rt_output.result) and !(rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea > rt_input.trianglec) and (2 == rt_output.result) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (rt_input.trianglea >= rt_input.triangleb) and (2 == rt_input.trianglea)) or (!(3 == rt_output.result) and !(rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea > rt_input.trianglec) and (2 == rt_output.result) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (rt_input.trianglea >= rt_input.triangleb) and !(2 == rt_input.trianglea) and (1 >= rt_input.trianglec) and (1 >= rt_input.triangleb)) or (!(3 == rt_output.result) and !(rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea > rt_input.trianglec) and (2 == rt_output.result) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (rt_input.trianglea >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb) and (5 > rt_input.trianglea)) or (!(3 == rt_output.result) and !(rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea > rt_input.trianglec) and (2 == rt_output.result) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (rt_input.trianglea >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb) and !(5 > rt_input.trianglea) and (3 == rt_input.triangleb) and (3 == rt_input.trianglec)) or (!(3 == rt_output.result) and !(rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea > rt_input.trianglec) and (2 == rt_output.result) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (rt_input.trianglea >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb) and !(5 > rt_input.trianglea) and !(3 == rt_input.triangleb) and !(3 == rt_input.trianglec) and (5 >= rt_input.trianglea)) or (!(3 == rt_output.result) and !(rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea > rt_input.trianglec) and (2 == rt_output.result) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (rt_input.trianglea >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb) and !(5 > rt_input.trianglea) and !(3 == rt_input.triangleb) and !(3 == rt_input.trianglec) and !(5 >= rt_input.trianglea) and (3 >= rt_input.trianglec) and (3 >= rt_input.triangleb)) or (!(3 == rt_output.result) and !(rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea > rt_input.trianglec) and (2 == rt_output.result) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (rt_input.trianglea >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb) and !(5 > rt_input.trianglea) and !(3 == rt_input.triangleb) and !(3 == rt_input.trianglec) and !(5 >= rt_input.trianglea) and !(3 >= rt_input.trianglec) and !(2 >= rt_input.triangleb)) or (!(3 == rt_output.result) and !(rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea > rt_input.trianglec) and !(2 == rt_output.result)) or (!(3 == rt_output.result) and !(rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea > rt_input.trianglec) and (1 >= rt_output.result) and !(rt_input.trianglea >= rt_input.trianglec)))
event : 3

ingoing state : 3
outgoing state : 4
predicate : (!(rt_input.trianglea > rt_input.triangleb) and (rt_input.trianglea >= rt_input.triangleb) and !(1 > rt_output.result))
event : 1

ingoing state : 3
outgoing state : 5
predicate : (1 > rt_output.result)
event : 6

ingoing state : 3
outgoing state : 2
predicate : ((!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and (3 == rt_input.triangleb) and (1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and (3 == rt_input.triangleb) and !(1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and !(3 == rt_input.triangleb) and (2 >= rt_input.trianglec) and !(3 >= rt_input.triangleb) and (1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and !(3 == rt_input.triangleb) and (2 >= rt_input.trianglec) and !(3 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and (1 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and !(3 == rt_input.triangleb) and !(2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (1 >= rt_input.triangleb) and !(1 >= rt_input.trianglea) and !(1 >= rt_output.result)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and !(3 == rt_input.triangleb) and !(2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and !(1 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(1 >= rt_output.result)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and !(3 == rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(2 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and (5 == rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and (5 == rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and (3 >= rt_input.trianglea) and (1 >= rt_input.trianglec) and (2 == rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and (3 >= rt_input.trianglea) and !(1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and !(3 >= rt_input.trianglea) and (1 >= rt_input.triangleb) and (2 == rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and !(3 >= rt_input.trianglea) and !(1 >= rt_input.triangleb) and !(2 == rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and (2 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and (5 == rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(5 == rt_input.trianglea) and (3 == rt_input.trianglea) and !(3 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(5 == rt_input.trianglea) and !(3 == rt_input.trianglea) and (3 >= rt_input.trianglec) and !(3 == rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(5 == rt_input.trianglea) and !(3 == rt_input.trianglea) and !(3 >= rt_input.trianglec) and (3 == rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 >= rt_input.trianglec) and (2 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and (5 > rt_input.trianglea) and (9 == rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and (5 > rt_input.trianglea) and !(9 == rt_input.triangleb) and (3 >= rt_input.trianglea) and !(3 == rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and (5 > rt_input.trianglea) and !(9 == rt_input.triangleb) and !(3 >= rt_input.trianglea) and (3 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(5 > rt_input.trianglea)) or (!(1 >= rt_output.result) and !(2 >= rt_output.result)))
event : 0

ingoing state : 3
outgoing state : 3
event : 2

ingoing state : 3
outgoing state : 6
predicate : ((!(rt_input.trianglea == rt_input.triangleb) and (1 >= rt_output.result) and (rt_input.trianglea >= rt_input.trianglec) and (rt_input.trianglea > rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and (1 >= rt_output.result) and !(rt_input.trianglea >= rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 >= rt_output.result) and (rt_input.trianglea > rt_input.trianglec) and (5 > rt_input.triangleb) and (2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (rt_input.trianglea > 2) and (rt_input.trianglea > 3) and (1 >= rt_input.triangleb) and (1 >= rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 >= rt_output.result) and (rt_input.trianglea > rt_input.trianglec) and (5 > rt_input.triangleb) and (2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (rt_input.trianglea > 2) and (rt_input.trianglea > 3) and !(1 >= rt_input.triangleb) and !(1 >= rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 >= rt_output.result) and (rt_input.trianglea > rt_input.trianglec) and (5 > rt_input.triangleb) and (2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (rt_input.trianglea > 2) and !(rt_input.trianglea > 3) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 >= rt_output.result) and (rt_input.trianglea > rt_input.trianglec) and (5 > rt_input.triangleb) and (2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and !(rt_input.trianglea > 2)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 >= rt_output.result) and (rt_input.trianglea > rt_input.trianglec) and (5 > rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and (2 >= rt_output.result) and (5 > rt_input.trianglec) and (3 == rt_input.triangleb) and (3 >= rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 >= rt_output.result) and (rt_input.trianglea > rt_input.trianglec) and (5 > rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and (2 >= rt_output.result) and (5 > rt_input.trianglec) and !(3 == rt_input.triangleb) and !(3 >= rt_input.trianglec)))
event : 3

ingoing state : 4
outgoing state : 3
predicate : (!(rt_input.trianglea > rt_input.trianglec) and (rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea == rt_input.triangleb))
event : 2

ingoing state : 4
outgoing state : 2
predicate : ((!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and (3 >= rt_input.triangleb) and (1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb) and !(1 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and (3 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and (1 >= rt_input.trianglea) and !(1 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and (3 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea) and (1 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and (3 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea) and !(1 >= rt_input.triangleb) and (2 == rt_input.triangleb) and !(2 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and (3 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea) and !(1 >= rt_input.triangleb) and !(2 == rt_input.triangleb) and (2 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec) and (5 == rt_input.triangleb) and (2 >= rt_input.trianglea) and (2 >= rt_input.trianglec) and (2 == rt_input.trianglea) and (1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec) and (5 == rt_input.triangleb) and (2 >= rt_input.trianglea) and (2 >= rt_input.trianglec) and !(2 == rt_input.trianglea) and !(1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec) and (5 == rt_input.triangleb) and (2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec) and (5 == rt_input.triangleb) and !(2 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec) and !(5 == rt_input.triangleb) and (1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec) and !(5 == rt_input.triangleb) and !(1 >= rt_input.trianglec) and (1 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec) and !(5 == rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea) and !(5 > rt_input.triangleb) and (2 == rt_input.trianglec) and !(2 == rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec) and !(5 == rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea) and !(5 > rt_input.triangleb) and !(2 == rt_input.trianglec) and !(3 == rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and !(3 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and (5 == rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 > rt_input.trianglea) and (3 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and (2 == rt_input.triangleb) and (1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 > rt_input.trianglea) and (3 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and !(2 == rt_input.triangleb) and (2 == rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 > rt_input.trianglea) and (3 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 > rt_input.trianglea) and (3 >= rt_input.trianglec) and !(2 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 > rt_input.trianglea) and (5 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (1 >= rt_input.triangleb) and (2 == rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 > rt_input.trianglea) and (5 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and !(1 >= rt_input.triangleb) and (1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 > rt_input.trianglea) and (5 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and !(2 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 > rt_input.trianglea) and (5 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and (2 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 > rt_input.trianglea) and (5 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and (3 >= rt_input.triangleb) and !(3 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 > rt_input.trianglea) and (5 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 > rt_input.trianglea) and !(5 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and !(5 > rt_input.trianglec) and (3 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and !(5 > rt_input.trianglec) and !(3 >= rt_input.triangleb) and (5 > rt_input.triangleb) and !(5 > rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and !(5 > rt_input.trianglec) and !(3 >= rt_input.triangleb) and !(5 > rt_input.triangleb)) or (!(1 >= rt_output.result) and !(2 == rt_output.result)))
event : 0

ingoing state : 4
outgoing state : 5
predicate : (1 > rt_output.result)
event : 6

ingoing state : 4
outgoing state : 4
event : 1

ingoing state : 4
outgoing state : 6
predicate : ((!(rt_input.trianglea == rt_input.triangleb) and (1 >= rt_output.result) and (rt_input.trianglea >= rt_input.trianglec) and (rt_input.trianglea > rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and (1 >= rt_output.result) and !(rt_input.trianglea >= rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 >= rt_output.result) and (rt_input.trianglea > rt_input.trianglec) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and (2 == rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(2 >= rt_input.trianglea)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 >= rt_output.result) and (rt_input.trianglea > rt_input.trianglec) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and !(2 == rt_input.triangleb) and (1 >= rt_input.trianglec) and (1 >= rt_input.triangleb) and !(1 >= rt_input.trianglea)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 >= rt_output.result) and (rt_input.trianglea > rt_input.trianglec) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(3 == rt_output.result) and (3 == rt_input.triangleb) and (3 >= rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 >= rt_output.result) and (rt_input.trianglea > rt_input.trianglec) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(3 == rt_output.result) and !(3 == rt_input.triangleb) and !(3 >= rt_input.trianglec)))
event : 3

ingoing state : 5
outgoing state : 2
predicate : ((!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and (2 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and (2 == rt_input.trianglea) and (1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and (2 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (1 >= rt_input.triangleb) and !(1 >= rt_output.result) and !(1 >= rt_input.trianglea) and !(1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and !(1 >= rt_input.triangleb) and !(1 >= rt_output.result) and (2 >= rt_input.trianglea) and !(2 == rt_input.trianglea) and !(1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and !(1 >= rt_input.triangleb) and !(1 >= rt_output.result) and !(2 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and !(2 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and (5 == rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and (5 == rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and (2 == rt_input.triangleb) and !(2 == rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and (2 == rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and (5 > rt_input.trianglea) and (1 >= rt_input.triangleb) and !(1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and (5 > rt_input.trianglea) and !(1 >= rt_input.triangleb) and (2 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and (5 > rt_input.trianglea) and !(1 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and (3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and !(3 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and (5 > rt_input.trianglea) and !(1 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(3 >= rt_input.trianglea) and (3 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and (5 > rt_input.trianglea) and !(1 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and !(5 > rt_input.trianglea) and (5 >= rt_input.trianglec) and (5 >= rt_input.triangleb) and (1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and !(5 > rt_input.trianglea) and (5 >= rt_input.trianglec) and (5 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and (1 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and !(5 > rt_input.trianglea) and (5 >= rt_input.trianglec) and (5 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb) and (3 == rt_input.triangleb) and !(3 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and !(5 > rt_input.trianglea) and (5 >= rt_input.trianglec) and (5 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb) and !(3 == rt_input.triangleb) and (3 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and !(5 > rt_input.trianglea) and (5 >= rt_input.trianglec) and !(5 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and !(5 > rt_input.trianglea) and !(5 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and !(2 >= rt_output.result)))
event : 0

ingoing state : 5
outgoing state : 5
event : 6

ingoing state : 5
outgoing state : 3
predicate : (!(rt_input.trianglea > rt_input.trianglec) and (rt_input.trianglea >= rt_input.trianglec) and !(1 > rt_output.result))
event : 2

ingoing state : 5
outgoing state : 6
predicate : ((!(rt_input.trianglea == rt_input.triangleb) and (1 == rt_output.result) and (rt_input.trianglea >= rt_input.trianglec) and (rt_input.trianglea > rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and (1 == rt_output.result) and !(rt_input.trianglea >= rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 == rt_output.result) and (rt_input.trianglea >= rt_input.triangleb) and (5 > rt_input.trianglec) and (2 == rt_input.triangleb) and (2 == rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 == rt_output.result) and (rt_input.trianglea >= rt_input.triangleb) and (5 > rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and (rt_input.trianglea >= rt_input.trianglec) and (rt_input.trianglea > 3) and (5 > rt_input.triangleb) and (3 == rt_input.triangleb) and (3 == rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 == rt_output.result) and (rt_input.trianglea >= rt_input.triangleb) and (5 > rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and (rt_input.trianglea >= rt_input.trianglec) and (rt_input.trianglea > 3) and (5 > rt_input.triangleb) and !(3 == rt_input.triangleb) and !(3 == rt_input.trianglec) and (3 >= rt_input.trianglec) and (2 >= rt_input.triangleb)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 == rt_output.result) and (rt_input.trianglea >= rt_input.triangleb) and (5 > rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and (rt_input.trianglea >= rt_input.trianglec) and (rt_input.trianglea > 3) and (5 > rt_input.triangleb) and !(3 == rt_input.triangleb) and !(3 == rt_input.trianglec) and !(3 >= rt_input.trianglec) and !(3 >= rt_input.triangleb)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 == rt_output.result) and (rt_input.trianglea >= rt_input.triangleb) and (5 > rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and (rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea > 3)))
event : 3

ingoing state : 5
outgoing state : 4
predicate : ((rt_input.trianglea >= rt_input.triangleb) and !(rt_input.trianglea > rt_input.triangleb) and !(1 > rt_output.result))
event : 1

ingoing state : 6
outgoing state : 5
predicate : (1 > rt_output.result)
event : 6

ingoing state : 6
outgoing state : 2
predicate : ((!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and !(2 >= rt_input.trianglea) and (2 == rt_input.triangleb) and !(1 >= rt_output.result) and (2 >= rt_input.trianglec) and (1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and !(2 >= rt_input.trianglea) and (2 == rt_input.triangleb) and !(1 >= rt_output.result) and !(2 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and !(2 >= rt_input.trianglea) and !(2 == rt_input.triangleb) and !(1 >= rt_output.result) and !(1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and (2 >= rt_input.trianglea) and (2 == rt_input.triangleb) and (1 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and (2 >= rt_input.trianglea) and !(2 == rt_input.triangleb) and (2 == rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(2 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and (4 >= rt_input.triangleb) and (2 >= rt_input.trianglea) and (2 >= rt_input.trianglec) and (1 >= rt_input.trianglec) and (2 == rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and (4 >= rt_input.triangleb) and (2 >= rt_input.trianglea) and (2 >= rt_input.trianglec) and !(1 >= rt_input.trianglec) and (1 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and (4 >= rt_input.triangleb) and (2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and (4 >= rt_input.triangleb) and !(2 >= rt_input.trianglea) and (2 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and (4 >= rt_input.triangleb) and !(2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and (4 >= rt_input.trianglea) and (4 == rt_input.triangleb) and (4 > rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and (4 >= rt_input.triangleb) and !(2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and (4 >= rt_input.trianglea) and !(4 == rt_input.triangleb) and !(4 > rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and (4 >= rt_input.triangleb) and !(2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and !(4 >= rt_input.trianglea) and (4 >= rt_input.trianglec) and (4 > rt_input.triangleb) and !(4 > rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and (4 >= rt_input.triangleb) and !(2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and !(4 >= rt_input.trianglea) and (4 >= rt_input.trianglec) and !(4 > rt_input.triangleb) and (4 > rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and (4 >= rt_input.triangleb) and !(2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and !(4 >= rt_input.trianglea) and !(4 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and !(4 >= rt_input.triangleb) and (4 >= rt_input.trianglec) and (4 >= rt_input.trianglea) and (2 >= rt_input.trianglea) and (2 >= rt_input.trianglec) and (2 == rt_input.trianglec) and (1 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and !(4 >= rt_input.triangleb) and (4 >= rt_input.trianglec) and (4 >= rt_input.trianglea) and (2 >= rt_input.trianglea) and (2 >= rt_input.trianglec) and !(2 == rt_input.trianglec) and !(1 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and !(4 >= rt_input.triangleb) and (4 >= rt_input.trianglec) and (4 >= rt_input.trianglea) and (2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and !(4 >= rt_input.triangleb) and (4 >= rt_input.trianglec) and (4 >= rt_input.trianglea) and !(2 >= rt_input.trianglea) and (2 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and !(4 >= rt_input.triangleb) and (4 >= rt_input.trianglec) and (4 >= rt_input.trianglea) and !(2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and (4 == rt_input.trianglea) and (4 > rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and !(4 >= rt_input.triangleb) and (4 >= rt_input.trianglec) and (4 >= rt_input.trianglea) and !(2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and !(4 == rt_input.trianglea) and !(4 > rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and !(4 >= rt_input.triangleb) and (4 >= rt_input.trianglec) and !(4 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and !(4 >= rt_input.triangleb) and !(4 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and !(2 >= rt_output.result)))
event : 0

ingoing state : 6
outgoing state : 3
predicate : ((rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea > rt_input.trianglec) and !(1 > rt_output.result))
event : 2

ingoing state : 6
outgoing state : 4
predicate : ((rt_input.trianglea >= rt_input.triangleb) and !(rt_input.trianglea > rt_input.triangleb) and !(1 > rt_output.result))
event : 1

ingoing state : 6
outgoing state : 6
event : 3

