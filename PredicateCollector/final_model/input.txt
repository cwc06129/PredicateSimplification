[[1, 'start', 2], [2, '0', 2], [2, '(!(rt_input.trianglea > rt_input.trianglec) and (rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea == rt_input.triangleb)): 2', 3], [2, '(!(rt_input.trianglea > rt_input.triangleb) and (rt_input.trianglea >= rt_input.triangleb) and !(1 > rt_output.result)): 1', 4], [2, '(1 > rt_output.result): 6', 5], [2, '((!(3 == rt_output.result) and !(rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea > rt_input.trianglec) and (2 == rt_output.result) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (rt_input.trianglea >= rt_input.triangleb) and (2 == rt_input.trianglea)) or (!(3 == rt_output.result) and !(rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea > rt_input.trianglec) and (2 == rt_output.result) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (rt_input.trianglea >= rt_input.triangleb) and !(2 == rt_input.trianglea) and (1 >= rt_input.trianglec) and (1 >= rt_input.triangleb)) or (!(3 == rt_output.result) and !(rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea > rt_input.trianglec) and (2 == rt_output.result) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (rt_input.trianglea >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb) and (5 > rt_input.trianglea)) or (!(3 == rt_output.result) and !(rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea > rt_input.trianglec) and (2 == rt_output.result) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (rt_input.trianglea >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb) and !(5 > rt_input.trianglea) and (3 == rt_input.triangleb) and (3 == rt_input.trianglec)) or (!(3 == rt_output.result) and !(rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea > rt_input.trianglec) and (2 == rt_output.result) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (rt_input.trianglea >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb) and !(5 > rt_input.trianglea) and !(3 == rt_input.triangleb) and !(3 == rt_input.trianglec) and (5 >= rt_input.trianglea)) or (!(3 == rt_output.result) and !(rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea > rt_input.trianglec) and (2 == rt_output.result) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (rt_input.trianglea >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb) and !(5 > rt_input.trianglea) and !(3 == rt_input.triangleb) and !(3 == rt_input.trianglec) and !(5 >= rt_input.trianglea) and (3 >= rt_input.trianglec) and (3 >= rt_input.triangleb)) or (!(3 == rt_output.result) and !(rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea > rt_input.trianglec) and (2 == rt_output.result) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (rt_input.trianglea >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb) and !(5 > rt_input.trianglea) and !(3 == rt_input.triangleb) and !(3 == rt_input.trianglec) and !(5 >= rt_input.trianglea) and !(3 >= rt_input.trianglec) and !(2 >= rt_input.triangleb)) or (!(3 == rt_output.result) and !(rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea > rt_input.trianglec) and !(2 == rt_output.result)) or (!(3 == rt_output.result) and !(rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea > rt_input.trianglec) and (1 >= rt_output.result) and !(rt_input.trianglea >= rt_input.trianglec))): 3', 6], [3, '(!(rt_input.trianglea > rt_input.triangleb) and (rt_input.trianglea >= rt_input.triangleb) and !(1 > rt_output.result)): 1', 4], [3, '(1 > rt_output.result): 6', 5], [3, '((!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and (3 == rt_input.triangleb) and (1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and (3 == rt_input.triangleb) and !(1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and !(3 == rt_input.triangleb) and (2 >= rt_input.trianglec) and !(3 >= rt_input.triangleb) and (1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and !(3 == rt_input.triangleb) and (2 >= rt_input.trianglec) and !(3 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and (1 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and !(3 == rt_input.triangleb) and !(2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (1 >= rt_input.triangleb) and !(1 >= rt_input.trianglea) and !(1 >= rt_output.result)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and !(3 == rt_input.triangleb) and !(2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and !(1 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(1 >= rt_output.result)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and !(3 == rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(2 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and (5 == rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and (5 == rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and (3 >= rt_input.trianglea) and (1 >= rt_input.trianglec) and (2 == rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and (3 >= rt_input.trianglea) and !(1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and !(3 >= rt_input.trianglea) and (1 >= rt_input.triangleb) and (2 == rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and !(3 >= rt_input.trianglea) and !(1 >= rt_input.triangleb) and !(2 == rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and (2 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and (5 == rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(5 == rt_input.trianglea) and (3 == rt_input.trianglea) and !(3 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(5 == rt_input.trianglea) and !(3 == rt_input.trianglea) and (3 >= rt_input.trianglec) and !(3 == rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(5 == rt_input.trianglea) and !(3 == rt_input.trianglea) and !(3 >= rt_input.trianglec) and (3 == rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 >= rt_input.trianglec) and (2 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and (5 > rt_input.trianglea) and (9 == rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and (5 > rt_input.trianglea) and !(9 == rt_input.triangleb) and (3 >= rt_input.trianglea) and !(3 == rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and (5 > rt_input.trianglea) and !(9 == rt_input.triangleb) and !(3 >= rt_input.trianglea) and (3 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(5 > rt_input.trianglea)) or (!(1 >= rt_output.result) and !(2 >= rt_output.result))): 0', 2], [3, '2', 3], [3, '((!(rt_input.trianglea == rt_input.triangleb) and (1 >= rt_output.result) and (rt_input.trianglea >= rt_input.trianglec) and (rt_input.trianglea > rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and (1 >= rt_output.result) and !(rt_input.trianglea >= rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 >= rt_output.result) and (rt_input.trianglea > rt_input.trianglec) and (5 > rt_input.triangleb) and (2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (rt_input.trianglea > 2) and (rt_input.trianglea > 3) and (1 >= rt_input.triangleb) and (1 >= rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 >= rt_output.result) and (rt_input.trianglea > rt_input.trianglec) and (5 > rt_input.triangleb) and (2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (rt_input.trianglea > 2) and (rt_input.trianglea > 3) and !(1 >= rt_input.triangleb) and !(1 >= rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 >= rt_output.result) and (rt_input.trianglea > rt_input.trianglec) and (5 > rt_input.triangleb) and (2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (rt_input.trianglea > 2) and !(rt_input.trianglea > 3) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 >= rt_output.result) and (rt_input.trianglea > rt_input.trianglec) and (5 > rt_input.triangleb) and (2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and !(rt_input.trianglea > 2)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 >= rt_output.result) and (rt_input.trianglea > rt_input.trianglec) and (5 > rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and (2 >= rt_output.result) and (5 > rt_input.trianglec) and (3 == rt_input.triangleb) and (3 >= rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 >= rt_output.result) and (rt_input.trianglea > rt_input.trianglec) and (5 > rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and (2 >= rt_output.result) and (5 > rt_input.trianglec) and !(3 == rt_input.triangleb) and !(3 >= rt_input.trianglec))): 3', 6], [4, '(!(rt_input.trianglea > rt_input.trianglec) and (rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea == rt_input.triangleb)): 2', 3], [4, '((!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and (3 >= rt_input.triangleb) and (1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb) and !(1 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and (3 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and (1 >= rt_input.trianglea) and !(1 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and (3 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea) and (1 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and (3 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea) and !(1 >= rt_input.triangleb) and (2 == rt_input.triangleb) and !(2 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and (3 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea) and !(1 >= rt_input.triangleb) and !(2 == rt_input.triangleb) and (2 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec) and (5 == rt_input.triangleb) and (2 >= rt_input.trianglea) and (2 >= rt_input.trianglec) and (2 == rt_input.trianglea) and (1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec) and (5 == rt_input.triangleb) and (2 >= rt_input.trianglea) and (2 >= rt_input.trianglec) and !(2 == rt_input.trianglea) and !(1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec) and (5 == rt_input.triangleb) and (2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec) and (5 == rt_input.triangleb) and !(2 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec) and !(5 == rt_input.triangleb) and (1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec) and !(5 == rt_input.triangleb) and !(1 >= rt_input.trianglec) and (1 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec) and !(5 == rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea) and !(5 > rt_input.triangleb) and (2 == rt_input.trianglec) and !(2 == rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec) and !(5 == rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea) and !(5 > rt_input.triangleb) and !(2 == rt_input.trianglec) and !(3 == rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and (3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and !(3 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and (5 == rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 > rt_input.trianglea) and (3 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and (2 == rt_input.triangleb) and (1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 > rt_input.trianglea) and (3 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and !(2 == rt_input.triangleb) and (2 == rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 > rt_input.trianglea) and (3 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and (5 > rt_input.trianglea) and (3 >= rt_input.trianglec) and !(2 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 > rt_input.trianglea) and (5 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (1 >= rt_input.triangleb) and (2 == rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 > rt_input.trianglea) and (5 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and !(1 >= rt_input.triangleb) and (1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 > rt_input.trianglea) and (5 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and !(2 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 > rt_input.trianglea) and (5 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and (2 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 > rt_input.trianglea) and (5 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and (3 >= rt_input.triangleb) and !(3 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 > rt_input.trianglea) and (5 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and (5 > rt_input.trianglec) and !(5 == rt_input.triangleb) and !(5 > rt_input.trianglea) and !(5 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and !(5 > rt_input.trianglec) and (3 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and !(5 > rt_input.trianglec) and !(3 >= rt_input.triangleb) and (5 > rt_input.triangleb) and !(5 > rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 == rt_output.result) and !(3 >= rt_input.trianglea) and !(5 > rt_input.trianglec) and !(3 >= rt_input.triangleb) and !(5 > rt_input.triangleb)) or (!(1 >= rt_output.result) and !(2 == rt_output.result))): 0', 2], [4, '(1 > rt_output.result): 6', 5], [4, '1', 4], [4, '((!(rt_input.trianglea == rt_input.triangleb) and (1 >= rt_output.result) and (rt_input.trianglea >= rt_input.trianglec) and (rt_input.trianglea > rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and (1 >= rt_output.result) and !(rt_input.trianglea >= rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 >= rt_output.result) and (rt_input.trianglea > rt_input.trianglec) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and (2 == rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(2 >= rt_input.trianglea)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 >= rt_output.result) and (rt_input.trianglea > rt_input.trianglec) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and !(2 == rt_input.triangleb) and (1 >= rt_input.trianglec) and (1 >= rt_input.triangleb) and !(1 >= rt_input.trianglea)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 >= rt_output.result) and (rt_input.trianglea > rt_input.trianglec) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(3 == rt_output.result) and (3 == rt_input.triangleb) and (3 >= rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 >= rt_output.result) and (rt_input.trianglea > rt_input.trianglec) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(3 == rt_output.result) and !(3 == rt_input.triangleb) and !(3 >= rt_input.trianglec))): 3', 6], [5, '((!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and (2 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and (2 == rt_input.trianglea) and (1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and (2 >= rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and (1 >= rt_input.triangleb) and !(1 >= rt_output.result) and !(1 >= rt_input.trianglea) and !(1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and !(1 >= rt_input.triangleb) and !(1 >= rt_output.result) and (2 >= rt_input.trianglea) and !(2 == rt_input.trianglea) and !(1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and (2 >= rt_input.triangleb) and !(1 >= rt_input.triangleb) and !(1 >= rt_output.result) and !(2 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and !(2 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and (5 == rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and (5 == rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and (2 == rt_input.triangleb) and !(2 == rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and (2 == rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and (5 > rt_input.trianglea) and (1 >= rt_input.triangleb) and !(1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and (5 > rt_input.trianglea) and !(1 >= rt_input.triangleb) and (2 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and (5 > rt_input.trianglea) and !(1 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and (3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and !(3 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and (5 > rt_input.trianglea) and !(1 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(3 >= rt_input.trianglea) and (3 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and (5 > rt_input.trianglea) and !(1 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(3 >= rt_input.trianglea) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and !(5 > rt_input.trianglea) and (5 >= rt_input.trianglec) and (5 >= rt_input.triangleb) and (1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and !(5 > rt_input.trianglea) and (5 >= rt_input.trianglec) and (5 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and (1 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and !(5 > rt_input.trianglea) and (5 >= rt_input.trianglec) and (5 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb) and (3 == rt_input.triangleb) and !(3 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and !(5 > rt_input.trianglea) and (5 >= rt_input.trianglec) and (5 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb) and !(3 == rt_input.triangleb) and (3 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and !(5 > rt_input.trianglea) and (5 >= rt_input.trianglec) and !(5 >= rt_input.triangleb)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and !(5 > rt_input.trianglea) and !(5 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and !(2 >= rt_output.result))): 0', 2], [5, '6', 5], [5, '(!(rt_input.trianglea > rt_input.trianglec) and (rt_input.trianglea >= rt_input.trianglec) and !(1 > rt_output.result)): 2', 3], [5, '((!(rt_input.trianglea == rt_input.triangleb) and (1 == rt_output.result) and (rt_input.trianglea >= rt_input.trianglec) and (rt_input.trianglea > rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and (1 == rt_output.result) and !(rt_input.trianglea >= rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 == rt_output.result) and (rt_input.trianglea >= rt_input.triangleb) and (5 > rt_input.trianglec) and (2 == rt_input.triangleb) and (2 == rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 == rt_output.result) and (rt_input.trianglea >= rt_input.triangleb) and (5 > rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and (rt_input.trianglea >= rt_input.trianglec) and (rt_input.trianglea > 3) and (5 > rt_input.triangleb) and (3 == rt_input.triangleb) and (3 == rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 == rt_output.result) and (rt_input.trianglea >= rt_input.triangleb) and (5 > rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and (rt_input.trianglea >= rt_input.trianglec) and (rt_input.trianglea > 3) and (5 > rt_input.triangleb) and !(3 == rt_input.triangleb) and !(3 == rt_input.trianglec) and (3 >= rt_input.trianglec) and (2 >= rt_input.triangleb)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 == rt_output.result) and (rt_input.trianglea >= rt_input.triangleb) and (5 > rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and (rt_input.trianglea >= rt_input.trianglec) and (rt_input.trianglea > 3) and (5 > rt_input.triangleb) and !(3 == rt_input.triangleb) and !(3 == rt_input.trianglec) and !(3 >= rt_input.trianglec) and !(3 >= rt_input.triangleb)) or (!(rt_input.trianglea == rt_input.triangleb) and !(1 == rt_output.result) and (rt_input.trianglea >= rt_input.triangleb) and (5 > rt_input.trianglec) and !(2 == rt_input.triangleb) and !(2 == rt_input.trianglec) and (rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea > 3))): 3', 6], [5, '((rt_input.trianglea >= rt_input.triangleb) and !(rt_input.trianglea > rt_input.triangleb) and !(1 > rt_output.result)): 1', 4], [6, '(1 > rt_output.result): 6', 5], [6, '((!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and !(2 >= rt_input.trianglea) and (2 == rt_input.triangleb) and !(1 >= rt_output.result) and (2 >= rt_input.trianglec) and (1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and !(2 >= rt_input.trianglea) and (2 == rt_input.triangleb) and !(1 >= rt_output.result) and !(2 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec) and !(2 >= rt_input.trianglea) and !(2 == rt_input.triangleb) and !(1 >= rt_output.result) and !(1 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and (2 >= rt_input.trianglea) and (2 == rt_input.triangleb) and (1 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and (2 >= rt_input.trianglea) and !(2 == rt_input.triangleb) and (2 == rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and (2 >= rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(2 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and (4 >= rt_input.triangleb) and (2 >= rt_input.trianglea) and (2 >= rt_input.trianglec) and (1 >= rt_input.trianglec) and (2 == rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and (4 >= rt_input.triangleb) and (2 >= rt_input.trianglea) and (2 >= rt_input.trianglec) and !(1 >= rt_input.trianglec) and (1 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and (4 >= rt_input.triangleb) and (2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and (4 >= rt_input.triangleb) and !(2 >= rt_input.trianglea) and (2 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and (4 >= rt_input.triangleb) and !(2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and (4 >= rt_input.trianglea) and (4 == rt_input.triangleb) and (4 > rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and (4 >= rt_input.triangleb) and !(2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and (4 >= rt_input.trianglea) and !(4 == rt_input.triangleb) and !(4 > rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and (4 >= rt_input.triangleb) and !(2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and !(4 >= rt_input.trianglea) and (4 >= rt_input.trianglec) and (4 > rt_input.triangleb) and !(4 > rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and (4 >= rt_input.triangleb) and !(2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and !(4 >= rt_input.trianglea) and (4 >= rt_input.trianglec) and !(4 > rt_input.triangleb) and (4 > rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and (4 >= rt_input.triangleb) and !(2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and !(4 >= rt_input.trianglea) and !(4 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and !(4 >= rt_input.triangleb) and (4 >= rt_input.trianglec) and (4 >= rt_input.trianglea) and (2 >= rt_input.trianglea) and (2 >= rt_input.trianglec) and (2 == rt_input.trianglec) and (1 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and !(4 >= rt_input.triangleb) and (4 >= rt_input.trianglec) and (4 >= rt_input.trianglea) and (2 >= rt_input.trianglea) and (2 >= rt_input.trianglec) and !(2 == rt_input.trianglec) and !(1 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and !(4 >= rt_input.triangleb) and (4 >= rt_input.trianglec) and (4 >= rt_input.trianglea) and (2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and !(4 >= rt_input.triangleb) and (4 >= rt_input.trianglec) and (4 >= rt_input.trianglea) and !(2 >= rt_input.trianglea) and (2 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and !(4 >= rt_input.triangleb) and (4 >= rt_input.trianglec) and (4 >= rt_input.trianglea) and !(2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and (4 == rt_input.trianglea) and (4 > rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and !(4 >= rt_input.triangleb) and (4 >= rt_input.trianglec) and (4 >= rt_input.trianglea) and !(2 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and !(4 == rt_input.trianglea) and !(4 > rt_input.trianglec)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and !(4 >= rt_input.triangleb) and (4 >= rt_input.trianglec) and !(4 >= rt_input.trianglea)) or (!(1 >= rt_output.result) and (2 >= rt_output.result) and !(2 >= rt_input.triangleb) and !(4 >= rt_input.triangleb) and !(4 >= rt_input.trianglec)) or (!(1 >= rt_output.result) and !(2 >= rt_output.result))): 0', 2], [6, '((rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea > rt_input.trianglec) and !(1 > rt_output.result)): 2', 3], [6, '((rt_input.trianglea >= rt_input.triangleb) and !(rt_input.trianglea > rt_input.triangleb) and !(1 > rt_output.result)): 1', 4], [6, '3', 6]]