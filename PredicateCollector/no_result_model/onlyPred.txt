((rt_input.triangleb >= rt_input.trianglec) and !(rt_input.triangleb > rt_input.trianglec) and !(rt_input.trianglea == rt_input.triangleb))
((rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea > rt_input.trianglec) and !(rt_input.trianglea == rt_input.triangleb))
(((rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea >= rt_input.trianglec) and (rt_input.trianglea > rt_input.trianglec)) or ((rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea >= rt_input.trianglec)))
((rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea > rt_input.trianglec))
(!(rt_input.trianglea > rt_input.trianglec) and (rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea == rt_input.triangleb))
((!(rt_input.trianglea == rt_input.trianglec) and !(rt_input.trianglea == rt_input.triangleb) and (rt_input.triangleb > rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.trianglec) and !(rt_input.trianglea == rt_input.triangleb) and !(rt_input.triangleb > rt_input.trianglec) and !(rt_input.triangleb >= rt_input.trianglec)))
(!(rt_input.triangleb > rt_input.trianglec) and (rt_input.triangleb >= rt_input.trianglec) and !(rt_input.trianglea == rt_input.trianglec))
((rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea > rt_input.trianglec) and (rt_input.trianglea >= rt_input.trianglec))
((!(rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea == rt_input.trianglec) and (rt_input.triangleb >= rt_input.trianglec) and (rt_input.triangleb > rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea == rt_input.trianglec) and !(rt_input.triangleb >= rt_input.trianglec)))
(!(rt_input.trianglea > rt_input.trianglec) and (rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea == rt_input.triangleb))
(((rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea > rt_input.trianglec)) or ((rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea > rt_input.trianglec) and !(rt_input.trianglea >= rt_input.trianglec)))
(!(rt_input.triangleb > rt_input.trianglec) and (rt_input.triangleb >= rt_input.trianglec) and !(rt_input.trianglea == rt_input.triangleb))
((rt_input.triangleb >= rt_input.trianglec) and !(rt_input.triangleb > rt_input.trianglec) and !(rt_input.trianglea == rt_input.triangleb))
((!(rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea == rt_input.trianglec) and (rt_input.triangleb >= rt_input.trianglec) and (rt_input.triangleb > rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea == rt_input.trianglec) and !(rt_input.triangleb >= rt_input.trianglec)))
(((rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea >= rt_input.trianglec) and (rt_input.trianglea > rt_input.trianglec)) or ((rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea >= rt_input.trianglec)))
((rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea > rt_input.trianglec))
((rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea > rt_input.trianglec) and !(rt_input.trianglea == rt_input.triangleb))
((!(rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea == rt_input.trianglec) and (rt_input.triangleb >= rt_input.trianglec) and (rt_input.triangleb > rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea == rt_input.trianglec) and !(rt_input.triangleb >= rt_input.trianglec)))
(((rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea >= rt_input.trianglec) and (rt_input.trianglea > rt_input.trianglec)) or ((rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea >= rt_input.trianglec)))
((rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea > rt_input.trianglec))
