1.
[Original predicate]
(((2 >= rt_input.n1) and (8 >= rt_input.n2)) or ((2 >= rt_input.n1) and !(8 >= rt_input.n2) and !(10 > rt_input.n2)) or (!(2 >= rt_input.n1) and (2 >= rt_input.n2) and (8 == rt_input.n1)) or (!(2 >= rt_input.n1) and (2 >= rt_input.n2) and !(8 == rt_input.n1) and !(3 == rt_input.n1) and (6 >= rt_input.n1)) or (!(2 >= rt_input.n1) and !(2 >= rt_input.n2) and (6 == rt_input.n1) and !(8 > rt_input.n2)))

[Original predicate size] 17

[Final output]
( or (and (> 9 rt_input.n2) (> 3 rt_input.n1)) ( or (and (> rt_input.n2 9) (> 3 rt_input.n1)) ( or (and (> 3 rt_input.n2) (= 8 rt_input.n1)) ( or (and (> 3 rt_input.n2) (and (> rt_input.n1 3) (> 7 rt_input.n1))) (and (> rt_input.n2 7) (= 6 rt_input.n1)) ) ) ) ) 

[Final predicate size] 11

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 12 seconds


2.
[Original predicate]
((8 >= rt_input.n1) and !(8 > rt_input.n1) and !(6 >= rt_input.n2))

[Original predicate size] 3

[Final output]
(and (> rt_input.n2 6) (= 8 rt_input.n1)) 

[Final predicate size] 2

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 1 seconds


3.
[Original predicate]
((5 == rt_input.n1) and (6 > rt_input.n2) and !(5 > rt_input.n2))

[Original predicate size] 3

[Final output]
(and (= 5 rt_input.n2) (= 5 rt_input.n1)) 

[Final predicate size] 2

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 1 seconds


4.
[Original predicate]
(((3 == rt_input.n1) and (6 == rt_input.n2)) or ((3 == rt_input.n1) and !(6 == rt_input.n2) and (3 >= rt_input.n2) and !(2 >= rt_input.n2)) or (!(3 == rt_input.n1) and (6 == rt_input.n1) and (3 >= rt_input.n2)))

[Original predicate size] 9

[Final output]
( or (and (= 6 rt_input.n2) (= 3 rt_input.n1)) ( or (and (= 3 rt_input.n2) (= 3 rt_input.n1)) (and (> 4 rt_input.n2) (= 6 rt_input.n1)) ) ) 

[Final predicate size] 6

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 4 seconds


5.
[Original predicate]
(((2 >= rt_input.n1) and (8 >= rt_input.n2)) or ((2 >= rt_input.n1) and !(8 >= rt_input.n2) and !(10 > rt_input.n2)) or (!(2 >= rt_input.n1) and (2 >= rt_input.n2) and (8 == rt_input.n1)) or (!(2 >= rt_input.n1) and (2 >= rt_input.n2) and !(8 == rt_input.n1) and !(3 == rt_input.n1) and (6 >= rt_input.n1)) or (!(2 >= rt_input.n1) and !(2 >= rt_input.n2) and (6 == rt_input.n1) and !(8 > rt_input.n2)))

[Original predicate size] 17

[Final output]
( or (and (> 9 rt_input.n2) (> 3 rt_input.n1)) ( or (and (> rt_input.n2 9) (> 3 rt_input.n1)) ( or (and (> 3 rt_input.n2) (= 8 rt_input.n1)) ( or (and (> 3 rt_input.n2) (and (> rt_input.n1 3) (> 7 rt_input.n1))) (and (> rt_input.n2 7) (= 6 rt_input.n1)) ) ) ) ) 

[Final predicate size] 11

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 12 seconds


6.
[Original predicate]
(((9 >= rt_input.n1) and (9 > rt_input.n1) and (5 >= rt_input.n1) and (4 > rt_input.n1) and (2 >= rt_input.n1)) or ((9 >= rt_input.n1) and (9 > rt_input.n1) and (5 >= rt_input.n1) and (4 > rt_input.n1) and !(2 >= rt_input.n1) and (2 >= rt_input.n2)) or ((9 >= rt_input.n1) and (9 > rt_input.n1) and (5 >= rt_input.n1) and !(4 > rt_input.n1)) or ((9 >= rt_input.n1) and (9 > rt_input.n1) and !(5 >= rt_input.n1) and (5 == rt_input.n2)) or ((9 >= rt_input.n1) and !(9 > rt_input.n1)))

[Original predicate size] 21

[Final output]
( or (> 3 rt_input.n1) ( or (and (> 3 rt_input.n2) (= 3 rt_input.n1)) ( or (and (> rt_input.n1 3) (> 6 rt_input.n1)) ( or (and (= 5 rt_input.n2) (and (> rt_input.n1 5) (> 9 rt_input.n1))) (= 9 rt_input.n1) ) ) ) ) 

[Final predicate size] 9

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 15 seconds


7.
[Original predicate]
(!(5 >= rt_input.n2) and !(7 > rt_input.n1) and (9 > rt_input.n1))

[Original predicate size] 3

[Final output]
(and (> rt_input.n2 5) (and (> rt_input.n1 6) (> 9 rt_input.n1))) 

[Final predicate size] 3

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 4 seconds


8.
[Original predicate]
(!(5 >= rt_input.n2) and (7 > rt_input.n1) and !(5 >= rt_input.n1))

[Original predicate size] 3

[Final output]
(and (> rt_input.n2 5) (= 6 rt_input.n1)) 

[Final predicate size] 2

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 1 seconds


9.
[Original predicate]
(6 > rt_input.n1)

[Original predicate size] 1

[Final output]
(> 6 rt_input.n1) 

[Final predicate size] 1

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 0 seconds


10.
[Original predicate]
!(6 >= rt_input.n1)

[Original predicate size] 1

[Final output]
(> rt_input.n1 6) 

[Final predicate size] 1

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 0 seconds


11.
[Original predicate]
((6 >= rt_input.n1) and !(6 > rt_input.n1))

[Original predicate size] 2

[Final output]
(= 6 rt_input.n1) 

[Final predicate size] 1

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 1 seconds


12.
[Original predicate]
((2 >= rt_input.n2) or (!(2 >= rt_input.n2) and (7 > rt_input.n1) and !(7 >= rt_input.n2)))

[Original predicate size] 4

[Final output]
( or (> 3 rt_input.n2) (and (> rt_input.n2 7) (> 7 rt_input.n1)) ) 

[Final predicate size] 3

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 2 seconds


13.
[Original predicate]
((!(2 >= rt_input.n2) and (7 > rt_input.n1) and (7 >= rt_input.n2)) or (!(2 >= rt_input.n2) and !(7 > rt_input.n1)))

[Original predicate size] 5

[Final output]
( or (and (and (> rt_input.n2 2) (> 8 rt_input.n2)) (> 7 rt_input.n1)) (and (> rt_input.n2 2) (> rt_input.n1 6)) ) 

[Final predicate size] 5

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 3 seconds


14.
[Original predicate]
(((3 == rt_input.n1) and (6 == rt_input.n2)) or ((3 == rt_input.n1) and !(6 == rt_input.n2) and (3 >= rt_input.n2) and !(2 >= rt_input.n2)) or (!(3 == rt_input.n1) and (6 == rt_input.n1) and (3 >= rt_input.n2)))

[Original predicate size] 9

[Final output]
( or (and (= 6 rt_input.n2) (= 3 rt_input.n1)) ( or (and (= 3 rt_input.n2) (= 3 rt_input.n1)) (and (> 4 rt_input.n2) (= 6 rt_input.n1)) ) ) 

[Final predicate size] 6

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 4 seconds


15.
[Original predicate]
((8 == rt_input.n2) and (5 > rt_input.n1) and !(2 >= rt_input.n1))

[Original predicate size] 3

[Final output]
(and (= 8 rt_input.n2) (and (> rt_input.n1 2) (> 5 rt_input.n1))) 

[Final predicate size] 3

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 4 seconds


16.
[Original predicate]
(((9 >= rt_input.n1) and (9 > rt_input.n1) and (5 >= rt_input.n1) and (4 > rt_input.n1) and (2 >= rt_input.n1)) or ((9 >= rt_input.n1) and (9 > rt_input.n1) and (5 >= rt_input.n1) and (4 > rt_input.n1) and !(2 >= rt_input.n1) and (2 >= rt_input.n2)) or ((9 >= rt_input.n1) and (9 > rt_input.n1) and (5 >= rt_input.n1) and !(4 > rt_input.n1)) or ((9 >= rt_input.n1) and (9 > rt_input.n1) and !(5 >= rt_input.n1) and (5 == rt_input.n2)) or ((9 >= rt_input.n1) and !(9 > rt_input.n1)))

[Original predicate size] 21

[Final output]
( or (> 3 rt_input.n1) ( or (and (> 3 rt_input.n2) (= 3 rt_input.n1)) ( or (and (> rt_input.n1 3) (> 6 rt_input.n1)) ( or (and (= 5 rt_input.n2) (and (> rt_input.n1 5) (> 9 rt_input.n1))) (= 9 rt_input.n1) ) ) ) ) 

[Final predicate size] 9

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 15 seconds


17.
[Original predicate]
((4 > rt_input.n1) and (5 > rt_input.n2) and !(2 >= rt_input.n2))

[Original predicate size] 3

[Final output]
(and (and (> rt_input.n2 2) (> 5 rt_input.n2)) (> 4 rt_input.n1)) 

[Final predicate size] 3

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 4 seconds


18.
[Original predicate]
(9 > rt_input.n1)

[Original predicate size] 1

[Final output]
(> 9 rt_input.n1) 

[Final predicate size] 1

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 0 seconds


19.
[Original predicate]
!(6 >= rt_input.n1)

[Original predicate size] 1

[Final output]
(> rt_input.n1 6) 

[Final predicate size] 1

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 0 seconds


20.
[Original predicate]
!(9 > rt_input.n1)

[Original predicate size] 1

[Final output]
(> rt_input.n1 8) 

[Final predicate size] 1

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 0 seconds


21.
[Original predicate]
(((9 >= rt_input.n1) and (9 > rt_input.n1) and (5 >= rt_input.n1) and (4 > rt_input.n1) and (2 >= rt_input.n1)) or ((9 >= rt_input.n1) and (9 > rt_input.n1) and (5 >= rt_input.n1) and (4 > rt_input.n1) and !(2 >= rt_input.n1) and (2 >= rt_input.n2)) or ((9 >= rt_input.n1) and (9 > rt_input.n1) and (5 >= rt_input.n1) and !(4 > rt_input.n1)) or ((9 >= rt_input.n1) and (9 > rt_input.n1) and !(5 >= rt_input.n1) and (5 == rt_input.n2)) or ((9 >= rt_input.n1) and !(9 > rt_input.n1)))

[Original predicate size] 21

[Final output]
( or (> 3 rt_input.n1) ( or (and (> 3 rt_input.n2) (= 3 rt_input.n1)) ( or (and (> rt_input.n1 3) (> 6 rt_input.n1)) ( or (and (= 5 rt_input.n2) (and (> rt_input.n1 5) (> 9 rt_input.n1))) (= 9 rt_input.n1) ) ) ) ) 

[Final predicate size] 9

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 15 seconds


22.
[Original predicate]
((!(2 >= rt_input.n2) and (7 > rt_input.n1) and (7 >= rt_input.n2)) or (!(2 >= rt_input.n2) and !(7 > rt_input.n1)))

[Original predicate size] 5

[Final output]
( or (and (and (> rt_input.n2 2) (> 8 rt_input.n2)) (> 7 rt_input.n1)) (and (> rt_input.n2 2) (> rt_input.n1 6)) ) 

[Final predicate size] 5

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 3 seconds


23.
[Original predicate]
(((3 == rt_input.n1) and (6 == rt_input.n2)) or ((3 == rt_input.n1) and !(6 == rt_input.n2) and (3 >= rt_input.n2) and !(2 >= rt_input.n2)) or (!(3 == rt_input.n1) and (6 == rt_input.n1) and (3 >= rt_input.n2)))

[Original predicate size] 9

[Final output]
( or (and (= 6 rt_input.n2) (= 3 rt_input.n1)) ( or (and (= 3 rt_input.n2) (= 3 rt_input.n1)) (and (> 4 rt_input.n2) (= 6 rt_input.n1)) ) ) 

[Final predicate size] 6

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 4 seconds


