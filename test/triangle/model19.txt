1.
[Original predicate]
((rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea > rt_input.trianglec) and !(rt_input.trianglea == rt_input.triangleb))

[Original predicate size] 3

[Final output]
(and (not (= rt_input.trianglea rt_input.triangleb)) (= rt_input.trianglec rt_input.trianglea)) 

[Final predicate size] 2

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 1 seconds


2.
[Original predicate]
((!(rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea == rt_input.trianglec) and (rt_input.triangleb >= rt_input.trianglec) and (rt_input.triangleb > rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea == rt_input.trianglec) and !(rt_input.triangleb >= rt_input.trianglec)))

[Original predicate size] 7

[Final output]
( or (and (and (not (= rt_input.trianglea rt_input.triangleb)) (> rt_input.triangleb rt_input.trianglec)) (not (= rt_input.trianglec rt_input.trianglea))) (and ( and (not (= rt_input.trianglea rt_input.triangleb)) (> rt_input.trianglec rt_input.triangleb)) (not (= rt_input.trianglec rt_input.trianglea))) ) 

[Final predicate size] 6

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 41 seconds


3.
[Original predicate]
(((rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea >= rt_input.trianglec) and (rt_input.trianglea > rt_input.trianglec)) or ((rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea >= rt_input.trianglec)))

[Original predicate size] 5

[Final output]
( or (and (= rt_input.trianglea rt_input.triangleb) (> rt_input.trianglea rt_input.trianglec)) (and (= rt_input.trianglea rt_input.triangleb) (> rt_input.trianglec rt_input.trianglea)) ) 

[Final predicate size] 4

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 2 seconds


4.
[Original predicate]
((rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea > rt_input.trianglec))

[Original predicate size] 3

[Final output]
(and (= rt_input.trianglea rt_input.triangleb) (= rt_input.trianglec rt_input.trianglea)) 

[Final predicate size] 2

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 1 seconds


5.
[Original predicate]
((rt_input.triangleb >= rt_input.trianglec) and !(rt_input.triangleb > rt_input.trianglec) and !(rt_input.trianglea == rt_input.triangleb))

[Original predicate size] 3

[Final output]
( and (not (= rt_input.trianglea rt_input.triangleb)) (= rt_input.trianglec rt_input.triangleb)) 

[Final predicate size] 2

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 21 seconds


6.
[Original predicate]
((!(rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea == rt_input.trianglec) and (rt_input.triangleb >= rt_input.trianglec) and (rt_input.triangleb > rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea == rt_input.trianglec) and !(rt_input.triangleb >= rt_input.trianglec)))

[Original predicate size] 7

[Final output]
( or (and (and (not (= rt_input.trianglea rt_input.triangleb)) (> rt_input.triangleb rt_input.trianglec)) (not (= rt_input.trianglec rt_input.trianglea))) (and ( and (not (= rt_input.trianglea rt_input.triangleb)) (> rt_input.trianglec rt_input.triangleb)) (not (= rt_input.trianglec rt_input.trianglea))) ) 

[Final predicate size] 6

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 41 seconds


7.
[Original predicate]
(((rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea >= rt_input.trianglec) and (rt_input.trianglea > rt_input.trianglec)) or ((rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea >= rt_input.trianglec)))

[Original predicate size] 5

[Final output]
( or (and (= rt_input.trianglea rt_input.triangleb) (> rt_input.trianglea rt_input.trianglec)) (and (= rt_input.trianglea rt_input.triangleb) (> rt_input.trianglec rt_input.trianglea)) ) 

[Final predicate size] 4

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 2 seconds


8.
[Original predicate]
((rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea > rt_input.trianglec))

[Original predicate size] 3

[Final output]
(and (= rt_input.trianglea rt_input.triangleb) (= rt_input.trianglec rt_input.trianglea)) 

[Final predicate size] 2

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 1 seconds


9.
[Original predicate]
(!(rt_input.trianglea > rt_input.trianglec) and (rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea == rt_input.triangleb))

[Original predicate size] 3

[Final output]
(and (not (= rt_input.trianglea rt_input.triangleb)) (= rt_input.trianglec rt_input.trianglea)) 

[Final predicate size] 2

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 1 seconds


10.
[Original predicate]
((!(rt_input.trianglea == rt_input.trianglec) and !(rt_input.trianglea == rt_input.triangleb) and (rt_input.triangleb > rt_input.trianglec)) or (!(rt_input.trianglea == rt_input.trianglec) and !(rt_input.trianglea == rt_input.triangleb) and !(rt_input.triangleb > rt_input.trianglec) and !(rt_input.triangleb >= rt_input.trianglec)))

[Original predicate size] 7

[Final output]
( or (and ( and (not (= rt_input.trianglea rt_input.triangleb)) (> rt_input.triangleb rt_input.trianglec)) (not (= rt_input.trianglec rt_input.trianglea))) (and (and (not (= rt_input.trianglea rt_input.triangleb)) (> rt_input.trianglec rt_input.triangleb)) (not (= rt_input.trianglec rt_input.trianglea))) ) 

[Final predicate size] 6

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 44 seconds


11.
[Original predicate]
(!(rt_input.triangleb > rt_input.trianglec) and (rt_input.triangleb >= rt_input.trianglec) and !(rt_input.trianglea == rt_input.trianglec))

[Original predicate size] 3

[Final output]
(and (= rt_input.trianglec rt_input.triangleb) (not (= rt_input.trianglec rt_input.trianglea))) 

[Final predicate size] 2

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 1 seconds


12.
[Original predicate]
((rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea > rt_input.trianglec) and (rt_input.trianglea >= rt_input.trianglec))

[Original predicate size] 3

[Final output]
(and (= rt_input.trianglea rt_input.triangleb) (= rt_input.trianglec rt_input.trianglea)) 

[Final predicate size] 2

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 1 seconds


13.
[Original predicate]
(((9 > rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and (7 >= rt_input.trianglea) and (7 > rt_input.trianglec) and !(5 == rt_input.trianglec) and !(7 == rt_input.trianglea) and (2 == rt_input.trianglea) and (2 == rt_input.trianglec) and !(2 >= rt_input.triangleb)) or ((9 > rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and (7 >= rt_input.trianglea) and (7 > rt_input.trianglec) and !(5 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and (2 == rt_input.triangleb) and (2 >= rt_input.trianglea) and (1 >= rt_input.trianglec)) or ((9 > rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and (7 >= rt_input.trianglea) and (7 > rt_input.trianglec) and !(5 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and (2 == rt_input.triangleb) and !(2 >= rt_input.trianglea) and (5 >= rt_input.trianglec) and !(1 >= rt_input.trianglec) and (3 >= rt_input.trianglea) and (3 == rt_input.trianglec)) or ((9 > rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and (7 >= rt_input.trianglea) and (7 > rt_input.trianglec) and !(5 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and (2 == rt_input.triangleb) and !(2 >= rt_input.trianglea) and (5 >= rt_input.trianglec) and !(1 >= rt_input.trianglec) and !(3 >= rt_input.trianglea) and !(3 == rt_input.trianglec)) or ((9 > rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and (7 >= rt_input.trianglea) and (7 > rt_input.trianglec) and !(5 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and (2 == rt_input.triangleb) and !(2 >= rt_input.trianglea) and !(5 >= rt_input.trianglec)) or ((9 > rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and (7 >= rt_input.trianglea) and (7 > rt_input.trianglec) and !(5 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and !(2 == rt_input.triangleb) and (1 >= rt_input.trianglec) and !(5 >= rt_input.triangleb)) or ((9 > rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and (7 >= rt_input.trianglea) and (7 > rt_input.trianglec) and !(5 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea) and (5 >= rt_input.triangleb) and (5 > rt_input.trianglec) and !(3 == rt_input.triangleb) and (3 == rt_input.trianglea) and (3 >= rt_input.trianglec)) or ((9 > rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and (7 >= rt_input.trianglea) and (7 > rt_input.trianglec) and !(5 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea) and (5 >= rt_input.triangleb) and (5 > rt_input.trianglec) and !(3 == rt_input.triangleb) and !(3 == rt_input.trianglea) and !(5 > rt_input.triangleb) and !(3 >= rt_input.trianglec)) or ((9 > rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and (7 >= rt_input.trianglea) and (7 > rt_input.trianglec) and !(5 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and !(2 == rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea) and (5 >= rt_input.triangleb) and !(5 > rt_input.trianglec) and !(5 > rt_input.trianglea)) or ((9 > rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and (7 >= rt_input.trianglea) and !(7 > rt_input.trianglec) and (7 == rt_input.trianglea) and (5 == rt_input.triangleb)) or ((9 > rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(7 >= rt_input.trianglea) and !(9 > rt_input.trianglec) and !(9 > rt_input.trianglea)) or (!(9 > rt_input.triangleb) and (5 >= rt_input.trianglec) and (7 > rt_input.trianglea) and (2 >= rt_input.trianglec) and (2 == rt_input.trianglec) and !(1 >= rt_input.trianglea)) or (!(9 > rt_input.triangleb) and (5 >= rt_input.trianglec) and (7 > rt_input.trianglea) and (2 >= rt_input.trianglec) and !(2 == rt_input.trianglec) and (1 >= rt_input.trianglea)) or (!(9 > rt_input.triangleb) and (5 >= rt_input.trianglec) and (7 > rt_input.trianglea) and !(2 >= rt_input.trianglec) and !(2 >= rt_input.trianglea) and (5 > rt_input.trianglea) and !(5 == rt_input.trianglec) and (3 == rt_input.trianglec)) or (!(9 > rt_input.triangleb) and (5 >= rt_input.trianglec) and (7 > rt_input.trianglea) and !(2 >= rt_input.trianglec) and !(2 >= rt_input.trianglea) and (5 > rt_input.trianglea) and !(5 == rt_input.trianglec) and !(3 == rt_input.trianglec) and !(3 >= rt_input.trianglea)) or (!(9 > rt_input.triangleb) and (5 >= rt_input.trianglec) and (7 > rt_input.trianglea) and !(2 >= rt_input.trianglec) and !(2 >= rt_input.trianglea) and !(5 > rt_input.trianglea) and !(5 > rt_input.trianglec)))

[Original predicate size] 175

[Final output]
( or (and (and (or (> 7 rt_input.triangleb) (= 8 rt_input.triangleb)) (> rt_input.triangleb 2)) (and (= 2 rt_input.trianglea) (= 2 rt_input.trianglec))) ( or (and (= 2 rt_input.triangleb) (and (> 2 rt_input.trianglea) (> 2 rt_input.trianglec))) ( or (and (= 2 rt_input.triangleb) (and (= 3 rt_input.trianglea) (= 3 rt_input.trianglec))) ( or (and (= 2 rt_input.triangleb) (and (or (= 6 rt_input.trianglea) (= 4 rt_input.trianglea)) (= 4 rt_input.trianglec))) ( or (and (= 2 rt_input.triangleb) (and ( and ( and (not (= 7 rt_input.trianglea)) (not (= 2 rt_input.trianglea))) ( and (> rt_input.trianglea 2) (and (not (= 5 rt_input.trianglea)) (> 8 rt_input.trianglea)))) (= 6 rt_input.trianglec))) ( or (and (or (= 8 rt_input.triangleb) (= 6 rt_input.triangleb)) (and ( and (and (not (= 5 rt_input.trianglea)) (> 8 rt_input.trianglea)) ( and (not (= 7 rt_input.trianglea)) (not (= 2 rt_input.trianglea)))) (> 2 rt_input.trianglec))) ( or (and ( and (and (not (= 2 rt_input.triangleb)) (> 6 rt_input.triangleb)) ( and (not (= 3 rt_input.triangleb)) (or (> 7 rt_input.triangleb) (= 8 rt_input.triangleb)))) (and (= 3 rt_input.trianglea) (= 3 rt_input.trianglec))) ( or (and (= 5 rt_input.triangleb) (and (or (= 6 rt_input.trianglea) (= 4 rt_input.trianglea)) (= 4 rt_input.trianglec))) ( or (and (and (not (= 2 rt_input.triangleb)) (> 6 rt_input.triangleb)) (and (= 6 rt_input.trianglea) (= 6 rt_input.trianglec))) ( or (and (= 5 rt_input.triangleb) (and (= 7 rt_input.trianglea) (> rt_input.trianglec 6))) ( or (and (or (> 7 rt_input.triangleb) (= 8 rt_input.triangleb)) (and (> rt_input.trianglea 8) (> rt_input.trianglec 8))) ( or (and (> rt_input.triangleb 8) (and (and (> rt_input.trianglea 1) (> 7 rt_input.trianglea)) (= 2 rt_input.trianglec))) ( or (and (> rt_input.triangleb 8) (and (> 2 rt_input.trianglea) (> 2 rt_input.trianglec))) ( or (and (> rt_input.triangleb 8) (and (and (> rt_input.trianglea 2) (> 5 rt_input.trianglea)) (= 3 rt_input.trianglec))) ( or (and (> rt_input.triangleb 8) (and (= 4 rt_input.trianglea) (= 4 rt_input.trianglec))) (and (> rt_input.triangleb 8) (and (and (> rt_input.trianglea 4) (> 7 rt_input.trianglea)) (= 5 rt_input.trianglec))) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) 

[Final predicate size] 69

[Total time]
Total Conversion Time : 0 days, 0 hours, 8 minutes, 5 seconds


14.
[Original predicate]
(((7 > rt_input.trianglec) and (2 >= rt_input.triangleb) and (5 == rt_input.trianglea)) or ((7 > rt_input.trianglec) and (2 >= rt_input.triangleb) and !(5 == rt_input.trianglea) and (2 >= rt_input.trianglec) and !(2 >= rt_input.trianglea) and (1 >= rt_input.triangleb) and (2 == rt_input.trianglec)) or ((7 > rt_input.trianglec) and (2 >= rt_input.triangleb) and !(5 == rt_input.trianglea) and (2 >= rt_input.trianglec) and !(2 >= rt_input.trianglea) and !(1 >= rt_input.triangleb) and (1 >= rt_input.trianglec)) or ((7 > rt_input.trianglec) and (2 >= rt_input.triangleb) and !(5 == rt_input.trianglea) and !(2 >= rt_input.trianglec) and (7 > rt_input.trianglea) and (3 >= rt_input.trianglec) and !(3 == rt_input.trianglea) and (2 == rt_input.trianglea) and (1 >= rt_input.triangleb)) or ((7 > rt_input.trianglec) and (2 >= rt_input.triangleb) and !(5 == rt_input.trianglea) and !(2 >= rt_input.trianglec) and (7 > rt_input.trianglea) and (3 >= rt_input.trianglec) and !(3 == rt_input.trianglea) and !(2 == rt_input.trianglea)) or ((7 > rt_input.trianglec) and (2 >= rt_input.triangleb) and !(5 == rt_input.trianglea) and !(2 >= rt_input.trianglec) and (7 > rt_input.trianglea) and !(3 >= rt_input.trianglec) and (3 == rt_input.trianglea)) or ((7 > rt_input.trianglec) and (2 >= rt_input.triangleb) and !(5 == rt_input.trianglea) and !(2 >= rt_input.trianglec) and (7 > rt_input.trianglea) and !(3 >= rt_input.trianglec) and !(3 == rt_input.trianglea) and (1 >= rt_input.trianglea) and (2 == rt_input.triangleb)) or ((7 > rt_input.trianglec) and (2 >= rt_input.triangleb) and !(5 == rt_input.trianglea) and !(2 >= rt_input.trianglec) and !(7 > rt_input.trianglea)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and (2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and (5 > rt_input.triangleb) and (2 >= rt_input.trianglec)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and (2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and (5 > rt_input.triangleb) and !(2 >= rt_input.trianglec) and (5 >= rt_input.trianglec) and (3 == rt_input.trianglec) and !(3 == rt_input.triangleb)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and (2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and (5 > rt_input.triangleb) and !(2 >= rt_input.trianglec) and (5 >= rt_input.trianglec) and !(3 == rt_input.trianglec) and (3 >= rt_input.triangleb)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and (2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and (5 > rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(5 >= rt_input.trianglec)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and (2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and !(5 > rt_input.triangleb)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and (2 == rt_input.trianglec) and !(3 == rt_input.trianglea) and (3 == rt_input.triangleb)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and (2 == rt_input.trianglec) and !(3 == rt_input.trianglea) and !(3 == rt_input.triangleb) and (5 == rt_input.triangleb)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and (2 == rt_input.trianglec) and !(3 == rt_input.trianglea) and !(3 == rt_input.triangleb) and !(5 == rt_input.triangleb) and (2 >= rt_input.trianglea)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and (2 == rt_input.trianglec) and !(3 == rt_input.trianglea) and !(3 == rt_input.triangleb) and !(5 == rt_input.triangleb) and !(2 >= rt_input.trianglea) and (9 > rt_input.triangleb) and (7 > rt_input.triangleb) and (5 == rt_input.trianglea)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and (2 == rt_input.trianglec) and !(3 == rt_input.trianglea) and !(3 == rt_input.triangleb) and !(5 == rt_input.triangleb) and !(2 >= rt_input.trianglea) and (9 > rt_input.triangleb) and (7 > rt_input.triangleb) and !(5 == rt_input.trianglea) and (9 == rt_input.trianglea)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and (2 == rt_input.trianglec) and !(3 == rt_input.trianglea) and !(3 == rt_input.triangleb) and !(5 == rt_input.triangleb) and !(2 >= rt_input.trianglea) and (9 > rt_input.triangleb) and !(7 > rt_input.triangleb)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and (7 == rt_input.trianglea) and !(7 == rt_input.triangleb)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and !(7 == rt_input.trianglea) and (7 == rt_input.triangleb)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(7 == rt_input.triangleb) and (9 == rt_input.trianglea) and (9 > rt_input.triangleb) and !(5 == rt_input.trianglec) and !(3 == rt_input.trianglec)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(9 == rt_input.trianglea) and (7 > rt_input.trianglea) and (5 >= rt_input.triangleb) and (1 >= rt_input.trianglec) and (3 == rt_input.trianglea) and !(3 == rt_input.triangleb)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(9 == rt_input.trianglea) and (7 > rt_input.trianglea) and (5 >= rt_input.triangleb) and (1 >= rt_input.trianglec) and !(3 == rt_input.trianglea)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(9 == rt_input.trianglea) and (7 > rt_input.trianglea) and (5 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and (1 >= rt_input.trianglea) and (5 >= rt_input.trianglec) and (3 >= rt_input.triangleb) and !(3 >= rt_input.trianglec)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(9 == rt_input.trianglea) and (7 > rt_input.trianglea) and (5 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and (1 >= rt_input.trianglea) and (5 >= rt_input.trianglec) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglec)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(9 == rt_input.trianglea) and (7 > rt_input.trianglea) and (5 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and (1 >= rt_input.trianglea) and !(5 >= rt_input.trianglec)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(9 == rt_input.trianglea) and (7 > rt_input.trianglea) and (5 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea) and (5 == rt_input.trianglec) and (3 >= rt_input.triangleb)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(9 == rt_input.trianglea) and (7 > rt_input.trianglea) and (5 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.trianglea) and !(5 == rt_input.trianglec) and !(5 > rt_input.triangleb) and (3 >= rt_input.trianglec) and !(5 == rt_input.trianglea)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(9 == rt_input.trianglea) and (7 > rt_input.trianglea) and !(5 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and (5 >= rt_input.trianglea) and (9 == rt_input.triangleb) and (1 >= rt_input.trianglea)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(9 == rt_input.trianglea) and (7 > rt_input.trianglea) and !(5 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and (5 >= rt_input.trianglea) and (9 == rt_input.triangleb) and !(1 >= rt_input.trianglea) and (5 == rt_input.trianglea) and (5 > rt_input.trianglec)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(9 == rt_input.trianglea) and (7 > rt_input.trianglea) and !(5 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and (5 >= rt_input.trianglea) and (9 == rt_input.triangleb) and !(1 >= rt_input.trianglea) and !(5 == rt_input.trianglea) and (5 == rt_input.trianglec)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(9 == rt_input.trianglea) and (7 > rt_input.trianglea) and !(5 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and (5 >= rt_input.trianglea) and (9 == rt_input.triangleb) and !(1 >= rt_input.trianglea) and !(5 == rt_input.trianglea) and !(5 == rt_input.trianglec) and (3 >= rt_input.trianglea) and !(3 >= rt_input.trianglec)) or ((7 > rt_input.trianglec) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(2 == rt_input.trianglec) and !(7 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(9 == rt_input.trianglea) and (7 > rt_input.trianglea) and !(5 >= rt_input.triangleb) and !(1 >= rt_input.trianglec) and (5 >= rt_input.trianglea) and !(9 == rt_input.triangleb)) or (!(7 > rt_input.trianglec) and (7 >= rt_input.triangleb) and (9 > rt_input.trianglea) and (7 == rt_input.trianglea) and !(5 == rt_input.triangleb) and (7 > rt_input.triangleb)) or (!(7 > rt_input.trianglec) and (7 >= rt_input.triangleb) and (9 > rt_input.trianglea) and !(7 == rt_input.trianglea) and (5 == rt_input.trianglea) and (5 > rt_input.triangleb)) or (!(7 > rt_input.trianglec) and (7 >= rt_input.triangleb) and (9 > rt_input.trianglea) and !(7 == rt_input.trianglea) and (5 == rt_input.trianglea) and !(5 > rt_input.triangleb) and (7 > rt_input.triangleb) and !(5 == rt_input.triangleb)) or (!(7 > rt_input.trianglec) and (7 >= rt_input.triangleb) and (9 > rt_input.trianglea) and !(7 == rt_input.trianglea) and !(5 == rt_input.trianglea) and (5 == rt_input.triangleb)) or (!(7 > rt_input.trianglec) and (7 >= rt_input.triangleb) and (9 > rt_input.trianglea) and !(7 == rt_input.trianglea) and !(5 == rt_input.trianglea) and !(5 == rt_input.triangleb) and (1 >= rt_input.trianglea) and !(5 >= rt_input.triangleb)) or (!(7 > rt_input.trianglec) and (7 >= rt_input.triangleb) and (9 > rt_input.trianglea) and !(7 == rt_input.trianglea) and !(5 == rt_input.trianglea) and !(5 == rt_input.triangleb) and !(1 >= rt_input.trianglea) and (1 >= rt_input.triangleb)) or (!(7 > rt_input.trianglec) and (7 >= rt_input.triangleb) and (9 > rt_input.trianglea) and !(7 == rt_input.trianglea) and !(5 == rt_input.trianglea) and !(5 == rt_input.triangleb) and !(1 >= rt_input.trianglea) and !(1 >= rt_input.triangleb) and (9 > rt_input.trianglec) and (2 >= rt_input.trianglea) and !(2 >= rt_input.triangleb)) or (!(7 > rt_input.trianglec) and (7 >= rt_input.triangleb) and (9 > rt_input.trianglea) and !(7 == rt_input.trianglea) and !(5 == rt_input.trianglea) and !(5 == rt_input.triangleb) and !(1 >= rt_input.trianglea) and !(1 >= rt_input.triangleb) and (9 > rt_input.trianglec) and !(2 >= rt_input.trianglea)) or (!(7 > rt_input.trianglec) and (7 >= rt_input.triangleb) and (9 > rt_input.trianglea) and !(7 == rt_input.trianglea) and !(5 == rt_input.trianglea) and !(5 == rt_input.triangleb) and !(1 >= rt_input.trianglea) and !(1 >= rt_input.triangleb) and !(9 > rt_input.trianglec) and (5 > rt_input.triangleb) and (3 == rt_input.trianglea) and (2 >= rt_input.triangleb)) or (!(7 > rt_input.trianglec) and (7 >= rt_input.triangleb) and (9 > rt_input.trianglea) and !(7 == rt_input.trianglea) and !(5 == rt_input.trianglea) and !(5 == rt_input.triangleb) and !(1 >= rt_input.trianglea) and !(1 >= rt_input.triangleb) and !(9 > rt_input.trianglec) and (5 > rt_input.triangleb) and !(3 == rt_input.trianglea)))

[Original predicate size] 416

[Final output]
( or (and (> 3 rt_input.triangleb) (and (= 5 rt_input.trianglea) (> 7 rt_input.trianglec))) ( or (and (> 2 rt_input.triangleb) (and ( and (not (= 5 rt_input.trianglea)) (> rt_input.trianglea 2)) (= 2 rt_input.trianglec))) ( or (and (= 2 rt_input.triangleb) (and ( and (not (= 5 rt_input.trianglea)) (> rt_input.trianglea 2)) (> 2 rt_input.trianglec))) ( or (and (> 2 rt_input.triangleb) (and (= 2 rt_input.trianglea) (= 3 rt_input.trianglec))) ( or (and (> 3 rt_input.triangleb) (and ( and (or (> 5 rt_input.trianglea) (= 6 rt_input.trianglea)) (or (> rt_input.trianglea 3) (> 2 rt_input.trianglea))) (= 3 rt_input.trianglec))) ( or (and (> 3 rt_input.triangleb) (and (= 3 rt_input.trianglea) (and (> rt_input.trianglec 3) (> 7 rt_input.trianglec)))) ( or (and (= 2 rt_input.triangleb) (and (> 2 rt_input.trianglea) (and (> rt_input.trianglec 3) (> 7 rt_input.trianglec)))) ( or (and (> 3 rt_input.triangleb) (and (> rt_input.trianglea 6) (and (> rt_input.trianglec 2) (> 7 rt_input.trianglec)))) ( or (and (and (> rt_input.triangleb 2) (> 5 rt_input.triangleb)) (and (= 2 rt_input.trianglea) (> 2 rt_input.trianglec))) ( or (and (= 4 rt_input.triangleb) (and (= 2 rt_input.trianglea) (= 3 rt_input.trianglec))) ( or (and (= 3 rt_input.triangleb) (and (= 2 rt_input.trianglea) (and (> rt_input.trianglec 3) (> 6 rt_input.trianglec)))) ( or (and (and (> rt_input.triangleb 2) (> 5 rt_input.triangleb)) (and (= 2 rt_input.trianglea) (= 6 rt_input.trianglec))) ( or (and (> rt_input.triangleb 4) (and (= 2 rt_input.trianglea) (and (not (= 2 rt_input.trianglec)) (> 7 rt_input.trianglec)))) ( or (and (= 3 rt_input.triangleb) (and (or (> rt_input.trianglea 3) (> 2 rt_input.trianglea)) (= 2 rt_input.trianglec))) ( or (and (= 5 rt_input.triangleb) (and (or (> rt_input.trianglea 3) (> 2 rt_input.trianglea)) (= 2 rt_input.trianglec))) ( or (and (or (> rt_input.triangleb 5) (= 4 rt_input.triangleb)) (and (> 2 rt_input.trianglea) (= 2 rt_input.trianglec))) ( or (and (or (= 6 rt_input.triangleb) (= 4 rt_input.triangleb)) (and (= 5 rt_input.trianglea) (= 2 rt_input.trianglec))) ( or (and (or (= 6 rt_input.triangleb) (= 4 rt_input.triangleb)) (and (= 9 rt_input.trianglea) (= 2 rt_input.trianglec))) ( or (and (and (> rt_input.triangleb 6) (> 9 rt_input.triangleb)) (and (> rt_input.trianglea 3) (= 2 rt_input.trianglec))) ( or (and ( and (> rt_input.triangleb 2) (not (= 7 rt_input.triangleb))) (and (= 7 rt_input.trianglea) (and (not (= 2 rt_input.trianglec)) (> 7 rt_input.trianglec)))) ( or (and (= 7 rt_input.triangleb) (and ( and (not (= 2 rt_input.trianglea)) (not (= 7 rt_input.trianglea))) (and (not (= 2 rt_input.trianglec)) (> 7 rt_input.trianglec)))) ( or (and (and (or (> 7 rt_input.triangleb) (= 8 rt_input.triangleb)) (> rt_input.triangleb 2)) (and (= 9 rt_input.trianglea) ( and (and (not (= 2 rt_input.trianglec)) (> 7 rt_input.trianglec)) (not (or (= 5 rt_input.trianglec) (= 3 rt_input.trianglec)))))) ( or (and (and (> rt_input.triangleb 3) (> 6 rt_input.triangleb)) (and (= 3 rt_input.trianglea) (> 2 rt_input.trianglec))) ( or (and (and (> rt_input.triangleb 2) (> 6 rt_input.triangleb)) (and ( and (> 7 rt_input.trianglea) ( and (not (= 3 rt_input.trianglea)) ( and (not (= 2 rt_input.trianglea)) (not (= 7 rt_input.trianglea))))) (> 2 rt_input.trianglec))) ( or (and (= 3 rt_input.triangleb) (and (> 2 rt_input.trianglea) (and (> rt_input.trianglec 3) (> 6 rt_input.trianglec)))) ( or (and (and (> rt_input.triangleb 3) (> 6 rt_input.triangleb)) (and (> 2 rt_input.trianglea) (= 3 rt_input.trianglec))) ( or (and (and (> rt_input.triangleb 2) (> 6 rt_input.triangleb)) (and (> 2 rt_input.trianglea) (= 6 rt_input.trianglec))) ( or (and (= 3 rt_input.triangleb) (and (and (> rt_input.trianglea 2) (> 7 rt_input.trianglea)) (= 5 rt_input.trianglec))) ( or (and (= 5 rt_input.triangleb) (and (and (or (> 5 rt_input.trianglea) (= 6 rt_input.trianglea)) (> rt_input.trianglea 2)) (= 3 rt_input.trianglec))) ( or (and (= 9 rt_input.triangleb) (and (> 2 rt_input.trianglea) (and (> rt_input.trianglec 2) (> 7 rt_input.trianglec)))) ( or (and (= 9 rt_input.triangleb) (and (= 5 rt_input.trianglea) (and (> rt_input.trianglec 2) (> 5 rt_input.trianglec)))) ( or (and (= 9 rt_input.triangleb) (and (and (> rt_input.trianglea 2) (> 5 rt_input.trianglea)) (= 5 rt_input.trianglec))) ( or (and (= 9 rt_input.triangleb) (and (= 3 rt_input.trianglea) (or (= 6 rt_input.trianglec) (= 4 rt_input.trianglec)))) ( or (and ( and ( and (> rt_input.triangleb 2) (not (= 7 rt_input.triangleb))) ( and (> rt_input.triangleb 5) (not (= 9 rt_input.triangleb)))) (and (and (not (= 2 rt_input.trianglea)) (> 6 rt_input.trianglea)) (and (> rt_input.trianglec 2) (> 7 rt_input.trianglec)))) ( or (and (or (> 5 rt_input.triangleb) (= 6 rt_input.triangleb)) (and (= 7 rt_input.trianglea) (> rt_input.trianglec 6))) ( or (and (> 5 rt_input.triangleb) (and (= 5 rt_input.trianglea) (> rt_input.trianglec 6))) ( or (and (= 6 rt_input.triangleb) (and (= 5 rt_input.trianglea) (> rt_input.trianglec 6))) ( or (and (= 5 rt_input.triangleb) (and (or (or (> 5 rt_input.trianglea) (= 8 rt_input.trianglea)) (= 6 rt_input.trianglea)) (> rt_input.trianglec 6))) ( or (and (and (> rt_input.triangleb 5) (> 8 rt_input.triangleb)) (and (> 2 rt_input.trianglea) (> rt_input.trianglec 6))) ( or (and (> 2 rt_input.triangleb) (and ( and (or (> 7 rt_input.trianglea) (= 8 rt_input.trianglea)) ( and (not (= 5 rt_input.trianglea)) (> rt_input.trianglea 1))) (> rt_input.trianglec 6))) ( or (and ( and (and (not (= 5 rt_input.triangleb)) (> 8 rt_input.triangleb)) (> rt_input.triangleb 2)) (and (= 2 rt_input.trianglea) (and (> rt_input.trianglec 6) (> 9 rt_input.trianglec)))) ( or (and ( and (> rt_input.triangleb 1) (and (not (= 5 rt_input.triangleb)) (> 8 rt_input.triangleb))) (and ( and ( and (not (= 5 rt_input.trianglea)) (> rt_input.trianglea 1)) (and (or (> 7 rt_input.trianglea) (= 8 rt_input.trianglea)) (> rt_input.trianglea 2))) (and (> rt_input.trianglec 6) (> 9 rt_input.trianglec)))) ( or (and (= 2 rt_input.triangleb) (and (= 3 rt_input.trianglea) (> rt_input.trianglec 8))) (and (and (> rt_input.triangleb 1) (> 5 rt_input.triangleb)) (and ( and ( and (not (= 5 rt_input.trianglea)) (> rt_input.trianglea 1)) ( and (not (= 3 rt_input.trianglea)) (or (> 7 rt_input.trianglea) (= 8 rt_input.trianglea)))) (> rt_input.trianglec 8))) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) 

[Final predicate size] 201

[Total time]
Total Conversion Time : 0 days, 0 hours, 20 minutes, 44 seconds


15.
[Original predicate]
(((9 > rt_input.triangleb) and !(9 == rt_input.trianglea) and (5 == rt_input.triangleb) and (5 == rt_input.trianglea) and !(5 == rt_input.trianglec)) or ((9 > rt_input.triangleb) and !(9 == rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglea) and (7 == rt_input.triangleb) and (3 == rt_input.trianglec)) or ((9 > rt_input.triangleb) and !(9 == rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(7 == rt_input.trianglea) and (3 >= rt_input.triangleb) and (3 >= rt_input.trianglea) and (3 == rt_input.trianglec) and (2 == rt_input.triangleb) and (2 == rt_input.trianglea)) or ((9 > rt_input.triangleb) and !(9 == rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(7 == rt_input.trianglea) and (3 >= rt_input.triangleb) and (3 >= rt_input.trianglea) and !(3 == rt_input.trianglec) and !(5 == rt_input.trianglec) and (2 == rt_input.trianglea) and (2 == rt_input.triangleb) and !(2 == rt_input.trianglec)) or ((9 > rt_input.triangleb) and !(9 == rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(7 == rt_input.trianglea) and (3 >= rt_input.triangleb) and (3 >= rt_input.trianglea) and !(3 == rt_input.trianglec) and !(5 == rt_input.trianglec) and !(2 == rt_input.trianglea) and !(2 == rt_input.triangleb) and (2 >= rt_input.trianglec) and (3 == rt_input.triangleb) and (3 == rt_input.trianglea)) or ((9 > rt_input.triangleb) and !(9 == rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(7 == rt_input.trianglea) and (3 >= rt_input.triangleb) and (3 >= rt_input.trianglea) and !(3 == rt_input.trianglec) and !(5 == rt_input.trianglec) and !(2 == rt_input.trianglea) and !(2 == rt_input.triangleb) and (2 >= rt_input.trianglec) and !(3 == rt_input.triangleb) and !(1 >= rt_input.trianglec) and (1 >= rt_input.trianglea)) or ((9 > rt_input.triangleb) and !(9 == rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(7 == rt_input.trianglea) and (3 >= rt_input.triangleb) and (3 >= rt_input.trianglea) and !(3 == rt_input.trianglec) and !(5 == rt_input.trianglec) and !(2 == rt_input.trianglea) and !(2 == rt_input.triangleb) and !(2 >= rt_input.trianglec) and (9 == rt_input.trianglec)) or ((9 > rt_input.triangleb) and !(9 == rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(7 == rt_input.trianglea) and (3 >= rt_input.triangleb) and (3 >= rt_input.trianglea) and !(3 == rt_input.trianglec) and !(5 == rt_input.trianglec) and !(2 == rt_input.trianglea) and !(2 == rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(9 == rt_input.trianglec) and (1 >= rt_input.triangleb) and (1 >= rt_input.trianglea)) or ((9 > rt_input.triangleb) and !(9 == rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(7 == rt_input.trianglea) and (3 >= rt_input.triangleb) and (3 >= rt_input.trianglea) and !(3 == rt_input.trianglec) and !(5 == rt_input.trianglec) and !(2 == rt_input.trianglea) and !(2 == rt_input.triangleb) and !(2 >= rt_input.trianglec) and !(9 == rt_input.trianglec) and !(1 >= rt_input.triangleb) and (3 == rt_input.trianglea)) or ((9 > rt_input.triangleb) and !(9 == rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(7 == rt_input.trianglea) and !(3 >= rt_input.triangleb) and !(3 >= rt_input.trianglea) and (2 >= rt_input.trianglec)) or ((9 > rt_input.triangleb) and !(9 == rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(7 == rt_input.trianglea) and !(3 >= rt_input.triangleb) and !(3 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and (5 == rt_input.trianglec)) or ((9 > rt_input.triangleb) and !(9 == rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(7 == rt_input.trianglea) and !(3 >= rt_input.triangleb) and !(3 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and !(5 == rt_input.trianglec) and (9 > rt_input.trianglec) and (7 > rt_input.trianglec) and (3 >= rt_input.trianglec) and (5 >= rt_input.triangleb)) or ((9 > rt_input.triangleb) and !(9 == rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(7 == rt_input.trianglea) and !(3 >= rt_input.triangleb) and !(3 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and !(5 == rt_input.trianglec) and (9 > rt_input.trianglec) and (7 > rt_input.trianglec) and (3 >= rt_input.trianglec) and !(5 >= rt_input.triangleb) and !(5 >= rt_input.trianglea)) or ((9 > rt_input.triangleb) and !(9 == rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(7 == rt_input.trianglea) and !(3 >= rt_input.triangleb) and !(3 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and !(5 == rt_input.trianglec) and (9 > rt_input.trianglec) and (7 > rt_input.trianglec) and !(3 >= rt_input.trianglec) and (7 >= rt_input.triangleb) and (5 > rt_input.trianglea) and !(5 > rt_input.trianglec)) or ((9 > rt_input.triangleb) and !(9 == rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(7 == rt_input.trianglea) and !(3 >= rt_input.triangleb) and !(3 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and !(5 == rt_input.trianglec) and (9 > rt_input.trianglec) and (7 > rt_input.trianglec) and !(3 >= rt_input.trianglec) and !(7 >= rt_input.triangleb)) or ((9 > rt_input.triangleb) and !(9 == rt_input.trianglea) and !(5 == rt_input.triangleb) and !(5 == rt_input.trianglea) and !(7 == rt_input.triangleb) and !(7 == rt_input.trianglea) and !(3 >= rt_input.triangleb) and !(3 >= rt_input.trianglea) and !(2 >= rt_input.trianglec) and !(5 == rt_input.trianglec) and !(9 > rt_input.trianglec)) or (!(9 > rt_input.triangleb) and !(9 > rt_input.trianglea) and (9 > rt_input.trianglec)))

[Original predicate size] 204

[Final output]
( or (and (= 5 rt_input.triangleb) (and (= 5 rt_input.trianglea) (not (= 5 rt_input.trianglec)))) ( or (and (= 7 rt_input.triangleb) (and ( and (not (= 9 rt_input.trianglea)) (not (= 5 rt_input.trianglea))) (= 3 rt_input.trianglec))) ( or (and (= 2 rt_input.triangleb) (and (= 2 rt_input.trianglea) (= 3 rt_input.trianglec))) ( or (and (= 2 rt_input.triangleb) (and (= 2 rt_input.trianglea) ( and (not (= 2 rt_input.trianglec)) (not (or (= 5 rt_input.trianglec) (= 3 rt_input.trianglec)))))) ( or (and (= 3 rt_input.triangleb) (and (= 3 rt_input.trianglea) (> 3 rt_input.trianglec))) ( or (and (> 2 rt_input.triangleb) (and (> 2 rt_input.trianglea) (= 2 rt_input.trianglec))) ( or (and (or (> 2 rt_input.triangleb) (= 3 rt_input.triangleb)) (and (or (> 2 rt_input.trianglea) (= 3 rt_input.trianglea)) (= 9 rt_input.trianglec))) ( or (and (> 2 rt_input.triangleb) (and (> 2 rt_input.trianglea) ( and (not (or (= 5 rt_input.trianglec) (= 3 rt_input.trianglec))) ( and (> rt_input.trianglec 2) (not (= 9 rt_input.trianglec)))))) ( or (and (= 3 rt_input.triangleb) (and (= 3 rt_input.trianglea) ( and (not (or (= 5 rt_input.trianglec) (= 3 rt_input.trianglec))) ( and (> rt_input.trianglec 2) (not (= 9 rt_input.trianglec)))))) ( or (and (or (or (= 8 rt_input.triangleb) (= 6 rt_input.triangleb)) (= 4 rt_input.triangleb)) (and ( and ( and (not (= 9 rt_input.trianglea)) (not (= 5 rt_input.trianglea))) ( and (not (= 7 rt_input.trianglea)) (> rt_input.trianglea 3))) (> 3 rt_input.trianglec))) ( or (and (or (or (= 8 rt_input.triangleb) (= 6 rt_input.triangleb)) (= 4 rt_input.triangleb)) (and ( and ( and (not (= 9 rt_input.trianglea)) (not (= 5 rt_input.trianglea))) ( and (not (= 7 rt_input.trianglea)) (> rt_input.trianglea 3))) (= 5 rt_input.trianglec))) ( or (and (= 4 rt_input.triangleb) (and ( and ( and (not (= 9 rt_input.trianglea)) (not (= 5 rt_input.trianglea))) ( and (not (= 7 rt_input.trianglea)) (> rt_input.trianglea 3))) (= 3 rt_input.trianglec))) ( or (and (or (= 8 rt_input.triangleb) (= 6 rt_input.triangleb)) (and (or (or (> rt_input.trianglea 9) (= 8 rt_input.trianglea)) (= 6 rt_input.trianglea)) (= 3 rt_input.trianglec))) ( or (and (or (= 6 rt_input.triangleb) (= 4 rt_input.triangleb)) (and (= 4 rt_input.trianglea) (= 6 rt_input.trianglec))) ( or (and (= 8 rt_input.triangleb) (and ( and ( and (not (= 9 rt_input.trianglea)) (not (= 5 rt_input.trianglea))) ( and (not (= 7 rt_input.trianglea)) (> rt_input.trianglea 3))) (or (= 6 rt_input.trianglec) (= 4 rt_input.trianglec)))) ( or (and (or (or (= 8 rt_input.triangleb) (= 6 rt_input.triangleb)) (= 4 rt_input.triangleb)) (and ( and ( and (not (= 9 rt_input.trianglea)) (not (= 5 rt_input.trianglea))) ( and (not (= 7 rt_input.trianglea)) (> rt_input.trianglea 3))) (> rt_input.trianglec 8))) (and (> rt_input.triangleb 8) (and (> rt_input.trianglea 8) (> 9 rt_input.trianglec))) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) 

[Final predicate size] 88

[Total time]
Total Conversion Time : 0 days, 0 hours, 12 minutes, 34 seconds


16.
[Original predicate]
(((7 >= rt_input.trianglea) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (3 >= rt_input.trianglec) and (3 >= rt_input.triangleb) and (7 > rt_input.trianglea) and (3 == rt_input.trianglea) and (1 >= rt_input.trianglec) and (2 >= rt_input.triangleb)) or ((7 >= rt_input.trianglea) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (3 >= rt_input.trianglec) and (3 >= rt_input.triangleb) and (7 > rt_input.trianglea) and !(3 == rt_input.trianglea) and (1 >= rt_input.trianglec) and (1 >= rt_input.triangleb) and !(1 >= rt_input.trianglea)) or ((7 >= rt_input.trianglea) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (3 >= rt_input.trianglec) and (3 >= rt_input.triangleb) and (7 > rt_input.trianglea) and !(3 == rt_input.trianglea) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb) and (2 == rt_input.trianglea) and !(2 >= rt_input.trianglec) and !(2 >= rt_input.triangleb)) or ((7 >= rt_input.trianglea) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (3 >= rt_input.trianglec) and (3 >= rt_input.triangleb) and (7 > rt_input.trianglea) and !(3 == rt_input.trianglea) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and (2 >= rt_input.triangleb) and (2 >= rt_input.trianglec)) or ((7 >= rt_input.trianglea) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (3 >= rt_input.trianglec) and (3 >= rt_input.triangleb) and (7 > rt_input.trianglea) and !(3 == rt_input.trianglea) and !(1 >= rt_input.trianglec) and !(1 >= rt_input.triangleb) and !(2 == rt_input.trianglea) and !(2 >= rt_input.triangleb) and !(2 == rt_input.trianglec)) or ((7 >= rt_input.trianglea) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and (3 >= rt_input.trianglec) and (3 >= rt_input.triangleb) and !(7 > rt_input.trianglea) and !(3 == rt_input.trianglec)) or ((7 >= rt_input.trianglea) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and !(3 >= rt_input.trianglec) and !(3 >= rt_input.triangleb) and (3 >= rt_input.trianglea)) or ((7 >= rt_input.trianglea) and (5 > rt_input.triangleb) and (5 > rt_input.trianglec) and !(3 >= rt_input.trianglec) and !(3 >= rt_input.triangleb) and !(3 >= rt_input.trianglea) and !(5 > rt_input.trianglea)) or ((7 >= rt_input.trianglea) and !(5 > rt_input.triangleb) and !(5 > rt_input.trianglec) and (5 >= rt_input.trianglea) and (7 > rt_input.triangleb) and (5 >= rt_input.trianglec) and !(5 == rt_input.trianglea)) or ((7 >= rt_input.trianglea) and !(5 > rt_input.triangleb) and !(5 > rt_input.trianglec) and (5 >= rt_input.trianglea) and !(7 > rt_input.triangleb) and !(5 == rt_input.trianglec) and !(1 >= rt_input.trianglea) and (9 == rt_input.trianglec)) or ((7 >= rt_input.trianglea) and !(5 > rt_input.triangleb) and !(5 > rt_input.trianglec) and (5 >= rt_input.trianglea) and !(7 > rt_input.triangleb) and !(5 == rt_input.trianglec) and !(1 >= rt_input.trianglea) and !(9 == rt_input.trianglec) and !(5 > rt_input.trianglea)) or (!(7 >= rt_input.trianglea) and (3 == rt_input.trianglec)) or (!(7 >= rt_input.trianglea) and !(3 == rt_input.trianglec) and !(3 == rt_input.triangleb) and (7 > rt_input.triangleb) and !(9 == rt_input.trianglec) and (1 >= rt_input.trianglec)) or (!(7 >= rt_input.trianglea) and !(3 == rt_input.trianglec) and !(3 == rt_input.triangleb) and (7 > rt_input.triangleb) and !(9 == rt_input.trianglec) and !(1 >= rt_input.trianglec) and (5 == rt_input.trianglec)) or (!(7 >= rt_input.trianglea) and !(3 == rt_input.trianglec) and !(3 == rt_input.triangleb) and (7 > rt_input.triangleb) and !(9 == rt_input.trianglec) and !(1 >= rt_input.trianglec) and !(5 == rt_input.trianglec) and (2 == rt_input.triangleb) and (2 >= rt_input.trianglec)) or (!(7 >= rt_input.trianglea) and !(3 == rt_input.trianglec) and !(3 == rt_input.triangleb) and (7 > rt_input.triangleb) and !(9 == rt_input.trianglec) and !(1 >= rt_input.trianglec) and !(5 == rt_input.trianglec) and !(2 == rt_input.triangleb) and (9 > rt_input.trianglea) and !(5 >= rt_input.trianglec)) or (!(7 >= rt_input.trianglea) and !(3 == rt_input.trianglec) and !(3 == rt_input.triangleb) and !(7 > rt_input.triangleb) and (9 == rt_input.trianglec) and !(9 == rt_input.trianglea)))

[Original predicate size] 139

[Final output]
( or (and (> 3 rt_input.triangleb) (and (= 3 rt_input.trianglea) (> 2 rt_input.trianglec))) ( or (and (> 2 rt_input.triangleb) (and ( and (> 7 rt_input.trianglea) (or (> rt_input.trianglea 3) (= 2 rt_input.trianglea))) (> 2 rt_input.trianglec))) ( or (and (= 3 rt_input.triangleb) (and (= 2 rt_input.trianglea) (= 3 rt_input.trianglec))) ( or (and (= 2 rt_input.triangleb) (and ( and (> 7 rt_input.trianglea) (or (> rt_input.trianglea 3) (> 2 rt_input.trianglea))) (= 2 rt_input.trianglec))) ( or (and (= 3 rt_input.triangleb) (and ( and (> 7 rt_input.trianglea) (or (> rt_input.trianglea 3) (> 2 rt_input.trianglea))) (= 3 rt_input.trianglec))) ( or (and (> 4 rt_input.triangleb) (and (= 7 rt_input.trianglea) (> 3 rt_input.trianglec))) ( or (and (= 4 rt_input.triangleb) (and (> 4 rt_input.trianglea) (= 4 rt_input.trianglec))) ( or (and (= 4 rt_input.triangleb) (and (and (> rt_input.trianglea 4) (> 8 rt_input.trianglea)) (= 4 rt_input.trianglec))) ( or (and (and (> rt_input.triangleb 4) (> 7 rt_input.triangleb)) (and (> 5 rt_input.trianglea) (= 5 rt_input.trianglec))) ( or (and (> rt_input.triangleb 6) (and (and (> rt_input.trianglea 1) (> 6 rt_input.trianglea)) (= 9 rt_input.trianglec))) ( or (and (> rt_input.triangleb 6) (and (= 5 rt_input.trianglea) ( and (not (= 9 rt_input.trianglec)) (> rt_input.trianglec 5)))) ( or (and (> rt_input.trianglea 7) (= 3 rt_input.trianglec)) ( or (and (and (not (= 3 rt_input.triangleb)) (> 7 rt_input.triangleb)) (and (> rt_input.trianglea 7) (> 2 rt_input.trianglec))) ( or (and (and (not (= 3 rt_input.triangleb)) (> 7 rt_input.triangleb)) (and (> rt_input.trianglea 7) (= 5 rt_input.trianglec))) ( or (and (= 2 rt_input.triangleb) (and (> rt_input.trianglea 7) (= 2 rt_input.trianglec))) ( or (and ( and (not (= 2 rt_input.triangleb)) (and (not (= 3 rt_input.triangleb)) (> 7 rt_input.triangleb))) (and (= 8 rt_input.trianglea) (and (not (= 9 rt_input.trianglec)) (> rt_input.trianglec 5)))) (and (> rt_input.triangleb 6) (and (or (> rt_input.trianglea 9) (= 8 rt_input.trianglea)) (= 9 rt_input.trianglec))) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) 

[Final predicate size] 66

[Total time]
Total Conversion Time : 0 days, 0 hours, 3 minutes, 30 seconds


17.
[Original predicate]
((rt_input.triangleb >= rt_input.trianglec) and !(rt_input.triangleb > rt_input.trianglec) and !(rt_input.trianglea == rt_input.triangleb))

[Original predicate size] 3

[Final output]
( and (not (= rt_input.trianglea rt_input.triangleb)) (= rt_input.trianglec rt_input.triangleb)) 

[Final predicate size] 2

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 21 seconds


18.
[Original predicate]
((rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea > rt_input.trianglec) and !(rt_input.trianglea == rt_input.triangleb))

[Original predicate size] 3

[Final output]
(and (not (= rt_input.trianglea rt_input.triangleb)) (= rt_input.trianglec rt_input.trianglea)) 

[Final predicate size] 2

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 1 seconds


19.
[Original predicate]
(((rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea >= rt_input.trianglec) and (rt_input.trianglea > rt_input.trianglec)) or ((rt_input.trianglea == rt_input.triangleb) and !(rt_input.trianglea >= rt_input.trianglec)))

[Original predicate size] 5

[Final output]
( or (and (= rt_input.trianglea rt_input.triangleb) (> rt_input.trianglea rt_input.trianglec)) (and (= rt_input.trianglea rt_input.triangleb) (> rt_input.trianglec rt_input.trianglea)) ) 

[Final predicate size] 4

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 2 seconds


20.
[Original predicate]
((rt_input.trianglea == rt_input.triangleb) and (rt_input.trianglea >= rt_input.trianglec) and !(rt_input.trianglea > rt_input.trianglec))

[Original predicate size] 3

[Final output]
(and (= rt_input.trianglea rt_input.triangleb) (= rt_input.trianglec rt_input.trianglea)) 

[Final predicate size] 2

[Total time]
Total Conversion Time : 0 days, 0 hours, 0 minutes, 1 seconds


