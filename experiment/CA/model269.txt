traces/trace269_events.txt



******************************************** TRACE:1
1
Total size:10



******************************************** Iteration:0
['start', 'On_spot', 'On_spot', '((!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and (3 == rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and (1 == (rt_input.obsDistance_0 - 3))) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and !(1 == rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and (rt_input.obsDistance_0 >= 12) and (rt_input.obsDistance_3 > rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and !(rt_input.obsDistance_0 >= 12) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 <= 4) and !(rt_state.zone_1 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_state.zone_0 >= rt_input.obsDistance_2) and (rt_state.zone_1 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= 7) and !(rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_3 >= 6) and (rt_state.zone_0 >= rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > 2) and (rt_input.obsDistance_0 > 2))): Turn_left', 'Turn_left', '((!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and (19 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_1) and !(14 > rt_input.obsDistance_3)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and !(19 > rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and !(14 > rt_input.obsDistance_1))): On_spot', '((!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and (3 == rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and (1 == (rt_input.obsDistance_0 - 3))) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and !(1 == rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and (rt_input.obsDistance_0 >= 12) and (rt_input.obsDistance_3 > rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and !(rt_input.obsDistance_0 >= 12) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 <= 4) and !(rt_state.zone_1 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_state.zone_0 >= rt_input.obsDistance_2) and (rt_state.zone_1 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= 7) and !(rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_3 >= 6) and (rt_state.zone_0 >= rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > 2) and (rt_input.obsDistance_0 > 2))): Turn_left', '((!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and (19 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_1) and !(14 > rt_input.obsDistance_3)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and !(19 > rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and !(14 > rt_input.obsDistance_1))): On_spot', 'On_spot', '((!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and (3 == rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and (1 == (rt_input.obsDistance_0 - 3))) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and !(1 == rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and (rt_input.obsDistance_0 >= 12) and (rt_input.obsDistance_3 > rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and !(rt_input.obsDistance_0 >= 12) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 <= 4) and !(rt_state.zone_1 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_state.zone_0 >= rt_input.obsDistance_2) and (rt_state.zone_1 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= 7) and !(rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_3 >= 6) and (rt_state.zone_0 >= rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > 2) and (rt_input.obsDistance_0 > 2))): Turn_left']
[WARNING] Using non segmented



******************************************** Iteration:0
['start', 'On_spot', 'On_spot', '((!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and (3 == rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and (1 == (rt_input.obsDistance_0 - 3))) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and !(1 == rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and (rt_input.obsDistance_0 >= 12) and (rt_input.obsDistance_3 > rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and !(rt_input.obsDistance_0 >= 12) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 <= 4) and !(rt_state.zone_1 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_state.zone_0 >= rt_input.obsDistance_2) and (rt_state.zone_1 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= 7) and !(rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_3 >= 6) and (rt_state.zone_0 >= rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > 2) and (rt_input.obsDistance_0 > 2))): Turn_left', 'Turn_left', '((!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and (19 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_1) and !(14 > rt_input.obsDistance_3)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and !(19 > rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and !(14 > rt_input.obsDistance_1))): On_spot', '((!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and (3 == rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and (1 == (rt_input.obsDistance_0 - 3))) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and !(1 == rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and (rt_input.obsDistance_0 >= 12) and (rt_input.obsDistance_3 > rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and !(rt_input.obsDistance_0 >= 12) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 <= 4) and !(rt_state.zone_1 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_state.zone_0 >= rt_input.obsDistance_2) and (rt_state.zone_1 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= 7) and !(rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_3 >= 6) and (rt_state.zone_0 >= rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > 2) and (rt_input.obsDistance_0 > 2))): Turn_left', '((!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and (19 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_1) and !(14 > rt_input.obsDistance_3)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and !(19 > rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and !(14 > rt_input.obsDistance_1))): On_spot', 'On_spot', '((!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and (3 == rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and (1 == (rt_input.obsDistance_0 - 3))) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and !(1 == rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and (rt_input.obsDistance_0 >= 12) and (rt_input.obsDistance_3 > rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and !(rt_input.obsDistance_0 >= 12) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 <= 4) and !(rt_state.zone_1 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_state.zone_0 >= rt_input.obsDistance_2) and (rt_state.zone_1 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= 7) and !(rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_3 >= 6) and (rt_state.zone_0 >= rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > 2) and (rt_input.obsDistance_0 > 2))): Turn_left']
[WARNING] Using non segmented
Generating model with 2 states
Finding CE
CE found :
[[1, 4], [1, 5], [2, 4], [2, 5], [3, 2], [3, 3], [4, 2], [4, 3], [5, 1], [5, 4], [5, 5]]
Running CBMC...............
No model, increasing number of states to 3
Running CBMC...............
Final Generated model
[[1, 1, 2], [2, 2, 2], [2, 3, 3], [3, 4, 3], [3, 5, 2]]


Time taken: 0.18021512031555176



------------- Verifying: ----------------------------

All behaviors present
Final Generated model
[[1, 1, 2], [2, 2, 2], [2, 3, 3], [3, 4, 3], [3, 5, 2]]
Number of states: 3
Number of transitions: 5



******************************************** TRACE:2
1
Total size:10



******************************************** Iteration:0
['start', '((!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and (3 == rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and (1 == (rt_input.obsDistance_0 - 3))) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and !(1 == rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and (rt_input.obsDistance_0 >= 12) and (rt_input.obsDistance_3 > rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and !(rt_input.obsDistance_0 >= 12) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 <= 4) and !(rt_state.zone_1 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_state.zone_0 >= rt_input.obsDistance_2) and (rt_state.zone_1 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= 7) and !(rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_3 >= 6) and (rt_state.zone_0 >= rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > 2) and (rt_input.obsDistance_0 > 2))): Turn_left', '(((1 == rt_input.obsDistance_3) and (rt_state.speed_status == Fast_speed)) or ((1 == rt_input.obsDistance_3) and !(rt_state.speed_status == Fast_speed) and !(8 > rt_input.obsDistance_2) and !(1 >= rt_state.zone_0) and (2 == rt_state.zone_1))): Turn_right', 'Turn_right', 'Turn_right', '((2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and !(9 > rt_input.obsDistance_0) and !(rt_state.speed_status == Fast_speed)): On_spot', '((!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and (3 == rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and (1 == (rt_input.obsDistance_0 - 3))) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and !(1 == rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and (rt_input.obsDistance_0 >= 12) and (rt_input.obsDistance_3 > rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and !(rt_input.obsDistance_0 >= 12) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 <= 4) and !(rt_state.zone_1 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_state.zone_0 >= rt_input.obsDistance_2) and (rt_state.zone_1 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= 7) and !(rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_3 >= 6) and (rt_state.zone_0 >= rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > 2) and (rt_input.obsDistance_0 > 2))): Turn_left', 'Turn_left', '((!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and (19 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_1) and !(14 > rt_input.obsDistance_3)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and !(19 > rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and !(14 > rt_input.obsDistance_1))): On_spot', 'On_spot']
[WARNING] Using non segmented



******************************************** Iteration:0
['start', '((!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and (3 == rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and (1 == (rt_input.obsDistance_0 - 3))) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and !(1 == rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and (rt_input.obsDistance_0 >= 12) and (rt_input.obsDistance_3 > rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and !(rt_input.obsDistance_0 >= 12) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 <= 4) and !(rt_state.zone_1 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_state.zone_0 >= rt_input.obsDistance_2) and (rt_state.zone_1 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= 7) and !(rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_3 >= 6) and (rt_state.zone_0 >= rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > 2) and (rt_input.obsDistance_0 > 2))): Turn_left', '(((1 == rt_input.obsDistance_3) and (rt_state.speed_status == Fast_speed)) or ((1 == rt_input.obsDistance_3) and !(rt_state.speed_status == Fast_speed) and !(8 > rt_input.obsDistance_2) and !(1 >= rt_state.zone_0) and (2 == rt_state.zone_1))): Turn_right', 'Turn_right', 'Turn_right', '((2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and !(9 > rt_input.obsDistance_0) and !(rt_state.speed_status == Fast_speed)): On_spot', '((!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and (3 == rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and (1 == (rt_input.obsDistance_0 - 3))) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and !(1 == rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and (rt_input.obsDistance_0 >= 12) and (rt_input.obsDistance_3 > rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and !(rt_input.obsDistance_0 >= 12) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 <= 4) and !(rt_state.zone_1 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_state.zone_0 >= rt_input.obsDistance_2) and (rt_state.zone_1 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= 7) and !(rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_3 >= 6) and (rt_state.zone_0 >= rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > 2) and (rt_input.obsDistance_0 > 2))): Turn_left', 'Turn_left', '((!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and (19 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_1) and !(14 > rt_input.obsDistance_3)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and !(19 > rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and !(14 > rt_input.obsDistance_1))): On_spot', 'On_spot']
[WARNING] Using non segmented
Generating model with 3 states
Finding CE
CE found :
[[1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8], [3, 2], [3, 3], [3, 7], [3, 8], [4, 2], [4, 3], [4, 6], [4, 7], [4, 8], [5, 1], [5, 4], [5, 5], [5, 6], [5, 7], [5, 8], [6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [7, 2], [7, 3], [7, 4], [7, 5], [7, 6], [8, 4], [8, 5], [8, 6], [8, 7], [8, 8]]
Running CBMC...............
No model, increasing number of states to 4
Running CBMC...............
No model, increasing number of states to 5
Running CBMC...............
Final Generated model
[[1, 1, 2], [2, 2, 2], [2, 3, 3], [2, 3, 5], [3, 4, 3], [3, 5, 2], [4, 7, 4], [4, 8, 2], [5, 6, 4]]


Time taken: 0.8024461269378662



------------- Verifying: ----------------------------

All behaviors present
Final Generated model
[[1, 1, 2], [2, 2, 2], [2, 3, 3], [2, 3, 5], [3, 4, 3], [3, 5, 2], [4, 7, 4], [4, 8, 2], [5, 6, 4]]
Number of states: 5
Number of transitions: 9



******************************************** TRACE:3
1
Total size:10



******************************************** Iteration:0
['start', 'On_spot', 'On_spot', '((!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and (3 == rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and (1 == (rt_input.obsDistance_0 - 3))) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and !(1 == rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and (rt_input.obsDistance_0 >= 12) and (rt_input.obsDistance_3 > rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and !(rt_input.obsDistance_0 >= 12) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 <= 4) and !(rt_state.zone_1 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_state.zone_0 >= rt_input.obsDistance_2) and (rt_state.zone_1 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= 7) and !(rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_3 >= 6) and (rt_state.zone_0 >= rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > 2) and (rt_input.obsDistance_0 > 2))): Turn_left', '((!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and (19 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_1) and !(14 > rt_input.obsDistance_3)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and !(19 > rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and !(14 > rt_input.obsDistance_1))): On_spot', '((!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and (3 == rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and (1 == (rt_input.obsDistance_0 - 3))) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and !(1 == rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and (rt_input.obsDistance_0 >= 12) and (rt_input.obsDistance_3 > rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and !(rt_input.obsDistance_0 >= 12) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 <= 4) and !(rt_state.zone_1 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_state.zone_0 >= rt_input.obsDistance_2) and (rt_state.zone_1 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= 7) and !(rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_3 >= 6) and (rt_state.zone_0 >= rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > 2) and (rt_input.obsDistance_0 > 2))): Turn_left', '(((1 == rt_input.obsDistance_3) and (rt_state.speed_status == Fast_speed)) or ((1 == rt_input.obsDistance_3) and !(rt_state.speed_status == Fast_speed) and !(8 > rt_input.obsDistance_2) and !(1 >= rt_state.zone_0) and (2 == rt_state.zone_1))): Turn_right', '((2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and !(9 > rt_input.obsDistance_0) and !(rt_state.speed_status == Fast_speed)): On_spot', '((!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and (3 == rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and (1 == (rt_input.obsDistance_1 - 3))) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_0 > rt_state.zone_1) and (rt_input.obsDistance_2 >= 18) and (2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > 19)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_2 >= 18) and (rt_input.obsDistance_3 <= 4) and (rt_input.obsDistance_3 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 == rt_state.zone_0)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_2 >= 18) and (rt_input.obsDistance_3 <= 4) and (rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 == rt_state.zone_0) and (12 == rt_input.obsDistance_0) and !(1 > rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_2 >= 18) and (rt_input.obsDistance_3 <= 4) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 >= 6) and (rt_state.zone_0 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_0 > rt_state.zone_1) and (rt_input.obsDistance_1 - rt_input.obsDistance_2 >= -1) and (rt_input.obsDistance_3 == rt_state.zone_0) and (rt_input.obsDistance_1 >= rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_0 > rt_state.zone_1) and (rt_input.obsDistance_1 - rt_input.obsDistance_2 >= -1) and !(rt_input.obsDistance_3 == rt_state.zone_0)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_1 - rt_input.obsDistance_2 >= -1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_1 - rt_input.obsDistance_2 >= -1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2) and (7 == rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_1 - rt_input.obsDistance_2 >= -1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > 2)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and (2 == rt_state.zone_0) and (rt_input.obsDistance_0 > 2) and !(rt_input.obsDistance_1 <= 4) and (rt_input.obsDistance_3 <= 4) and (rt_input.obsDistance_2 >= 6) and (2 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and (2 == rt_state.zone_0) and (rt_input.obsDistance_0 > 2) and !(rt_input.obsDistance_1 <= 4) and (rt_input.obsDistance_3 <= 4) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_3 > 2) and !(1 == (rt_input.obsDistance_2 - rt_state.zone_0))) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and (2 == rt_state.zone_0) and !(rt_input.obsDistance_0 > 2) and (rt_input.obsDistance_2 > rt_state.zone_1) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_state.zone_1 >= rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and (2 == rt_state.zone_0) and !(rt_input.obsDistance_0 > 2) and (rt_input.obsDistance_2 > rt_state.zone_1) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and (2 == rt_state.zone_0) and !(rt_input.obsDistance_0 > 2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and (3 == rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and !(3 == rt_input.obsDistance_1) and (1 == (rt_input.obsDistance_1 - 3))) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_2 - rt_state.zone_0 <= 1) and (3 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_2 - rt_state.zone_0 <= 1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2) and (2 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_2 - rt_state.zone_0 <= 1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_1) and (rt_input.obsDistance_0 > 2) and (2 == rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_2 - rt_state.zone_0 <= 1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_0 > 2))): Turn_right', '((2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and !(9 > rt_input.obsDistance_0) and !(rt_state.speed_status == Fast_speed)): On_spot']
[WARNING] Using non segmented



******************************************** Iteration:0
['(((1 == rt_input.obsDistance_3) and (rt_state.speed_status == Fast_speed)) or ((1 == rt_input.obsDistance_3) and !(rt_state.speed_status == Fast_speed) and !(8 > rt_input.obsDistance_2) and !(1 >= rt_state.zone_0) and (2 == rt_state.zone_1))): Turn_right', '((2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and !(9 > rt_input.obsDistance_0) and !(rt_state.speed_status == Fast_speed)): On_spot', '((!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and (3 == rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and (1 == (rt_input.obsDistance_1 - 3))) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_0 > rt_state.zone_1) and (rt_input.obsDistance_2 >= 18) and (2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > 19)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_2 >= 18) and (rt_input.obsDistance_3 <= 4) and (rt_input.obsDistance_3 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 == rt_state.zone_0)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_2 >= 18) and (rt_input.obsDistance_3 <= 4) and (rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 == rt_state.zone_0) and (12 == rt_input.obsDistance_0) and !(1 > rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_2 >= 18) and (rt_input.obsDistance_3 <= 4) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 >= 6) and (rt_state.zone_0 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_0 > rt_state.zone_1) and (rt_input.obsDistance_1 - rt_input.obsDistance_2 >= -1) and (rt_input.obsDistance_3 == rt_state.zone_0) and (rt_input.obsDistance_1 >= rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_0 > rt_state.zone_1) and (rt_input.obsDistance_1 - rt_input.obsDistance_2 >= -1) and !(rt_input.obsDistance_3 == rt_state.zone_0)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_1 - rt_input.obsDistance_2 >= -1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_1 - rt_input.obsDistance_2 >= -1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2) and (7 == rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_1 - rt_input.obsDistance_2 >= -1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > 2)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and (2 == rt_state.zone_0) and (rt_input.obsDistance_0 > 2) and !(rt_input.obsDistance_1 <= 4) and (rt_input.obsDistance_3 <= 4) and (rt_input.obsDistance_2 >= 6) and (2 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and (2 == rt_state.zone_0) and (rt_input.obsDistance_0 > 2) and !(rt_input.obsDistance_1 <= 4) and (rt_input.obsDistance_3 <= 4) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_3 > 2) and !(1 == (rt_input.obsDistance_2 - rt_state.zone_0))) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and (2 == rt_state.zone_0) and !(rt_input.obsDistance_0 > 2) and (rt_input.obsDistance_2 > rt_state.zone_1) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_state.zone_1 >= rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and (2 == rt_state.zone_0) and !(rt_input.obsDistance_0 > 2) and (rt_input.obsDistance_2 > rt_state.zone_1) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and (2 == rt_state.zone_0) and !(rt_input.obsDistance_0 > 2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and (3 == rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and !(3 == rt_input.obsDistance_1) and (1 == (rt_input.obsDistance_1 - 3))) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_2 - rt_state.zone_0 <= 1) and (3 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_2 - rt_state.zone_0 <= 1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2) and (2 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_2 - rt_state.zone_0 <= 1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_1) and (rt_input.obsDistance_0 > 2) and (2 == rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_2 - rt_state.zone_0 <= 1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_0 > 2))): Turn_right', '((2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and !(9 > rt_input.obsDistance_0) and !(rt_state.speed_status == Fast_speed)): On_spot']
[WARNING] Using non segmented
Generating model with 5 states
Finding CE
CE found :
[[1, 6], [1, 8], [2, 6], [2, 8], [3, 8], [3, 9], [4, 6], [4, 8], [4, 9], [5, 6], [5, 8], [6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 9], [7, 6], [7, 9], [8, 4], [8, 5], [8, 6], [8, 7], [8, 8], [9, 2], [9, 3], [9, 4], [9, 5], [9, 6], [9, 9]]
Running CBMC...............
Final Generated model
[[1, 1, 2], [2, 2, 2], [2, 3, 3], [2, 3, 5], [2, 9, 4], [3, 4, 3], [3, 5, 2], [4, 7, 4], [4, 8, 2], [5, 6, 4]]


Time taken: 1.000028371810913



------------- Verifying: ----------------------------

All behaviors present
Final Generated model
[[1, 1, 2], [2, 2, 2], [2, 3, 3], [2, 3, 5], [2, 9, 4], [3, 4, 3], [3, 5, 2], [4, 7, 4], [4, 8, 2], [5, 6, 4]]
Number of states: 5
Number of transitions: 10



******************************************** TRACE:4
Already present!!



******************************************** TRACE:5
Already present!!



******************************************** TRACE:6
Already present!!



******************************************** TRACE:7
Already present!!



******************************************** TRACE:8
Already present!!



******************************************** TRACE:9
Already present!!



******************************************** TRACE:10
Already present!!



******************************************** TRACE:11
Already present!!



******************************************** TRACE:12
Already present!!



******************************************** TRACE:13
Already present!!



******************************************** TRACE:14
Already present!!



******************************************** TRACE:15
Already present!!



******************************************** TRACE:16
Already present!!



******************************************** TRACE:17
Already present!!



******************************************** TRACE:18
Already present!!



******************************************** TRACE:19
Already present!!



******************************************** TRACE:20
Already present!!



******************************************** TRACE:21
Already present!!



******************************************** TRACE:22
Already present!!
NFA states:  5


Time taken: 1.182758092880249


Converting NFA to DFA..........
states =  5
Length of trace: 138

All behaviors present
States not visited
[]
Final Generated model
[[1, 1, 2], [2, 2, 2], [2, 3, 3], [2, 9, 4], [3, 4, 5], [3, 5, 2], [3, 6, 4], [4, 7, 4], [4, 8, 2], [5, 4, 5], [5, 5, 2]]
[[1, 'start', 2], [2, 'On_spot', 2], [2, '((!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and (3 == rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and (1 == (rt_input.obsDistance_0 - 3))) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and !(1 == rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and (rt_input.obsDistance_0 >= 12) and (rt_input.obsDistance_3 > rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and !(rt_input.obsDistance_0 >= 12) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 <= 4) and !(rt_state.zone_1 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_state.zone_0 >= rt_input.obsDistance_2) and (rt_state.zone_1 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= 7) and !(rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_3 >= 6) and (rt_state.zone_0 >= rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > 2) and (rt_input.obsDistance_0 > 2))): Turn_left', 3], [2, '((!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and (3 == rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and (1 == (rt_input.obsDistance_1 - 3))) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_0 > rt_state.zone_1) and (rt_input.obsDistance_2 >= 18) and (2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > 19)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_2 >= 18) and (rt_input.obsDistance_3 <= 4) and (rt_input.obsDistance_3 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 == rt_state.zone_0)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_2 >= 18) and (rt_input.obsDistance_3 <= 4) and (rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 == rt_state.zone_0) and (12 == rt_input.obsDistance_0) and !(1 > rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_2 >= 18) and (rt_input.obsDistance_3 <= 4) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 >= 6) and (rt_state.zone_0 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_0 > rt_state.zone_1) and (rt_input.obsDistance_1 - rt_input.obsDistance_2 >= -1) and (rt_input.obsDistance_3 == rt_state.zone_0) and (rt_input.obsDistance_1 >= rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_0 > rt_state.zone_1) and (rt_input.obsDistance_1 - rt_input.obsDistance_2 >= -1) and !(rt_input.obsDistance_3 == rt_state.zone_0)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_1 - rt_input.obsDistance_2 >= -1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_1 - rt_input.obsDistance_2 >= -1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2) and (7 == rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_1 - rt_input.obsDistance_2 >= -1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > 2)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and (2 == rt_state.zone_0) and (rt_input.obsDistance_0 > 2) and !(rt_input.obsDistance_1 <= 4) and (rt_input.obsDistance_3 <= 4) and (rt_input.obsDistance_2 >= 6) and (2 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and (2 == rt_state.zone_0) and (rt_input.obsDistance_0 > 2) and !(rt_input.obsDistance_1 <= 4) and (rt_input.obsDistance_3 <= 4) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_3 > 2) and !(1 == (rt_input.obsDistance_2 - rt_state.zone_0))) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and (2 == rt_state.zone_0) and !(rt_input.obsDistance_0 > 2) and (rt_input.obsDistance_2 > rt_state.zone_1) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_state.zone_1 >= rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and (2 == rt_state.zone_0) and !(rt_input.obsDistance_0 > 2) and (rt_input.obsDistance_2 > rt_state.zone_1) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and (2 == rt_state.zone_0) and !(rt_input.obsDistance_0 > 2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and (3 == rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and !(3 == rt_input.obsDistance_1) and (1 == (rt_input.obsDistance_1 - 3))) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_2 - rt_state.zone_0 <= 1) and (3 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_2 - rt_state.zone_0 <= 1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2) and (2 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_2 - rt_state.zone_0 <= 1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_1) and (rt_input.obsDistance_0 > 2) and (2 == rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_2 - rt_state.zone_0 <= 1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_0 > 2))): Turn_right', 4], [3, 'Turn_left', 5], [3, '((!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and (19 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_1) and !(14 > rt_input.obsDistance_3)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and !(19 > rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and !(14 > rt_input.obsDistance_1))): On_spot', 2], [3, '(((1 == rt_input.obsDistance_3) and (rt_state.speed_status == Fast_speed)) or ((1 == rt_input.obsDistance_3) and !(rt_state.speed_status == Fast_speed) and !(8 > rt_input.obsDistance_2) and !(1 >= rt_state.zone_0) and (2 == rt_state.zone_1))): Turn_right', 4], [4, 'Turn_right', 4], [4, '((2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and !(9 > rt_input.obsDistance_0) and !(rt_state.speed_status == Fast_speed)): On_spot', 2], [5, 'Turn_left', 5], [5, '((!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and (19 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_1) and !(14 > rt_input.obsDistance_3)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and !(19 > rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and !(14 > rt_input.obsDistance_1))): On_spot', 2]]
Number of states: 5
Number of transitions: 11


Time taken: 1.184157133102417


Time taken: 1.3453147411346436
