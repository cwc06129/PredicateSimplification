traces/trace68_events.txt



******************************************** TRACE:1
1
Total size:10



******************************************** Iteration:0
['start', 'On_spot', 'On_spot', 'On_spot', '(((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and (rt_state.speed_status == Stop) and (1 == (rt_input.obsDistance_0 - 2))) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and (rt_state.speed_status == Stop) and !(1 == (rt_input.obsDistance_0 - 2)) and (2 >= rt_input.obsDistance_2) and (rt_input.obsDistance_3 >= 6) and !(rt_input.obsDistance_0 <= 3)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and (rt_state.speed_status == Stop) and !(1 == (rt_input.obsDistance_0 - 2)) and (2 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_3 >= 6) and !(rt_input.obsDistance_0 >= 5) and !(rt_input.obsDistance_0 == rt_state.zone_1)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and (rt_state.speed_status == Stop) and !(1 == (rt_input.obsDistance_0 - 2)) and !(2 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 >= 5) and !(rt_input.obsDistance_0 - rt_input.obsDistance_2 <= 1) and !(rt_input.obsDistance_3 > rt_state.zone_1) and (rt_input.obsDistance_2 - rt_state.zone_1 <= 1)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and (rt_state.speed_status == Stop) and !(1 == (rt_input.obsDistance_0 - 2)) and !(2 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 >= 5) and !(rt_input.obsDistance_0 - rt_input.obsDistance_2 <= 1) and !(rt_input.obsDistance_3 > rt_state.zone_1) and !(rt_input.obsDistance_2 - rt_state.zone_1 <= 1) and (1 == (12 - rt_input.obsDistance_0))) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and (rt_state.speed_status == Stop) and !(1 == (rt_input.obsDistance_0 - 2)) and !(2 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 >= 5) and !(rt_input.obsDistance_0 - rt_input.obsDistance_2 <= 1) and !(rt_input.obsDistance_3 > rt_state.zone_1) and !(rt_input.obsDistance_2 - rt_state.zone_1 <= 1) and !(1 == (12 - rt_input.obsDistance_0)) and !(rt_input.obsDistance_1 >= 6)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and (rt_state.speed_status == Stop) and !(1 == (rt_input.obsDistance_0 - 2)) and !(2 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_0 >= 5) and !(rt_state.zone_1 >= rt_input.obsDistance_0)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and (rt_input.obsDistance_2 >= 6) and (1 == rt_state.zone_1) and (1 == (rt_input.obsDistance_0 - 2))) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and (rt_input.obsDistance_3 >= 6) and (rt_input.obsDistance_2 > 2) and (1 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 12)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and (rt_input.obsDistance_3 >= 6) and !(rt_input.obsDistance_2 > 2) and (rt_input.obsDistance_0 >= 5)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and (rt_input.obsDistance_3 >= 6) and !(rt_input.obsDistance_2 > 2) and !(rt_input.obsDistance_0 >= 5) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and !(rt_input.obsDistance_3 >= 6) and (2 >= rt_input.obsDistance_2) and (1 == (rt_input.obsDistance_2 * rt_state.zone_1)) and (7 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and !(rt_input.obsDistance_3 >= 6) and !(2 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 <= 3)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and !(rt_input.obsDistance_3 >= 6) and !(2 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_0 <= 3) and (rt_state.zone_0 > rt_input.obsDistance_3) and (rt_input.obsDistance_0 >= 5) and (rt_input.obsDistance_0 <= 8)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and !(rt_input.obsDistance_3 >= 6) and !(2 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_0 <= 3) and (rt_state.zone_0 > rt_input.obsDistance_3) and (rt_input.obsDistance_0 >= 5) and !(rt_input.obsDistance_0 <= 8) and (1 == (rt_input.obsDistance_2 - 2))) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and !(rt_input.obsDistance_3 >= 6) and !(2 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_0 <= 3) and (rt_state.zone_0 > rt_input.obsDistance_3) and (rt_input.obsDistance_0 >= 5) and !(rt_input.obsDistance_0 <= 8) and !(1 == (rt_input.obsDistance_2 - 2)) and !(12 >= rt_input.obsDistance_1) and !(1 > rt_input.obsDistance_3)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and !(rt_input.obsDistance_3 >= 6) and !(2 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_0 <= 3) and !(rt_state.zone_0 > rt_input.obsDistance_3) and !(1 == (rt_input.obsDistance_3 - rt_state.zone_0)) and (1 == (rt_input.obsDistance_0 - rt_input.obsDistance_3))) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and !(rt_input.obsDistance_3 >= 6) and !(2 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_0 <= 3) and !(rt_state.zone_0 > rt_input.obsDistance_3) and !(1 == (rt_input.obsDistance_3 - rt_state.zone_0)) and !(1 == (rt_input.obsDistance_0 - rt_input.obsDistance_3)) and !(7 > rt_input.obsDistance_0) and !(rt_input.obsDistance_0 >= 22) and (rt_input.obsDistance_2 - rt_state.zone_1 <= 1)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and !(rt_input.obsDistance_3 >= 6) and !(2 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_0 <= 3) and !(rt_state.zone_0 > rt_input.obsDistance_3) and !(1 == (rt_input.obsDistance_3 - rt_state.zone_0)) and !(1 == (rt_input.obsDistance_0 - rt_input.obsDistance_3)) and !(7 > rt_input.obsDistance_0) and !(rt_input.obsDistance_0 >= 22) and !(rt_input.obsDistance_2 - rt_state.zone_1 <= 1) and !(12 > rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 12)) and !(1 == (7 - rt_input.obsDistance_1))) or ((rt_input.obsDistance_1 > 2) and !(rt_input.obsDistance_1 >= 5) and (rt_state.speed_status == Midium_speed) and !(2 == (24 - rt_input.obsDistance_3)) and (rt_input.obsDistance_3 >= rt_input.obsDistance_0)) or ((rt_input.obsDistance_1 > 2) and !(rt_input.obsDistance_1 >= 5) and (rt_state.speed_status == Midium_speed) and !(2 == (24 - rt_input.obsDistance_3)) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_0) and !(24 > rt_input.obsDistance_0)) or (!(rt_input.obsDistance_1 > 2) and (2 >= rt_input.obsDistance_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_2)) or (!(rt_input.obsDistance_1 > 2) and !(2 >= rt_input.obsDistance_0))): Turn_left', '(((2 >= rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_1) and (2 == rt_input.obsDistance_2)) or ((2 >= rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_1)) or (!(2 >= rt_input.obsDistance_0) and !(14 > rt_input.obsDistance_1) and !(6 > rt_input.obsDistance_2) and !(14 >= rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_3))): Turn_right', '(((2 >= rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and !(1 >= rt_state.zone_0) and (1 == rt_input.obsDistance_2) and !(17 > rt_input.obsDistance_3) and (2 == rt_state.zone_1))): Turn_left', '((!(1 > rt_state.zone_1) and (9 > rt_input.obsDistance_0) and !(rt_state.speed_status == Fast_speed) and !(9 > rt_input.obsDistance_3) and (9 > rt_input.obsDistance_2) and (1 == rt_state.zone_0) and (rt_state.speed_status == Midium_speed)) or (!(1 > rt_state.zone_1) and (9 > rt_input.obsDistance_0) and !(rt_state.speed_status == Fast_speed) and !(9 > rt_input.obsDistance_3) and !(9 > rt_input.obsDistance_2) and (2 == rt_state.zone_0) and (rt_state.speed_status == Slow_speed)) or (!(1 > rt_state.zone_1) and !(9 > rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_3) and (2 >= rt_input.obsDistance_2) and !(9 >= rt_input.obsDistance_1)) or (!(1 > rt_state.zone_1) and !(9 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (9 > rt_input.obsDistance_1) and !(9 > rt_input.obsDistance_2) and !(rt_state.speed_status == Midium_speed) and (1 >= rt_state.zone_1) and (9 > rt_input.obsDistance_3)) or (!(1 > rt_state.zone_1) and !(9 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (9 > rt_input.obsDistance_1) and !(9 > rt_input.obsDistance_2) and !(rt_state.speed_status == Midium_speed) and !(1 >= rt_state.zone_1)) or (!(1 > rt_state.zone_1) and !(9 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and !(9 > rt_input.obsDistance_1))): On_spot', 'On_spot', 'On_spot']
[WARNING] Using non segmented



******************************************** Iteration:0
['start', 'On_spot', 'On_spot', 'On_spot', '(((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and (rt_state.speed_status == Stop) and (1 == (rt_input.obsDistance_0 - 2))) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and (rt_state.speed_status == Stop) and !(1 == (rt_input.obsDistance_0 - 2)) and (2 >= rt_input.obsDistance_2) and (rt_input.obsDistance_3 >= 6) and !(rt_input.obsDistance_0 <= 3)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and (rt_state.speed_status == Stop) and !(1 == (rt_input.obsDistance_0 - 2)) and (2 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_3 >= 6) and !(rt_input.obsDistance_0 >= 5) and !(rt_input.obsDistance_0 == rt_state.zone_1)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and (rt_state.speed_status == Stop) and !(1 == (rt_input.obsDistance_0 - 2)) and !(2 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 >= 5) and !(rt_input.obsDistance_0 - rt_input.obsDistance_2 <= 1) and !(rt_input.obsDistance_3 > rt_state.zone_1) and (rt_input.obsDistance_2 - rt_state.zone_1 <= 1)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and (rt_state.speed_status == Stop) and !(1 == (rt_input.obsDistance_0 - 2)) and !(2 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 >= 5) and !(rt_input.obsDistance_0 - rt_input.obsDistance_2 <= 1) and !(rt_input.obsDistance_3 > rt_state.zone_1) and !(rt_input.obsDistance_2 - rt_state.zone_1 <= 1) and (1 == (12 - rt_input.obsDistance_0))) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and (rt_state.speed_status == Stop) and !(1 == (rt_input.obsDistance_0 - 2)) and !(2 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 >= 5) and !(rt_input.obsDistance_0 - rt_input.obsDistance_2 <= 1) and !(rt_input.obsDistance_3 > rt_state.zone_1) and !(rt_input.obsDistance_2 - rt_state.zone_1 <= 1) and !(1 == (12 - rt_input.obsDistance_0)) and !(rt_input.obsDistance_1 >= 6)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and (rt_state.speed_status == Stop) and !(1 == (rt_input.obsDistance_0 - 2)) and !(2 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_0 >= 5) and !(rt_state.zone_1 >= rt_input.obsDistance_0)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and (rt_input.obsDistance_2 >= 6) and (1 == rt_state.zone_1) and (1 == (rt_input.obsDistance_0 - 2))) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and (rt_input.obsDistance_3 >= 6) and (rt_input.obsDistance_2 > 2) and (1 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 12)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and (rt_input.obsDistance_3 >= 6) and !(rt_input.obsDistance_2 > 2) and (rt_input.obsDistance_0 >= 5)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and (rt_input.obsDistance_3 >= 6) and !(rt_input.obsDistance_2 > 2) and !(rt_input.obsDistance_0 >= 5) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and !(rt_input.obsDistance_3 >= 6) and (2 >= rt_input.obsDistance_2) and (1 == (rt_input.obsDistance_2 * rt_state.zone_1)) and (7 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and !(rt_input.obsDistance_3 >= 6) and !(2 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 <= 3)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and !(rt_input.obsDistance_3 >= 6) and !(2 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_0 <= 3) and (rt_state.zone_0 > rt_input.obsDistance_3) and (rt_input.obsDistance_0 >= 5) and (rt_input.obsDistance_0 <= 8)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and !(rt_input.obsDistance_3 >= 6) and !(2 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_0 <= 3) and (rt_state.zone_0 > rt_input.obsDistance_3) and (rt_input.obsDistance_0 >= 5) and !(rt_input.obsDistance_0 <= 8) and (1 == (rt_input.obsDistance_2 - 2))) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and !(rt_input.obsDistance_3 >= 6) and !(2 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_0 <= 3) and (rt_state.zone_0 > rt_input.obsDistance_3) and (rt_input.obsDistance_0 >= 5) and !(rt_input.obsDistance_0 <= 8) and !(1 == (rt_input.obsDistance_2 - 2)) and !(12 >= rt_input.obsDistance_1) and !(1 > rt_input.obsDistance_3)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and !(rt_input.obsDistance_3 >= 6) and !(2 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_0 <= 3) and !(rt_state.zone_0 > rt_input.obsDistance_3) and !(1 == (rt_input.obsDistance_3 - rt_state.zone_0)) and (1 == (rt_input.obsDistance_0 - rt_input.obsDistance_3))) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and !(rt_input.obsDistance_3 >= 6) and !(2 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_0 <= 3) and !(rt_state.zone_0 > rt_input.obsDistance_3) and !(1 == (rt_input.obsDistance_3 - rt_state.zone_0)) and !(1 == (rt_input.obsDistance_0 - rt_input.obsDistance_3)) and !(7 > rt_input.obsDistance_0) and !(rt_input.obsDistance_0 >= 22) and (rt_input.obsDistance_2 - rt_state.zone_1 <= 1)) or ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_1 >= 5) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_0 - rt_state.zone_1 <= 1) and !(rt_input.obsDistance_3 >= 6) and !(2 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_0 <= 3) and !(rt_state.zone_0 > rt_input.obsDistance_3) and !(1 == (rt_input.obsDistance_3 - rt_state.zone_0)) and !(1 == (rt_input.obsDistance_0 - rt_input.obsDistance_3)) and !(7 > rt_input.obsDistance_0) and !(rt_input.obsDistance_0 >= 22) and !(rt_input.obsDistance_2 - rt_state.zone_1 <= 1) and !(12 > rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 12)) and !(1 == (7 - rt_input.obsDistance_1))) or ((rt_input.obsDistance_1 > 2) and !(rt_input.obsDistance_1 >= 5) and (rt_state.speed_status == Midium_speed) and !(2 == (24 - rt_input.obsDistance_3)) and (rt_input.obsDistance_3 >= rt_input.obsDistance_0)) or ((rt_input.obsDistance_1 > 2) and !(rt_input.obsDistance_1 >= 5) and (rt_state.speed_status == Midium_speed) and !(2 == (24 - rt_input.obsDistance_3)) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_0) and !(24 > rt_input.obsDistance_0)) or (!(rt_input.obsDistance_1 > 2) and (2 >= rt_input.obsDistance_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_2)) or (!(rt_input.obsDistance_1 > 2) and !(2 >= rt_input.obsDistance_0))): Turn_left', '(((2 >= rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_1) and (2 == rt_input.obsDistance_2)) or ((2 >= rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_1)) or (!(2 >= rt_input.obsDistance_0) and !(14 > rt_input.obsDistance_1) and !(6 > rt_input.obsDistance_2) and !(14 >= rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_3))): Turn_right', '(((2 >= rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and !(1 >= rt_state.zone_0) and (1 == rt_input.obsDistance_2) and !(17 > rt_input.obsDistance_3) and (2 == rt_state.zone_1))): Turn_left', '((!(1 > rt_state.zone_1) and (9 > rt_input.obsDistance_0) and !(rt_state.speed_status == Fast_speed) and !(9 > rt_input.obsDistance_3) and (9 > rt_input.obsDistance_2) and (1 == rt_state.zone_0) and (rt_state.speed_status == Midium_speed)) or (!(1 > rt_state.zone_1) and (9 > rt_input.obsDistance_0) and !(rt_state.speed_status == Fast_speed) and !(9 > rt_input.obsDistance_3) and !(9 > rt_input.obsDistance_2) and (2 == rt_state.zone_0) and (rt_state.speed_status == Slow_speed)) or (!(1 > rt_state.zone_1) and !(9 > rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_3) and (2 >= rt_input.obsDistance_2) and !(9 >= rt_input.obsDistance_1)) or (!(1 > rt_state.zone_1) and !(9 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (9 > rt_input.obsDistance_1) and !(9 > rt_input.obsDistance_2) and !(rt_state.speed_status == Midium_speed) and (1 >= rt_state.zone_1) and (9 > rt_input.obsDistance_3)) or (!(1 > rt_state.zone_1) and !(9 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (9 > rt_input.obsDistance_1) and !(9 > rt_input.obsDistance_2) and !(rt_state.speed_status == Midium_speed) and !(1 >= rt_state.zone_1)) or (!(1 > rt_state.zone_1) and !(9 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and !(9 > rt_input.obsDistance_1))): On_spot', 'On_spot', 'On_spot']
[WARNING] Using non segmented
Generating model with 2 states
Finding CE
CE found :
[[1, 4], [1, 5], [1, 6], [2, 4], [2, 5], [2, 6], [3, 2], [3, 3], [3, 5], [4, 2], [4, 3], [4, 4], [4, 6], [5, 2], [5, 3], [5, 4], [5, 5], [6, 4], [6, 5], [6, 6]]
Running CBMC...............
