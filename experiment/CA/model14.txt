traces/trace14_events.txt



******************************************** TRACE:1
Using Incremental SAT
5
Total size:72



******************************************** Iteration:0
['start', '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right', '((!(1 >= rt_state.zone_1) and (6 > rt_input.obsDistance_0) and (rt_state.speed_status == Slow_speed) and (2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2))): On_spot', 'On_spot', 'On_spot', '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right', '((!(1 >= rt_state.zone_1) and (6 > rt_input.obsDistance_0) and (rt_state.speed_status == Slow_speed) and (2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2))): On_spot', 'On_spot', 'On_spot', 'On_spot', '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right']
[WARNING] Using non segmented



******************************************** Iteration:0
['start', '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right', '((!(1 >= rt_state.zone_1) and (6 > rt_input.obsDistance_0) and (rt_state.speed_status == Slow_speed) and (2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2))): On_spot', 'On_spot', 'On_spot', '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right', '((!(1 >= rt_state.zone_1) and (6 > rt_input.obsDistance_0) and (rt_state.speed_status == Slow_speed) and (2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2))): On_spot', 'On_spot', 'On_spot', 'On_spot', '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right']
[WARNING] Using non segmented
Generating model with 2 states
Finding CE
CE found :
[[1, 3], [2, 2], [2, 4], [3, 3], [4, 3]]
Running CBMC...............
No model, increasing number of states to 3
Running CBMC...............
Final Generated model
[[1, 1, 2], [2, 2, 3], [2, 4, 2], [3, 3, 2]]


Time taken: 0.17943239212036133



******************************************** Iteration:1
['start', '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right', '((!(1 >= rt_state.zone_1) and (6 > rt_input.obsDistance_0) and (rt_state.speed_status == Slow_speed) and (2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2))): On_spot', 'On_spot', 'On_spot', '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right', '((!(1 >= rt_state.zone_1) and (6 > rt_input.obsDistance_0) and (rt_state.speed_status == Slow_speed) and (2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2))): On_spot', 'On_spot', 'On_spot', 'On_spot', '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right', 'Turn_right']
[WARNING] Using non segmented



******************************************** Iteration:1
['On_spot', '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right', 'Turn_right']
[WARNING] Using segmented
Generating model with 3 states
Finding CE
CE found :
[[1, 5], [2, 2], [2, 4], [3, 5], [4, 3], [4, 5], [5, 2], [5, 4]]
Running CBMC...............
Final Generated model
[[1, 1, 2], [2, 2, 3], [2, 4, 2], [3, 3, 2], [3, 5, 3]]


Time taken: 0.2450704574584961



******************************************** Iteration:2
['start', '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right', '((!(1 >= rt_state.zone_1) and (6 > rt_input.obsDistance_0) and (rt_state.speed_status == Slow_speed) and (2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2))): On_spot', 'On_spot', 'On_spot', '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right', '((!(1 >= rt_state.zone_1) and (6 > rt_input.obsDistance_0) and (rt_state.speed_status == Slow_speed) and (2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2))): On_spot', 'On_spot', 'On_spot', 'On_spot', '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right', 'Turn_right', '((!(1 >= rt_state.zone_1) and (6 > rt_input.obsDistance_0) and (rt_state.speed_status == Slow_speed) and (2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2))): On_spot', 'On_spot']
[WARNING] Using non segmented



------------- Verifying: ----------------------------

All behaviors present
Final Generated model
[[1, 1, 2], [2, 2, 3], [2, 4, 2], [3, 3, 2], [3, 5, 3]]
Number of states: 3
Number of transitions: 5



******************************************** TRACE:2
Using Incremental SAT
6
Total size:82



******************************************** Iteration:0
['start', '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right', '((!(1 >= rt_state.zone_1) and (6 > rt_input.obsDistance_0) and (rt_state.speed_status == Slow_speed) and (2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2))): On_spot', 'On_spot', '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right', '((!(1 >= rt_state.zone_1) and (6 > rt_input.obsDistance_0) and (rt_state.speed_status == Slow_speed) and (2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2))): On_spot', 'On_spot', '(((2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_0 > 2)) or ((2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_0 > 2) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_2 > 2)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and (1 > rt_input.obsDistance_2) and (7 > rt_input.obsDistance_3) and (7 == rt_input.obsDistance_1) and !(rt_state.speed_status == Midium_speed)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and (1 > rt_input.obsDistance_2) and !(7 > rt_input.obsDistance_3) and !(4 == rt_input.obsDistance_1)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and (12 > rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_0 > rt_input.obsDistance_3) and (4 == rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_0 > rt_input.obsDistance_3) and !(4 == rt_input.obsDistance_0) and !(4 >= rt_input.obsDistance_3) and (12 > rt_input.obsDistance_1) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_2 >= 4)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3) and (2 >= rt_input.obsDistance_2) and (4 >= rt_input.obsDistance_0) and (rt_input.obsDistance_1 > rt_input.obsDistance_3)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3) and (2 >= rt_input.obsDistance_2) and !(4 >= rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (7 == rt_input.obsDistance_1)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and !(7 == rt_input.obsDistance_1) and !(rt_input.obsDistance_1 > 4) and !(7 >= rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and !(4 >= rt_input.obsDistance_2) and (4 > rt_input.obsDistance_0) and !(1 == rt_state.zone_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and !(4 >= rt_input.obsDistance_2) and !(4 > rt_input.obsDistance_0) and (1 >= rt_state.zone_1) and !(rt_state.speed_status == Slow_speed) and (7 > rt_input.obsDistance_3)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and !(4 >= rt_input.obsDistance_2) and !(4 > rt_input.obsDistance_0) and (1 >= rt_state.zone_1) and !(rt_state.speed_status == Slow_speed) and !(7 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3)) or (!(2 >= rt_input.obsDistance_1) and !(7 >= rt_input.obsDistance_2) and (24 == rt_input.obsDistance_2) and (4 == rt_input.obsDistance_1))): Turn_left', '(!(1 >= rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(2 >= rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_1)): On_spot', 'On_spot']
[WARNING] Using non segmented



******************************************** Iteration:0
['((!(1 >= rt_state.zone_1) and (6 > rt_input.obsDistance_0) and (rt_state.speed_status == Slow_speed) and (2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2))): On_spot', 'On_spot', '(((2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_0 > 2)) or ((2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_0 > 2) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_2 > 2)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and (1 > rt_input.obsDistance_2) and (7 > rt_input.obsDistance_3) and (7 == rt_input.obsDistance_1) and !(rt_state.speed_status == Midium_speed)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and (1 > rt_input.obsDistance_2) and !(7 > rt_input.obsDistance_3) and !(4 == rt_input.obsDistance_1)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and (12 > rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_0 > rt_input.obsDistance_3) and (4 == rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_0 > rt_input.obsDistance_3) and !(4 == rt_input.obsDistance_0) and !(4 >= rt_input.obsDistance_3) and (12 > rt_input.obsDistance_1) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_2 >= 4)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3) and (2 >= rt_input.obsDistance_2) and (4 >= rt_input.obsDistance_0) and (rt_input.obsDistance_1 > rt_input.obsDistance_3)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3) and (2 >= rt_input.obsDistance_2) and !(4 >= rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (7 == rt_input.obsDistance_1)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and !(7 == rt_input.obsDistance_1) and !(rt_input.obsDistance_1 > 4) and !(7 >= rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and !(4 >= rt_input.obsDistance_2) and (4 > rt_input.obsDistance_0) and !(1 == rt_state.zone_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and !(4 >= rt_input.obsDistance_2) and !(4 > rt_input.obsDistance_0) and (1 >= rt_state.zone_1) and !(rt_state.speed_status == Slow_speed) and (7 > rt_input.obsDistance_3)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and !(4 >= rt_input.obsDistance_2) and !(4 > rt_input.obsDistance_0) and (1 >= rt_state.zone_1) and !(rt_state.speed_status == Slow_speed) and !(7 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3)) or (!(2 >= rt_input.obsDistance_1) and !(7 >= rt_input.obsDistance_2) and (24 == rt_input.obsDistance_2) and (4 == rt_input.obsDistance_1))): Turn_left', '(!(1 >= rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(2 >= rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_1)): On_spot', 'On_spot']
[WARNING] Using non segmented
Generating model with 3 states
Finding CE
CE found :
[[1, 3], [1, 7], [2, 4], [2, 6], [2, 7], [3, 3], [3, 5], [3, 7], [4, 3], [4, 5], [4, 7], [5, 4], [5, 6], [5, 7], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [7, 3], [7, 5], [7, 7]]
Running CBMC...............
No model, increasing number of states to 4
Running CBMC...............
Final Generated model
[[1, 1, 2], [2, 2, 3], [2, 4, 2], [2, 6, 4], [3, 3, 2], [3, 5, 3], [4, 7, 2]]


Time taken: 0.4672105312347412



******************************************** Iteration:1
['start', '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right', '((!(1 >= rt_state.zone_1) and (6 > rt_input.obsDistance_0) and (rt_state.speed_status == Slow_speed) and (2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2))): On_spot', 'On_spot', '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right', '((!(1 >= rt_state.zone_1) and (6 > rt_input.obsDistance_0) and (rt_state.speed_status == Slow_speed) and (2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2))): On_spot', 'On_spot', '(((2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_0 > 2)) or ((2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_0 > 2) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_2 > 2)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and (1 > rt_input.obsDistance_2) and (7 > rt_input.obsDistance_3) and (7 == rt_input.obsDistance_1) and !(rt_state.speed_status == Midium_speed)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and (1 > rt_input.obsDistance_2) and !(7 > rt_input.obsDistance_3) and !(4 == rt_input.obsDistance_1)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and (12 > rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_0 > rt_input.obsDistance_3) and (4 == rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_0 > rt_input.obsDistance_3) and !(4 == rt_input.obsDistance_0) and !(4 >= rt_input.obsDistance_3) and (12 > rt_input.obsDistance_1) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_2 >= 4)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3) and (2 >= rt_input.obsDistance_2) and (4 >= rt_input.obsDistance_0) and (rt_input.obsDistance_1 > rt_input.obsDistance_3)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3) and (2 >= rt_input.obsDistance_2) and !(4 >= rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (7 == rt_input.obsDistance_1)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and !(7 == rt_input.obsDistance_1) and !(rt_input.obsDistance_1 > 4) and !(7 >= rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and !(4 >= rt_input.obsDistance_2) and (4 > rt_input.obsDistance_0) and !(1 == rt_state.zone_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and !(4 >= rt_input.obsDistance_2) and !(4 > rt_input.obsDistance_0) and (1 >= rt_state.zone_1) and !(rt_state.speed_status == Slow_speed) and (7 > rt_input.obsDistance_3)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and !(4 >= rt_input.obsDistance_2) and !(4 > rt_input.obsDistance_0) and (1 >= rt_state.zone_1) and !(rt_state.speed_status == Slow_speed) and !(7 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3)) or (!(2 >= rt_input.obsDistance_1) and !(7 >= rt_input.obsDistance_2) and (24 == rt_input.obsDistance_2) and (4 == rt_input.obsDistance_1))): Turn_left', '(!(1 >= rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(2 >= rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_1)): On_spot', 'On_spot', 'On_spot']
[WARNING] Using non segmented



------------- Verifying: ----------------------------

All behaviors present
Final Generated model
[[1, 1, 2], [2, 2, 3], [2, 4, 2], [2, 6, 4], [3, 3, 2], [3, 5, 3], [4, 7, 2]]
Number of states: 4
Number of transitions: 7



******************************************** TRACE:3
Using Incremental SAT
6
Total size:83



******************************************** Iteration:0
['start', 'On_spot', '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right', '(((2 >= rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and (rt_state.speed_status == Slow_speed) and (1 == rt_input.obsDistance_2) and !(1 >= rt_input.obsDistance_3) and !(6 > rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and !(rt_state.speed_status == Slow_speed))): Turn_left', '(((1 > rt_state.zone_0) and (1 > rt_state.zone_1) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3)) or ((1 > rt_state.zone_0) and !(1 > rt_state.zone_1)) or (!(1 > rt_state.zone_0) and (1 >= rt_input.obsDistance_3) and !(rt_state.speed_status == Slow_speed))): Turn_right', '(((2 >= rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and (rt_state.speed_status == Slow_speed) and (1 == rt_input.obsDistance_2) and !(1 >= rt_input.obsDistance_3) and !(6 > rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and !(rt_state.speed_status == Slow_speed))): Turn_left', 'Turn_left', '(!(1 >= rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(2 >= rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_1)): On_spot', 'On_spot', 'On_spot']
[WARNING] Using non segmented



******************************************** Iteration:0
['On_spot', '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right', '(((2 >= rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and (rt_state.speed_status == Slow_speed) and (1 == rt_input.obsDistance_2) and !(1 >= rt_input.obsDistance_3) and !(6 > rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and !(rt_state.speed_status == Slow_speed))): Turn_left', '(((1 > rt_state.zone_0) and (1 > rt_state.zone_1) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3)) or ((1 > rt_state.zone_0) and !(1 > rt_state.zone_1)) or (!(1 > rt_state.zone_0) and (1 >= rt_input.obsDistance_3) and !(rt_state.speed_status == Slow_speed))): Turn_right', '(((2 >= rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and (rt_state.speed_status == Slow_speed) and (1 == rt_input.obsDistance_2) and !(1 >= rt_input.obsDistance_3) and !(6 > rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and !(rt_state.speed_status == Slow_speed))): Turn_left', 'Turn_left', '(!(1 >= rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(2 >= rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_1)): On_spot', 'On_spot', 'On_spot']
[WARNING] Using non segmented
Generating model with 4 states
Finding CE
CE found :
[[1, 7], [1, 8], [1, 9], [1, 10], [2, 2], [2, 4], [2, 6], [2, 7], [2, 9], [2, 10], [3, 7], [3, 8], [3, 9], [3, 10], [4, 3], [4, 5], [4, 7], [4, 8], [4, 9], [4, 10], [5, 2], [5, 4], [5, 7], [5, 9], [5, 10], [6, 2], [6, 4], [6, 8], [7, 3], [7, 5], [7, 7], [7, 8], [7, 9], [7, 10], [8, 1], [8, 2], [8, 3], [8, 4], [8, 5], [8, 6], [8, 8], [9, 1], [9, 2], [9, 4], [9, 6], [9, 7], [9, 9], [9, 10], [10, 2], [10, 3], [10, 4], [10, 5], [10, 6], [10, 8]]
Running CBMC...............
Final Generated model
[[1, 1, 2], [2, 2, 3], [2, 4, 2], [2, 6, 4], [3, 3, 2], [3, 5, 3], [3, 8, 4], [4, 7, 2], [4, 9, 3], [4, 10, 4]]


Time taken: 0.75152587890625



******************************************** Iteration:1
['start', 'On_spot', '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right', '(((2 >= rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and (rt_state.speed_status == Slow_speed) and (1 == rt_input.obsDistance_2) and !(1 >= rt_input.obsDistance_3) and !(6 > rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and !(rt_state.speed_status == Slow_speed))): Turn_left', '(((1 > rt_state.zone_0) and (1 > rt_state.zone_1) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3)) or ((1 > rt_state.zone_0) and !(1 > rt_state.zone_1)) or (!(1 > rt_state.zone_0) and (1 >= rt_input.obsDistance_3) and !(rt_state.speed_status == Slow_speed))): Turn_right', '(((2 >= rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and (rt_state.speed_status == Slow_speed) and (1 == rt_input.obsDistance_2) and !(1 >= rt_input.obsDistance_3) and !(6 > rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and !(rt_state.speed_status == Slow_speed))): Turn_left', 'Turn_left', '(!(1 >= rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(2 >= rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_1)): On_spot', 'On_spot', 'On_spot', '(((2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_0 > 2)) or ((2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_0 > 2) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_2 > 2)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and (1 > rt_input.obsDistance_2) and (7 > rt_input.obsDistance_3) and (7 == rt_input.obsDistance_1) and !(rt_state.speed_status == Midium_speed)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and (1 > rt_input.obsDistance_2) and !(7 > rt_input.obsDistance_3) and !(4 == rt_input.obsDistance_1)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and (12 > rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_0 > rt_input.obsDistance_3) and (4 == rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_0 > rt_input.obsDistance_3) and !(4 == rt_input.obsDistance_0) and !(4 >= rt_input.obsDistance_3) and (12 > rt_input.obsDistance_1) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_2 >= 4)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3) and (2 >= rt_input.obsDistance_2) and (4 >= rt_input.obsDistance_0) and (rt_input.obsDistance_1 > rt_input.obsDistance_3)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3) and (2 >= rt_input.obsDistance_2) and !(4 >= rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (7 == rt_input.obsDistance_1)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and !(7 == rt_input.obsDistance_1) and !(rt_input.obsDistance_1 > 4) and !(7 >= rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and !(4 >= rt_input.obsDistance_2) and (4 > rt_input.obsDistance_0) and !(1 == rt_state.zone_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and !(4 >= rt_input.obsDistance_2) and !(4 > rt_input.obsDistance_0) and (1 >= rt_state.zone_1) and !(rt_state.speed_status == Slow_speed) and (7 > rt_input.obsDistance_3)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and !(4 >= rt_input.obsDistance_2) and !(4 > rt_input.obsDistance_0) and (1 >= rt_state.zone_1) and !(rt_state.speed_status == Slow_speed) and !(7 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3)) or (!(2 >= rt_input.obsDistance_1) and !(7 >= rt_input.obsDistance_2) and (24 == rt_input.obsDistance_2) and (4 == rt_input.obsDistance_1))): Turn_left']
[WARNING] Using non segmented



------------- Verifying: ----------------------------

All behaviors present
Final Generated model
[[1, 1, 2], [2, 2, 3], [2, 4, 2], [2, 6, 4], [3, 3, 2], [3, 5, 3], [3, 8, 4], [4, 7, 2], [4, 9, 3], [4, 10, 4]]
Number of states: 4
Number of transitions: 10



******************************************** TRACE:4
Already present!!



******************************************** TRACE:5
Already present!!



******************************************** TRACE:6
Already present!!



******************************************** TRACE:7
Already present!!



******************************************** TRACE:8
Already present!!



******************************************** TRACE:9
Already present!!



******************************************** TRACE:10
Already present!!



******************************************** TRACE:11
Already present!!



******************************************** TRACE:12
Already present!!



******************************************** TRACE:13
Already present!!



******************************************** TRACE:14
Already present!!



******************************************** TRACE:15
Already present!!



******************************************** TRACE:16
Already present!!



******************************************** TRACE:17
Already present!!



******************************************** TRACE:18
Already present!!



******************************************** TRACE:19
Already present!!



******************************************** TRACE:20
Already present!!



******************************************** TRACE:21
Already present!!



******************************************** TRACE:22
Already present!!



******************************************** TRACE:23
Already present!!



******************************************** TRACE:24
Already present!!



******************************************** TRACE:25
Already present!!



******************************************** TRACE:26
Already present!!



******************************************** TRACE:27
Already present!!



******************************************** TRACE:28
Already present!!



******************************************** TRACE:29
Already present!!



******************************************** TRACE:30
Already present!!



******************************************** TRACE:31
Already present!!



******************************************** TRACE:32
Already present!!



******************************************** TRACE:33
Already present!!



******************************************** TRACE:34
Already present!!



******************************************** TRACE:35
Already present!!



******************************************** TRACE:36
Already present!!



******************************************** TRACE:37
Already present!!



******************************************** TRACE:38
Already present!!
NFA states:  4


Time taken: 0.9803950786590576


Converting NFA to DFA..........
states =  4
Length of trace: 508

All behaviors present
States not visited
[]
Final Generated model
[[1, 1, 2], [2, 2, 3], [2, 4, 2], [2, 6, 4], [3, 3, 2], [3, 5, 3], [3, 8, 4], [4, 7, 2], [4, 9, 3], [4, 10, 4]]
[[1, 'start', 2], [2, '(((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 2) and (rt_input.obsDistance_0 > 4)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_1 > 4) and (1 == rt_state.zone_1) and !(rt_state.speed_status == Midium_speed)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 == rt_input.obsDistance_2) and !(rt_input.obsDistance_0 > 7)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_1 > 4) and !(3 == rt_input.obsDistance_0) and !(rt_input.obsDistance_3 == rt_state.zone_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and (4 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_3 > 1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_1) and (1 >= rt_state.zone_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 > rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_1)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and (7 > rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= 23) and (rt_input.obsDistance_2 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and (4 >= rt_input.obsDistance_1) and !(rt_state.speed_status == Stop) and (1 >= rt_state.zone_0) and !(7 > rt_input.obsDistance_0)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and (rt_input.obsDistance_1 >= 7) and !(rt_input.obsDistance_1 - rt_input.obsDistance_3 <= 1) and (rt_input.obsDistance_3 >= 11)) or ((rt_input.obsDistance_0 > rt_state.zone_1) and !(4 >= rt_input.obsDistance_3) and !(4 >= rt_input.obsDistance_1) and !(rt_state.zone_0 == rt_state.zone_1) and !(rt_input.obsDistance_1 >= 7)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and (2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(rt_input.obsDistance_0 > rt_state.zone_1) and !(2 >= rt_input.obsDistance_1))): Turn_right', 3], [2, 'On_spot', 2], [2, '(((2 >= rt_input.obsDistance_1) and (rt_input.obsDistance_0 > 2)) or ((2 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_0 > 2) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_2 > 2)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and (1 > rt_input.obsDistance_2) and (7 > rt_input.obsDistance_3) and (7 == rt_input.obsDistance_1) and !(rt_state.speed_status == Midium_speed)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and (1 > rt_input.obsDistance_2) and !(7 > rt_input.obsDistance_3) and !(4 == rt_input.obsDistance_1)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and (12 > rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_0 > rt_input.obsDistance_3) and (4 == rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_0 > rt_input.obsDistance_3) and !(4 == rt_input.obsDistance_0) and !(4 >= rt_input.obsDistance_3) and (12 > rt_input.obsDistance_1) and (rt_input.obsDistance_1 > 4) and !(rt_input.obsDistance_2 >= 4)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3) and (2 >= rt_input.obsDistance_2) and (4 >= rt_input.obsDistance_0) and (rt_input.obsDistance_1 > rt_input.obsDistance_3)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3) and (2 >= rt_input.obsDistance_2) and !(4 >= rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (7 == rt_input.obsDistance_1)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and (4 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and !(7 == rt_input.obsDistance_1) and !(rt_input.obsDistance_1 > 4) and !(7 >= rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and !(4 >= rt_input.obsDistance_2) and (4 > rt_input.obsDistance_0) and !(1 == rt_state.zone_0)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and !(4 >= rt_input.obsDistance_2) and !(4 > rt_input.obsDistance_0) and (1 >= rt_state.zone_1) and !(rt_state.speed_status == Slow_speed) and (7 > rt_input.obsDistance_3)) or (!(2 >= rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 >= 4) and !(1 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_0) and !(4 >= rt_input.obsDistance_2) and !(4 > rt_input.obsDistance_0) and (1 >= rt_state.zone_1) and !(rt_state.speed_status == Slow_speed) and !(7 > rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > rt_input.obsDistance_3)) or (!(2 >= rt_input.obsDistance_1) and !(7 >= rt_input.obsDistance_2) and (24 == rt_input.obsDistance_2) and (4 == rt_input.obsDistance_1))): Turn_left', 4], [3, '((!(1 >= rt_state.zone_1) and (6 > rt_input.obsDistance_0) and (rt_state.speed_status == Slow_speed) and (2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and (2 >= rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_1) and !(6 > rt_input.obsDistance_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2))): On_spot', 2], [3, 'Turn_right', 3], [3, '(((2 >= rt_input.obsDistance_1) and !(2 >= rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and (rt_state.speed_status == Slow_speed) and (1 == rt_input.obsDistance_2) and !(1 >= rt_input.obsDistance_3) and !(6 > rt_input.obsDistance_0)) or (!(2 >= rt_input.obsDistance_1) and (2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and !(rt_state.speed_status == Slow_speed))): Turn_left', 4], [4, '(!(1 >= rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(2 >= rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_1)): On_spot', 2], [4, '(((1 > rt_state.zone_0) and (1 > rt_state.zone_1) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3)) or ((1 > rt_state.zone_0) and !(1 > rt_state.zone_1)) or (!(1 > rt_state.zone_0) and (1 >= rt_input.obsDistance_3) and !(rt_state.speed_status == Slow_speed))): Turn_right', 3], [4, 'Turn_left', 4]]
Number of states: 4
Number of transitions: 10


Time taken: 0.9829864501953125


Time taken: 1.2026104927062988
