ingoing state : 1
outgoing state : 2
event : start

ingoing state : 2
outgoing state : 2
event : On_spot

ingoing state : 2
outgoing state : 3
predicate : ((!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and (3 == rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and (1 == (rt_input.obsDistance_0 - 3))) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and (1 == rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and (1 == rt_input.obsDistance_3) and !(1 == rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and (rt_input.obsDistance_0 >= 12) and (rt_input.obsDistance_3 > rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and (1 >= rt_state.zone_1) and !(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_input.obsDistance_1 >= 7) and !(1 == rt_input.obsDistance_3) and !(rt_input.obsDistance_0 >= 12) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_input.obsDistance_1) and (7 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and (rt_input.obsDistance_0 <= 4) and !(rt_state.zone_1 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and (rt_input.obsDistance_2 > rt_input.obsDistance_3) and !(rt_state.zone_0 >= rt_input.obsDistance_2) and (rt_state.zone_1 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and (rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(rt_input.obsDistance_2 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= 7) and !(rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_3 >= 6) and (rt_state.zone_0 >= rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_1 > rt_state.zone_0) and !(1 >= rt_state.zone_1) and !(rt_state.speed_status == Stop) and !(rt_input.obsDistance_0 <= 4) and (rt_input.obsDistance_2 <= 4) and !(3 == rt_input.obsDistance_3) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > rt_state.zone_0)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2)) or (!(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_1 > rt_state.zone_0) and !(rt_input.obsDistance_3 >= rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > 2) and (rt_input.obsDistance_0 > 2)))
event : Turn_left

ingoing state : 2
outgoing state : 4
predicate : ((!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and (3 == rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and (1 == (rt_input.obsDistance_1 - 3))) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_0 > rt_state.zone_1) and (rt_input.obsDistance_2 >= 18) and (2 >= rt_input.obsDistance_3) and !(rt_input.obsDistance_0 > 19)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_2 >= 18) and (rt_input.obsDistance_3 <= 4) and (rt_input.obsDistance_3 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 == rt_state.zone_0)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_2 >= 18) and (rt_input.obsDistance_3 <= 4) and (rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 == rt_state.zone_0) and (12 == rt_input.obsDistance_0) and !(1 > rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_2 >= 18) and (rt_input.obsDistance_3 <= 4) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 >= 6) and (rt_state.zone_0 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_0 > rt_state.zone_1) and (rt_input.obsDistance_1 - rt_input.obsDistance_2 >= -1) and (rt_input.obsDistance_3 == rt_state.zone_0) and (rt_input.obsDistance_1 >= rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_0 > rt_state.zone_1) and (rt_input.obsDistance_1 - rt_input.obsDistance_2 >= -1) and !(rt_input.obsDistance_3 == rt_state.zone_0)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_1 - rt_input.obsDistance_2 >= -1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_1 - rt_input.obsDistance_2 >= -1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2) and (7 == rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and (rt_state.speed_status == Stop) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_0 > rt_state.zone_1) and !(rt_input.obsDistance_1 - rt_input.obsDistance_2 >= -1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(rt_input.obsDistance_2 > 2)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and (2 == rt_state.zone_0) and (rt_input.obsDistance_0 > 2) and !(rt_input.obsDistance_1 <= 4) and (rt_input.obsDistance_3 <= 4) and (rt_input.obsDistance_2 >= 6) and (2 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and (2 == rt_state.zone_0) and (rt_input.obsDistance_0 > 2) and !(rt_input.obsDistance_1 <= 4) and (rt_input.obsDistance_3 <= 4) and !(rt_input.obsDistance_2 >= 6) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (rt_input.obsDistance_3 > 2) and !(1 == (rt_input.obsDistance_2 - rt_state.zone_0))) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and (2 == rt_state.zone_0) and !(rt_input.obsDistance_0 > 2) and (rt_input.obsDistance_2 > rt_state.zone_1) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3) and !(rt_state.zone_1 >= rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and (2 == rt_state.zone_0) and !(rt_input.obsDistance_0 > 2) and (rt_input.obsDistance_2 > rt_state.zone_1) and !(rt_input.obsDistance_2 >= rt_input.obsDistance_3)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and (2 == rt_state.zone_0) and !(rt_input.obsDistance_0 > 2) and !(rt_input.obsDistance_2 > rt_state.zone_1)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and (3 == rt_input.obsDistance_1)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and !(3 == rt_input.obsDistance_1) and (1 == (rt_input.obsDistance_1 - 3))) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and (rt_input.obsDistance_2 - rt_state.zone_0 <= 1) and (3 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_2 - rt_state.zone_0 <= 1) and (rt_input.obsDistance_3 > rt_input.obsDistance_2) and (2 >= rt_input.obsDistance_0)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_2 - rt_state.zone_0 <= 1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_1) and (rt_input.obsDistance_0 > 2) and (2 == rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= 6)) or (!(3 == rt_input.obsDistance_0) and !(1 == (rt_input.obsDistance_0 - 3)) and !(rt_state.speed_status == Stop) and !(2 == rt_state.zone_0) and !(3 == rt_input.obsDistance_1) and !(1 == (rt_input.obsDistance_1 - 3)) and !(rt_input.obsDistance_2 - rt_state.zone_0 <= 1) and !(rt_input.obsDistance_3 > rt_input.obsDistance_2) and !(3 >= rt_input.obsDistance_1) and !(rt_input.obsDistance_0 > 2)))
event : Turn_right

ingoing state : 3
outgoing state : 5
event : Turn_left

ingoing state : 3
outgoing state : 2
predicate : ((!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and (19 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_1) and !(14 > rt_input.obsDistance_3)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and !(19 > rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and !(14 > rt_input.obsDistance_1)))
event : On_spot

ingoing state : 3
outgoing state : 4
predicate : (((1 == rt_input.obsDistance_3) and (rt_state.speed_status == Fast_speed)) or ((1 == rt_input.obsDistance_3) and !(rt_state.speed_status == Fast_speed) and !(8 > rt_input.obsDistance_2) and !(1 >= rt_state.zone_0) and (2 == rt_state.zone_1)))
event : Turn_right

ingoing state : 4
outgoing state : 4
event : Turn_right

ingoing state : 4
outgoing state : 2
predicate : ((2 == rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (2 == rt_state.zone_1) and !(9 > rt_input.obsDistance_0) and !(rt_state.speed_status == Fast_speed))
event : On_spot

ingoing state : 5
outgoing state : 5
event : Turn_left

ingoing state : 5
outgoing state : 2
predicate : ((!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and (19 > rt_input.obsDistance_2) and !(2 >= rt_input.obsDistance_1) and !(14 > rt_input.obsDistance_3)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and (14 > rt_input.obsDistance_1) and !(rt_state.speed_status == Fast_speed) and (2 == rt_state.zone_1) and !(19 > rt_input.obsDistance_2)) or (!(1 >= rt_state.zone_0) and !(2 >= rt_input.obsDistance_3) and !(2 >= rt_input.obsDistance_2) and !(14 > rt_input.obsDistance_1)))
event : On_spot

