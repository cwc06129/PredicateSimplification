[predicate1]
((7 == rt_input.number) or (((4 > rt_input.number) or (5 == rt_input.number)) and (rt_input.number > 1)))

[predicate2]
((((3 > rt_input.n2) or (4 == rt_input.n2)) and (3 > rt_input.n1)) or (((rt_input.n2 > 7) and (3 > rt_input.n1)) or (((6 == rt_input.n2) and (3 > rt_input.n1)) or ((((9 > rt_input.n2) and (!((3 == rt_input.n2) or (rt_input.n1 == rt_input.n2)))) and (6 == rt_input.n1)) or (((6 == rt_input.n2) and (((!(6 == rt_input.n1)) and (rt_input.n1 > 2)) and ((!(9 == rt_input.n1)) and (rt_input.n1 > 3)))) or (((3 > rt_input.n2) and (8 == rt_input.n1)) or ((3 > rt_input.n2) and (4 == rt_input.n1))))))))

[predicate3]
(((4 == rt_input.n2) and (4 == rt_input.n1)) or (((rt_input.n2 > 7) and (4 == rt_input.n1)) or ((4 == rt_input.n2) and (rt_input.n1 > 7))))

[predicate4]
(((5 > rt_input.n2) and (9 == rt_input.n1)) or (((6 == rt_input.n2) and (9 == rt_input.n1)) or (((9 == rt_input.n2) and (7 > rt_input.n1)) or (((3 == rt_input.n2) and (3 == rt_input.n1)) or (((6 == rt_input.n2) and (3 == rt_input.n1)) or ((3 == rt_input.n2) and (6 == rt_input.n1)))))))

[predicate5]
((rt_input.n2 > 8) and (rt_input.n1 > 8))

[predicate6]
(((rt_input.n2 > 6) and (rt_input.n1 == rt_input.n2)) and (8 > rt_input.n1))

[predicate7]
((rt_input.n1 == rt_input.n2) and (8 == rt_input.n1))

[predicate8]
(((rt_input.n2 > 4) and (7 > rt_input.n2)) and (6 == rt_input.n1))

[predicate9]
((5 == rt_input.n2) and (5 == rt_input.n1))

[predicate10]
(((6 > rt_input.c) and ((6 == rt_input.a) and (rt_input.b > 5))) or (((rt_input.c > 5) and ((6 == rt_input.a) and (7 > rt_input.b))) or (((6 == rt_input.c) and ((6 == rt_input.a) and (rt_input.b > 6))) or (((rt_input.c > 5) and ((6 > rt_input.a) and (6 == rt_input.b))) or (((7 > rt_input.c) and ((rt_input.a > 6) and (6 == rt_input.b))) or (((6 == rt_input.c) and ((rt_input.a > 6) and (5 > rt_input.b))) or (((6 == rt_input.c) and ((6 > rt_input.a) and (rt_input.b > 6))) or ((6 == rt_input.c) and ((rt_input.a > 6) and (5 == rt_input.b))))))))))

[predicate11]
(((rt_input.c > 4) and ((5 > rt_input.a) and (5 == rt_input.b))) or (((5 == rt_input.c) and ((5 > rt_input.a) and (rt_input.b > 5))) or (((rt_input.c > 4) and ((5 == rt_input.a) and (4 > rt_input.b))) or (((5 == rt_input.c) and ((5 == rt_input.a) and (4 == rt_input.b))) or (((6 > rt_input.c) and ((5 == rt_input.a) and (rt_input.b > 4))) or (((rt_input.c > 5) and ((5 == rt_input.a) and ((rt_input.b > 3) and (6 > rt_input.b)))) or (((5 > rt_input.c) and ((rt_input.a > 5) and (5 == rt_input.b))) or ((5 == rt_input.c) and ((rt_input.a > 5) and (6 > rt_input.b))))))))))

[predicate12]
(((2 == rt_input.c) and ((2 == rt_input.a) and (2 > rt_input.b))) or (((3 > rt_input.c) and ((2 == rt_input.a) and (rt_input.b > 1))) or (((rt_input.c > 2) and ((2 == rt_input.a) and (3 > rt_input.b))) or (((rt_input.c > 1) and ((2 > rt_input.a) and (2 == rt_input.b))) or (((2 == rt_input.c) and ((2 > rt_input.a) and (rt_input.b > 2))) or (((3 > rt_input.c) and ((rt_input.a > 2) and (2 == rt_input.b))) or ((2 == rt_input.c) and ((rt_input.a > 2) and (2 > rt_input.b)))))))))

[predicate13]
(((3 > rt_input.c) and ((3 == rt_input.a) and (rt_input.b > 2))) or (((3 > rt_input.c) and ((rt_input.a > 3) and (3 == rt_input.b))) or (((3 == rt_input.c) and ((3 > rt_input.a) and (3 == rt_input.b))) or (((3 == rt_input.c) and ((rt_input.a > 2) and (4 > rt_input.b))) or (((3 == rt_input.c) and ((4 > rt_input.a) and (rt_input.b > 3))) or (((rt_input.c > 3) and ((3 == rt_input.a) and (3 > rt_input.b))) or ((rt_input.c > 3) and ((4 > rt_input.a) and (3 == rt_input.b)))))))))

[predicate14]
(((8 == rt_input.c) and ((rt_input.a > 7) and (8 > rt_input.b))) or (((rt_input.c > 8) and ((8 == rt_input.a) and (8 > rt_input.b))) or (((9 > rt_input.c) and ((8 == rt_input.a) and (rt_input.b > 7))) or (((rt_input.c > 8) and ((8 == rt_input.a) and (8 == rt_input.b))) or (((8 > rt_input.c) and ((rt_input.a > 8) and (8 == rt_input.b))) or (((8 == rt_input.c) and ((8 > rt_input.a) and (rt_input.b > 7))) or (((8 == rt_input.c) and ((rt_input.a > 8) and (8 == rt_input.b))) or ((rt_input.c > 8) and ((8 > rt_input.a) and (8 == rt_input.b))))))))))

[predicate15]
(((7 > rt_input.c) and ((7 == rt_input.a) and (rt_input.b > 6))) or (((7 > rt_input.c) and ((rt_input.a > 7) and (7 == rt_input.b))) or (((7 == rt_input.c) and ((rt_input.a > 6) and (7 > rt_input.b))) or (((7 == rt_input.c) and ((8 > rt_input.a) and (rt_input.b > 6))) or (((7 == rt_input.c) and ((rt_input.a > 7) and (7 == rt_input.b))) or (((rt_input.c > 7) and ((7 == rt_input.a) and (7 > rt_input.b))) or ((rt_input.c > 7) and ((8 > rt_input.a) and (7 == rt_input.b)))))))))

[predicate16]
(((4 == rt_input.a) and (4 == rt_input.b)) or (((4 == rt_input.c) and ((4 > rt_input.a) and (4 == rt_input.b))) or (((5 > rt_input.c) and ((rt_input.a > 4) and (4 == rt_input.b))) or (((rt_input.c > 4) and ((4 > rt_input.a) and (4 == rt_input.b))) or (((4 == rt_input.c) and ((4 == rt_input.a) and (4 > rt_input.b))) or (((5 > rt_input.c) and ((4 == rt_input.a) and (rt_input.b > 4))) or (((rt_input.c > 4) and ((4 == rt_input.a) and (4 > rt_input.b))) or (((4 == rt_input.c) and ((4 > rt_input.a) and (rt_input.b > 4))) or ((4 == rt_input.c) and ((rt_input.a > 4) and (4 > rt_input.b)))))))))))

[predicate17]
(((1 > rt_input.c) and ((rt_input.a > 0) and (1 == rt_input.b))) or (((1 == rt_input.c) and ((1 > rt_input.a) and (1 == rt_input.b))) or (((1 == rt_input.c) and ((rt_input.a > 0) and (2 > rt_input.b))) or (((1 > rt_input.c) and ((1 == rt_input.a) and (rt_input.b > 1))) or (((1 == rt_input.c) and ((2 > rt_input.a) and (rt_input.b > 1))) or (((rt_input.c > 1) and ((2 > rt_input.a) and (1 == rt_input.b))) or ((rt_input.c > 1) and ((1 == rt_input.a) and (1 > rt_input.b)))))))))

[predicate18]
(((rt_input.c > 8) and ((9 > rt_input.a) and (rt_input.b > 8))) or (((rt_input.c > 8) and ((rt_input.a > 8) and (9 > rt_input.b))) or ((rt_input.a > 8) and (rt_input.b > 8))))

[predicate19]
(((rt_input.ta == rt_input.tc) and ((rt_input.tb > rt_input.ta) and (3 > rt_input.tb))) or (((((rt_input.tc > 2) and (rt_input.tc > rt_input.ta)) and ((rt_input.tc > 5) and (9 > rt_input.tc))) and (((rt_input.ta > rt_input.tb) and (2 == rt_input.tb)) and (4 == rt_input.ta))) or (((((rt_input.tc > 2) and (rt_input.tc > rt_input.ta)) and ((rt_input.tc > 6) and (9 > rt_input.tc))) and (((rt_input.ta > rt_input.tb) and (2 == rt_input.tb)) and (5 == rt_input.ta))) or ((((rt_input.tc > rt_input.ta) and (8 == rt_input.tc)) and (((rt_input.ta > rt_input.tb) and (2 == rt_input.tb)) and (6 == rt_input.ta))) or ((((rt_input.tc > 8) and (rt_input.tc > rt_input.ta)) and (((rt_input.ta > rt_input.tb) and (2 == rt_input.tb)) and ((!(8 == rt_input.ta)) and (rt_input.ta > 3)))) or ((((rt_input.tc > 4) and (rt_input.tc > rt_input.ta)) and (((rt_input.ta > rt_input.tb) and (2 == rt_input.tb)) and ((rt_input.ta > 1) and (4 > rt_input.ta)))) or ((((rt_input.tc > 3) and (rt_input.tc > rt_input.ta)) and (((3 > rt_input.ta) and (2 == rt_input.tb)) and ((!(8 == rt_input.ta)) and (rt_input.ta > 1)))) or ((((rt_input.tc > 2) and (rt_input.tc > rt_input.ta)) and ((2 == rt_input.tb) and (2 > rt_input.ta))) or ((((!(rt_input.ta == rt_input.tc)) and ((2 + rt_input.tc) >  rt_input.ta)) and (2 > rt_input.tb)) or ((((-1 + rt_input.ta) > rt_input.tc) and (3 > rt_input.tb)) or (((2 > rt_input.tc) and (((1 + rt_input.ta) == rt_input.tb) and (rt_input.ta > 1))) or (((2 > rt_input.tc) and (((-1 + rt_input.ta) == rt_input.tb) and (rt_input.tb > 2))) or (((3 > rt_input.tc) and (((rt_input.tb > 2) and (!(rt_input.ta == rt_input.tb))) and ((!((1 + rt_input.ta) == rt_input.tb)) and (!((-1 + rt_input.ta) == rt_input.tb))))) or (((3 == rt_input.tc) and (((6 == rt_input.tb) and (((rt_input.tb > 2) and (!(rt_input.ta == rt_input.tb))) and ((!((1 + rt_input.ta) == rt_input.tb)) and (!((-1 + rt_input.ta) == rt_input.tb))))) and ((rt_input.ta > 4) and (!(8 == rt_input.ta))))) or (((3 == rt_input.tc) and ((((!(rt_input.ta == rt_input.tb)) and (9 == rt_input.tb)) and (((!((1 + rt_input.ta) == rt_input.tb)) and (!((-1 + rt_input.ta) == rt_input.tb))) and (rt_input.tb > 6))) and ((rt_input.ta > 4) and (7 > rt_input.ta)))) or (((3 == rt_input.tc) and (((((rt_input.tb > 2) and (!(rt_input.ta == rt_input.tb))) and ((!((1 + rt_input.ta) == rt_input.tb)) and (!((-1 + rt_input.ta) == rt_input.tb)))) and (8 == rt_input.tb)) and (5 == rt_input.ta))) or (((3 == rt_input.tc) and ((((!((1 + rt_input.ta) == rt_input.tb)) and (!((-1 + rt_input.ta) == rt_input.tb))) and ((6 > rt_input.tb) and ((rt_input.tb > 2) and (!(rt_input.ta == rt_input.tb))))) and (rt_input.ta > 7))) or (((3 == rt_input.tc) and (((3 == rt_input.tb) and (((rt_input.tb > 2) and (!(rt_input.ta == rt_input.tb))) and ((!((1 + rt_input.ta) == rt_input.tb)) and (!((-1 + rt_input.ta) == rt_input.tb))))) and ((rt_input.ta > 5) and (8 > rt_input.ta)))) or (((3 == rt_input.tc) and ((((!(5 == rt_input.tb)) and ((rt_input.tb > 2) and (!(rt_input.ta == rt_input.tb)))) and (((!((1 + rt_input.ta) == rt_input.tb)) and (!((-1 + rt_input.ta) == rt_input.tb))) and ((!(3 == rt_input.tb)) and (6 > rt_input.tb)))) and (7 == rt_input.ta))) or ((((4 > rt_input.ta) and (3 == rt_input.tc)) and ((((6 > rt_input.tb) and ((rt_input.tb > 2) and (!(rt_input.ta == rt_input.tb)))) and (((!((1 + rt_input.ta) == rt_input.tb)) and (!((-1 + rt_input.ta) == rt_input.tb))) and ((!(3 == rt_input.tb)) and (7 > rt_input.tb)))) and (2 > rt_input.ta))) or ((((4 > rt_input.ta) and (3 == rt_input.tc)) and (((((rt_input.tb > 2) and (!(rt_input.ta == rt_input.tb))) and ((!((1 + rt_input.ta) == rt_input.tb)) and (!((-1 + rt_input.ta) == rt_input.tb)))) and (5 == rt_input.tb)) and (2 == rt_input.ta))) or ((((4 > rt_input.ta) and (3 == rt_input.tc)) and ((((rt_input.tb > 5) and ((rt_input.tb > 2) and (!(rt_input.ta == rt_input.tb)))) and (((!((1 + rt_input.ta) == rt_input.tb)) and (!((-1 + rt_input.ta) == rt_input.tb))) and ((!(3 == rt_input.tb)) and (7 > rt_input.tb)))) and (5 > rt_input.ta))) or (((3 == rt_input.tc) and ((((!((1 + rt_input.ta) == rt_input.tb)) and (!((-1 + rt_input.ta) == rt_input.tb))) and ((rt_input.tb > 6) and ((rt_input.tb > 2) and (!(rt_input.ta == rt_input.tb))))) and (5 > rt_input.ta))) or (((((!((-1 + rt_input.ta) == rt_input.tc)) and (7 > rt_input.tc)) and ((rt_input.tc > 5) and ((rt_input.tc > 3) and (!(rt_input.ta == rt_input.tc))))) and (((rt_input.ta == rt_input.tb) and ((rt_input.tb > 2) and (5 > rt_input.tb))) and (3 == rt_input.ta))) or ((((5 > rt_input.tc) and (((rt_input.tc > 3) and (!(rt_input.ta == rt_input.tc))) and ((!((-1 + rt_input.ta) == rt_input.tc)) and (7 > rt_input.tc)))) and ((4 == rt_input.tb) and (8 == rt_input.ta))) or ((((5 > rt_input.tc) and (((rt_input.tc > 3) and (!(rt_input.ta == rt_input.tc))) and ((!((-1 + rt_input.ta) == rt_input.tc)) and (7 > rt_input.tc)))) and ((3 == rt_input.tb) and ((rt_input.ta > 6) and (9 > rt_input.ta)))) or ((((5 == rt_input.tc) and (((rt_input.tc > 3) and (!(rt_input.ta == rt_input.tc))) and ((!((-1 + rt_input.ta) == rt_input.tc)) and (7 > rt_input.tc)))) and ((3 == rt_input.tb) and (8 == rt_input.ta))) or (((((!((-1 + rt_input.ta) == rt_input.tc)) and (rt_input.tc > 6)) and ((rt_input.tc > 7) and ((rt_input.tc > 3) and (!(rt_input.ta == rt_input.tc))))) and (((rt_input.ta == rt_input.tb) and ((rt_input.tb > 2) and (5 > rt_input.tb))) and ((rt_input.ta > 2) and (5 > rt_input.ta)))) or (((((!((-1 + rt_input.ta) == rt_input.tc)) and (rt_input.tc > 6)) and ((8 > rt_input.tc) and ((rt_input.tc > 3) and (!(rt_input.ta == rt_input.tc))))) and (((rt_input.ta == rt_input.tb) and ((rt_input.tb > 2) and (5 > rt_input.tb))) and (3 == rt_input.ta))) or (((((rt_input.tc > 3) and (!(rt_input.ta == rt_input.tc))) and ((!((-1 + rt_input.ta) == rt_input.tc)) and (rt_input.tc > 6))) and (((!(rt_input.ta == rt_input.tb)) and ((rt_input.tb > 2) and (5 > rt_input.tb))) and ((rt_input.ta > 2) and (5 > rt_input.ta)))) or ((((9 == rt_input.tc) and (((rt_input.tc > 3) and (!(rt_input.ta == rt_input.tc))) and ((!((-1 + rt_input.ta) == rt_input.tc)) and (rt_input.tc > 6)))) and ((4 == rt_input.tb) and (5 == rt_input.ta))) or ((((9 == rt_input.tc) and (((rt_input.tc > 3) and (!(rt_input.ta == rt_input.tc))) and ((!((-1 + rt_input.ta) == rt_input.tc)) and (rt_input.tc > 6)))) and ((3 == rt_input.tb) and ((rt_input.ta > 4) and (7 > rt_input.ta)))) or (((((rt_input.tc > 9) or (8 == rt_input.tc)) and (((rt_input.tc > 3) and (!(rt_input.ta == rt_input.tc))) and ((!((-1 + rt_input.ta) == rt_input.tc)) and (rt_input.tc > 6)))) and ((3 == rt_input.tb) and (5 == rt_input.ta))) or (((((!((-1 + rt_input.ta) == rt_input.tc)) and (rt_input.tc > 5)) and ((7 > rt_input.tc) and ((rt_input.tc > 3) and (!(rt_input.ta == rt_input.tc))))) and ((3 == rt_input.tb) and (rt_input.ta > 8))) or (((((rt_input.tc > 3) and (!(rt_input.ta == rt_input.tc))) and ((!((-1 + rt_input.ta) == rt_input.tc)) and (6 > rt_input.tc))) and (((rt_input.tb > 2) and (5 > rt_input.tb)) and (rt_input.ta > 8))) or ((((rt_input.tc > 7) and ((rt_input.tc > 3) and ((2 + rt_input.tc) > rt_input.tb))) and ((5 == rt_input.tb) and (3 == rt_input.ta))) or (((((2 + rt_input.tc) > rt_input.tb) and (rt_input.tc > 8)) and ((6 == rt_input.tb) and (3 == rt_input.ta))) or (((((2 + rt_input.tc) > rt_input.tb) and (rt_input.tc > 8)) and ((5 == rt_input.tb) and (4 == rt_input.ta))) or ((((rt_input.tb > 7) and (6 == rt_input.tc)) and ((9 == rt_input.tb) and (3 == rt_input.ta))) or (((((rt_input.tc > 3) and ((-1 + rt_input.tb) > rt_input.tc)) and (6 > rt_input.tc)) and ((9 == rt_input.tb) and ((rt_input.ta > 2) and (5 > rt_input.ta)))) or ((((6 > rt_input.tc) and ((rt_input.ta == rt_input.tc) and ((rt_input.tc > 3) and ((-1 + rt_input.tb) > rt_input.tc)))) and (((rt_input.tb > 9) or (8 == rt_input.tb)) and ((rt_input.ta > 2) and (5 > rt_input.ta)))) or ((((6 > rt_input.tc) and ((!(rt_input.ta == rt_input.tc)) and ((rt_input.tc > 3) and ((-1 + rt_input.tb) > rt_input.tc)))) and (((rt_input.tb > 9) or (8 == rt_input.tb)) and (3 == rt_input.ta))) or ((((rt_input.tb > 5) and (4 == rt_input.tc)) and ((7 == rt_input.tb) and (3 == rt_input.ta))) or (((4 == rt_input.tc) and ((5 == rt_input.tb) and (9 == rt_input.ta))) or (((4 == rt_input.tc) and ((rt_input.tb > 8) and (5 == rt_input.ta))) or ((((rt_input.tc > 3) and (!(rt_input.tb == rt_input.tc))) and ((rt_input.tb > 2) and (2 > rt_input.ta))) or (((((rt_input.tc > 3) and (!(rt_input.tb == rt_input.tc))) and ((-1 + rt_input.tb) > rt_input.tc)) and ((rt_input.tb > 2) and (2 == rt_input.ta))) or ((((rt_input.tc > 4) and (rt_input.tc > rt_input.tb)) and ((3 == rt_input.tb) and (2 == rt_input.ta))) or ((((rt_input.tc > rt_input.tb) and (9 == rt_input.tc)) and (((rt_input.tb > 5) and (8 > rt_input.tb)) and (2 == rt_input.ta))) or (((((rt_input.tc >= rt_input.tb) and (rt_input.tc > 5)) and (((rt_input.tc > 6) and (!(9 == rt_input.tc))) and ((rt_input.tc > 7) and ((rt_input.tc > 3) and (!(rt_input.tb == rt_input.tc)))))) and ((6 == rt_input.tb) and (2 == rt_input.ta))) or ((((rt_input.tc > 6) and (rt_input.tc > rt_input.tb)) and ((5 == rt_input.tb) and (2 == rt_input.ta))) or (((rt_input.tc > 5) and (rt_input.tc > rt_input.tb)) and ((4 == rt_input.tb) and (2 == rt_input.ta))))))))))))))))))))))))))))))))))))))))))))))))))))))

[predicate20]
(((rt_input.tc > rt_input.tb) and (rt_input.ta == rt_input.tc)) or (((((rt_input.tc > 1) and (5 > rt_input.tc)) and ((3 > rt_input.tc) and ((rt_input.tb >= rt_input.tc) and (rt_input.ta == rt_input.tc)))) and (((rt_input.tb > rt_input.ta) and (3 == rt_input.tb)) and (4 > rt_input.ta))) or (((((rt_input.tc > 1) and (5 > rt_input.tc)) and ((rt_input.tc > 2) and ((rt_input.tb >= rt_input.tc) and (rt_input.ta == rt_input.tc)))) and (((rt_input.tb > rt_input.ta) and (6 > rt_input.tb)) and (4 > rt_input.ta))) or ((((5 > rt_input.tc) and ((rt_input.tb >= rt_input.tc) and (rt_input.ta == rt_input.tc))) and (((rt_input.tb > rt_input.ta) and (8 > rt_input.tb)) and (rt_input.ta > 3))) or ((((rt_input.tc > 4) and ((rt_input.tb >= rt_input.tc) and (rt_input.ta == rt_input.tc))) and (rt_input.tb > rt_input.ta)) or (((((!(rt_input.ta == rt_input.tc)) and (rt_input.tb == rt_input.tc)) and (3 > rt_input.tc)) and (((rt_input.ta >= rt_input.tb) and (rt_input.tb > 1)) and (3 == rt_input.ta))) or (((((!(rt_input.ta == rt_input.tc)) and (rt_input.tb == rt_input.tc)) and ((rt_input.tc > 2) and (5 > rt_input.tc))) and ((rt_input.ta >= rt_input.tb) and (6 > rt_input.ta))) or (((((!(rt_input.ta == rt_input.tc)) and (rt_input.tb == rt_input.tc)) and ((rt_input.tc > 2) and (5 > rt_input.tc))) and (((rt_input.ta >= rt_input.tb) and (rt_input.tb > 3)) and ((rt_input.ta > 5) and (8 > rt_input.ta)))) or ((((rt_input.tc > 4) and ((!(rt_input.ta == rt_input.tc)) and (rt_input.tb == rt_input.tc))) and (rt_input.ta >= rt_input.tb)) or ((((!(rt_input.ta == rt_input.tc)) and (rt_input.tb == rt_input.tc)) and (rt_input.tb > rt_input.ta)) or ((((!(rt_input.ta == rt_input.tc)) and (!(rt_input.tb == rt_input.tc))) and ((rt_input.ta == rt_input.tb) and (rt_input.ta > 4))) or (((((!(rt_input.ta == rt_input.tc)) and (!(rt_input.tb == rt_input.tc))) and ((rt_input.tc >= rt_input.tb) and (8 > rt_input.tc))) and (((rt_input.tb > 3) and (rt_input.ta == rt_input.tb)) and (5 > rt_input.ta))) or (((((rt_input.tc >= rt_input.tb) and (8 > rt_input.tc)) and ((6 > rt_input.tc) and ((!(rt_input.ta == rt_input.tc)) and (!(rt_input.tb == rt_input.tc))))) and (((3 == rt_input.tb) and (rt_input.ta == rt_input.tb)) and (5 > rt_input.ta))) or ((((3 == rt_input.tc) and (((!(rt_input.ta == rt_input.tc)) and (!(rt_input.tb == rt_input.tc))) and ((rt_input.tc >= rt_input.tb) and (8 > rt_input.tc)))) and (((2 == rt_input.tb) and (rt_input.ta == rt_input.tb)) and (5 > rt_input.ta))) or (((!(rt_input.ta == rt_input.tc)) and (rt_input.tb > rt_input.tc)) and ((rt_input.ta == rt_input.tb) and (5 > rt_input.ta)))))))))))))))))

[predicate21]
((((!(rt_input.tb == rt_input.tc)) and (rt_input.tc > rt_input.ta)) and (((!(rt_input.ta == rt_input.tb)) and (2 == rt_input.tb)) and (8 == rt_input.ta))) or ((((rt_input.tc > rt_input.ta) and ((5 > rt_input.tc) and ((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))))) and (((!(rt_input.ta == rt_input.tb)) and (2 == rt_input.tb)) and ((rt_input.ta > 1) and (!(8 == rt_input.ta))))) or (((((5 == rt_input.tc) and ((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc)))) and ((rt_input.tc > rt_input.ta) and ((rt_input.tc > 4) and (9 > rt_input.tc)))) and (((!(rt_input.ta == rt_input.tb)) and (2 == rt_input.tb)) and (4 == rt_input.ta))) or (((((7 > rt_input.tc) and ((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc)))) and ((rt_input.tc > rt_input.ta) and ((rt_input.tc > 4) and (9 > rt_input.tc)))) and (((!(rt_input.ta == rt_input.tb)) and (2 == rt_input.tb)) and (5 == rt_input.ta))) or (((((8 > rt_input.tc) and ((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc)))) and ((rt_input.tc > rt_input.ta) and ((rt_input.tc > 4) and (9 > rt_input.tc)))) and (((!(rt_input.ta == rt_input.tb)) and (2 == rt_input.tb)) and (6 == rt_input.ta))) or (((((rt_input.tc > 4) and (9 > rt_input.tc)) and ((!(rt_input.tb == rt_input.tc)) and (rt_input.tc > rt_input.ta))) and (((!(rt_input.ta == rt_input.tb)) and (2 == rt_input.tb)) and ((rt_input.ta > 8) or (7 == rt_input.ta)))) or (((((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and (((2 + rt_input.tc) > rt_input.ta) and (rt_input.ta >= rt_input.tc))) and (((!(rt_input.ta == rt_input.tb)) and (2 == rt_input.tb)) and (rt_input.ta > 1))) or (((((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and ((rt_input.tc > 3) and ((-1 + rt_input.tb) == rt_input.tc))) and (((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2)) and (2 == rt_input.ta))) or (((((rt_input.tc > 3) and (!((-1 + rt_input.tb) == rt_input.tc))) and ((!(rt_input.ta == rt_input.tc)) and (rt_input.tc > rt_input.tb))) and (((rt_input.tb > 7) and ((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2))) and (2 == rt_input.ta))) or ((((((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and ((rt_input.tc > 3) and (!((-1 + rt_input.tb) == rt_input.tc)))) and ((7 > rt_input.tb) and (6 == rt_input.tc))) and ((((!(3 == rt_input.tb)) and (8 > rt_input.tb)) and ((rt_input.tb > 4) and ((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2)))) and (2 == rt_input.ta))) or (((((rt_input.tc >= rt_input.tb) and (rt_input.tc > 6)) and ((8 > rt_input.tc) and (((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and ((rt_input.tc > 3) and (!((-1 + rt_input.tb) == rt_input.tc)))))) and (((!(rt_input.ta == rt_input.tb)) and (6 == rt_input.tb)) and (2 == rt_input.ta))) or (((((rt_input.tc >= rt_input.tb) and (rt_input.tc > 4)) and ((rt_input.tc > 6) and ((9 > rt_input.tc) and ((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc)))))) and (((!(rt_input.ta == rt_input.tb)) and (7 == rt_input.tb)) and (2 == rt_input.ta))) or (((((6 > rt_input.tc) and ((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc)))) and ((rt_input.tc >= rt_input.tb) and (rt_input.tc > 4))) and ((((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2)) and ((!(3 == rt_input.tb)) and (8 > rt_input.tb))) and (2 == rt_input.ta))) or (((((rt_input.tc >= rt_input.tb) and (5 > rt_input.tc)) and (((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and ((rt_input.tc > 3) and (!((-1 + rt_input.tb) == rt_input.tc))))) and (((8 > rt_input.tb) and ((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2))) and (2 == rt_input.ta))) or (((((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and (4 == rt_input.tc)) and (((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 5)) and (9 == rt_input.ta))) or (((((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and (4 == rt_input.tc)) and (((rt_input.tb > 4) and ((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2))) and (((rt_input.ta > 4) and (!(9 == rt_input.ta))) and (rt_input.ta > 5)))) or (((((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and (4 == rt_input.tc)) and ((((!(rt_input.ta == rt_input.tb)) and(rt_input.tb > 2)) and ((rt_input.tb > 4) and (!(9 == rt_input.tb)))) and (5 == rt_input.ta))) or (((((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and (rt_input.tc > 4)) and (((rt_input.tb > 4) and ((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2))) and (rt_input.ta > 4))) or (((((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and ((rt_input.tc > 3) and ((-1 + rt_input.tb) == rt_input.tc))) and (((rt_input.tb > 4) and ((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2))) and ((rt_input.ta > 2) and (5 > rt_input.ta)))) or (((((rt_input.tc > 3) and (!((-1 + rt_input.tb) == rt_input.tc))) and ((6 > rt_input.tc) and ((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))))) and ((((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2)) and ((rt_input.tb > 4) and (9 > rt_input.tb))) and (4 == rt_input.ta))) or ((((5 > rt_input.tc) and (((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and ((rt_input.tc > 3) and (!((-1 + rt_input.tb) == rt_input.tc))))) and (((7 > rt_input.tb) and (((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2)) and ((rt_input.tb > 4) and (9 > rt_input.tb)))) and (3 == rt_input.ta))) or ((((5 == rt_input.tc) and (((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and ((rt_input.tc > 3) and (!((-1 + rt_input.tb) == rt_input.tc))))) and ((((rt_input.tb > 4) and (9 > rt_input.tb)) and ((8 > rt_input.tb) and ((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2)))) and (3 == rt_input.ta))) or (((((rt_input.tc > 3) and (!((-1 + rt_input.tb) == rt_input.tc))) and ((rt_input.tc > 5) and ((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))))) and (((!(rt_input.ta == rt_input.tb)) and (8 == rt_input.tb)) and ((rt_input.ta > 2) and (5 > rt_input.ta)))) or ((((9 == rt_input.tc) and (((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and ((rt_input.tc > 3) and (!((-1 + rt_input.tb) == rt_input.tc))))) and (((!(rt_input.ta == rt_input.tb)) and (6 == rt_input.tb)) and (4 == rt_input.ta))) or ((((9 == rt_input.tc) and (((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and ((rt_input.tc > 3) and (!((-1 + rt_input.tb) == rt_input.tc))))) and ((((rt_input.tb > 4) and (!(8 == rt_input.tb))) and ((rt_input.tb > 6) and ((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2)))) and ((rt_input.ta > 2) and (5 > rt_input.ta)))) or (((((rt_input.tc > 5) and (!(9 == rt_input.tc))) and (((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and ((rt_input.tc > 3) and (!((-1 + rt_input.tb) == rt_input.tc))))) and (((!(rt_input.ta == rt_input.tb)) and (6 == rt_input.tb)) and (3 == rt_input.ta))) or (((((rt_input.tc > 6) and ((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc)))) and (((rt_input.tc > 3) and (!((-1 + rt_input.tb) == rt_input.tc))) and ((rt_input.tc > 5) and (!(9 == rt_input.tc))))) and (((!(rt_input.ta == rt_input.tb)) and (9 == rt_input.tb)) and (3 == rt_input.ta))) or (((((rt_input.tc > 7) and ((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc)))) and (((rt_input.tc > 3) and (!((-1 + rt_input.tb) == rt_input.tc))) and ((rt_input.tc > 5) and (!(9 == rt_input.tc))))) and ((((rt_input.tb > 5) and ((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2))) and (((rt_input.tb > 9) or (7 == rt_input.tb)) or (5 == rt_input.tb))) and (3 == rt_input.ta))) or (((((8 > rt_input.tc) and ((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc)))) and (((rt_input.tc > 3) and (!((-1 + rt_input.tb) == rt_input.tc))) and ((rt_input.tc > 5) and (!(9 == rt_input.tc))))) and ((((!(6 == rt_input.tb)) and (!(9 == rt_input.tb))) and (((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2)) and ((rt_input.tb > 4) and (!(8 == rt_input.tb))))) and (3 == rt_input.ta))) or (((((rt_input.tc > 5) and (!(9 == rt_input.tc))) and (((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and ((rt_input.tc > 3) and (!((-1 + rt_input.tb) == rt_input.tc))))) and ((((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2)) and ((rt_input.tb > 4) and (!(8 == rt_input.tb)))) and (4 == rt_input.ta))) or (((((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and ((rt_input.tc > 3) and ((-1 + rt_input.ta) == rt_input.tc))) and (((5 > rt_input.tb) and ((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2))) and (rt_input.ta > 2))) or (((((rt_input.tc > 3) and (!((-1 + rt_input.ta) == rt_input.tc))) and ((rt_input.tc > 5) and ((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))))) and (((!(rt_input.ta == rt_input.tb)) and (4 == rt_input.tb)) and (9 == rt_input.ta))) or ((((rt_input.tc > 6) and (((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and ((rt_input.tc > 3) and (!((-1 + rt_input.ta) == rt_input.tc))))) and (((!(rt_input.ta == rt_input.tb)) and (3 == rt_input.tb)) and (9 == rt_input.ta))) or (((((rt_input.tc > 3) and (!((-1 + rt_input.ta) == rt_input.tc))) and ((7 > rt_input.tc) and ((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))))) and (((5 > rt_input.tb) and ((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2))) and ((rt_input.ta > 2) and (6 > rt_input.ta)))) or (((((9 > rt_input.tc) and ((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc)))) and (((rt_input.tc > 3) and (!((-1 + rt_input.ta) == rt_input.tc))) and (rt_input.tc > 7))) and (((!(rt_input.ta == rt_input.tb)) and (4 == rt_input.tb)) and (5 == rt_input.ta))) or ((((7 == rt_input.tc) and (((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and ((rt_input.tc > 3) and (!((-1 + rt_input.ta) == rt_input.tc))))) and (((5 > rt_input.tb) and ((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2))) and (5 == rt_input.ta))) or (((((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and ((rt_input.tc > 3) and (!((-1 + rt_input.ta) == rt_input.tc)))) and (((!(rt_input.ta == rt_input.tb)) and (4 == rt_input.tb)) and ((rt_input.ta > 2) and ((!(9 == rt_input.ta)) and (rt_input.ta > 5))))) or (((((rt_input.tc > 5) and (9 > rt_input.tc)) and (((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and ((rt_input.tc > 3) and (!((-1 + rt_input.ta) == rt_input.tc))))) and (((!(rt_input.ta == rt_input.tb)) and (3 == rt_input.tb)) and (6 == rt_input.ta))) or (((((rt_input.tc > 3) and (!((-1 + rt_input.ta) == rt_input.tc))) and ((rt_input.tc > 5) and ((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))))) and (((!(rt_input.ta == rt_input.tb)) and (3 == rt_input.tb)) and (((!(9 == rt_input.ta)) and (rt_input.ta > 5)) and (rt_input.ta > 6)))) or ((((5 == rt_input.tc) and (((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and ((rt_input.tc > 3) and (!((-1 + rt_input.ta) == rt_input.tc))))) and (((!(rt_input.ta == rt_input.tb)) and (3 == rt_input.tb)) and ((rt_input.ta > 5) and (8 > rt_input.ta)))) or ((((5 > rt_input.tc) and (((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and ((rt_input.tc > 3) and (!((-1 + rt_input.ta) == rt_input.tc))))) and (((!(rt_input.ta == rt_input.tb)) and (3 == rt_input.tb)) and (6 == rt_input.ta))) or (((((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and ((rt_input.tc > 1) and (4 > rt_input.tc))) and ((((1 + rt_input.ta) == rt_input.tb) and (rt_input.ta > 1)) and (rt_input.ta > 1))) or (((((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and ((rt_input.tc > 1) and (4 > rt_input.tc))) and ((((-1 + rt_input.ta) == rt_input.tb) and (rt_input.tb > 2)) and (rt_input.ta > 1))) or (((((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and (3 == rt_input.tc)) and ((((!((1 + rt_input.ta) == rt_input.tb)) and (!((-1 + rt_input.ta) == rt_input.tb))) and ((!(9 == rt_input.tb)) and ((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2)))) and (6 == rt_input.ta))) or (((((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and (3 == rt_input.tc)) and ((((5 > rt_input.tb) and ((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2))) and (((!((1 + rt_input.ta) == rt_input.tb)) and (!((-1 + rt_input.ta) == rt_input.tb))) and (6 > rt_input.tb))) and ((rt_input.ta > 1) and (5 > rt_input.ta)))) or (((((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and (3 == rt_input.tc)) and ((((rt_input.tb > 4) and ((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2))) and (((!((1 + rt_input.ta) == rt_input.tb)) and (!((-1 + rt_input.ta) == rt_input.tb))) and (6 > rt_input.tb))) and ((7 == rt_input.ta) or (5 == rt_input.ta)))) or (((((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and (3 == rt_input.tc)) and ((((!(8 == rt_input.tb)) and (rt_input.tb > 5)) and (((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2)) and ((!((1 + rt_input.ta) == rt_input.tb)) and (!((-1 + rt_input.ta) == rt_input.tb))))) and ((rt_input.ta > 6) and (9 > rt_input.ta)))) or (((((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and (3 == rt_input.tc)) and ((((!(6 == rt_input.tb)) and ((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2))) and (((!((1 + rt_input.ta) == rt_input.tb)) and (!((-1 + rt_input.ta) == rt_input.tb))) and ((!(8 == rt_input.tb)) and (rt_input.tb > 5)))) and (rt_input.ta > 8))) or (((((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and (3 == rt_input.tc)) and ((((!(9 == rt_input.tb)) and ((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2))) and (((!((1 + rt_input.ta) == rt_input.tb)) and (!((-1 + rt_input.ta) == rt_input.tb))) and ((!(8 == rt_input.tb)) and (rt_input.tb > 5)))) and (5 == rt_input.ta))) or ((((!(rt_input.tb == rt_input.tc)) and (!(rt_input.ta == rt_input.tc))) and (3 == rt_input.tc)) and (((((!(rt_input.ta == rt_input.tb)) and (rt_input.tb > 2)) and ((!((1 + rt_input.ta) == rt_input.tb)) and (!((-1 + rt_input.ta) == rt_input.tb)))) and (6 == rt_input.tb)) and ((rt_input.ta > 2) and (5 > rt_input.ta)))))))))))))))))))))))))))))))))))))))))))))))))))))

[predicate22]
((rt_input.ta == rt_input.tc) and (rt_input.ta == rt_input.tb))

[predicate23]
(((3 > rt_input.obsDistance_3) and ((rt_input.obsDistance_0 > rt_state.zone_1) and ((rt_input.obsDistance_2 > 5) and ((rt_input.obsDistance_1 > 4) and (rt_input.obsDistance_0 > 4))))) or (((!(rt_state.speed_status == Midium_speed)) and ((5 > rt_input.obsDistance_3) and (((rt_input.obsDistance_0 > rt_state.zone_1) and (1 == rt_state.zone_1)) and ((rt_input.obsDistance_2 > 5) and (5 > rt_input.obsDistance_1))))) or ((((rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (5 > rt_input.obsDistance_3)) and ((rt_input.obsDistance_0 > rt_state.zone_1) and (((6 > rt_input.obsDistance_2) and (rt_input.obsDistance_1 == rt_input.obsDistance_2)) and (8 > rt_input.obsDistance_0)))) or ((((!(rt_state.zone_1 == rt_input.obsDistance_3)) and ((rt_input.obsDistance_3 > rt_input.obsDistance_2) and (5 > rt_input.obsDistance_3))) and ((rt_input.obsDistance_0 > rt_state.zone_1) and ((6 > rt_input.obsDistance_2) and ((rt_input.obsDistance_1 > 4) and (!(3 == rt_input.obsDistance_0)))))) or ((((rt_input.obsDistance_3 > rt_input.obsDistance_2) and (2 > rt_input.obsDistance_3)) and ((rt_input.obsDistance_0 > rt_state.zone_1) and ((6 > rt_input.obsDistance_2) and (5 > rt_input.obsDistance_1)))) or (((rt_input.obsDistance_3 > 4) and ((rt_input.obsDistance_0 > rt_state.zone_1) and ((rt_state.speed_status == Stop) and ((2 > rt_state.zone_0) and ((3 > rt_input.obsDistance_1) and (rt_input.obsDistance_0 > rt_input.obsDistance_1)))))) or (((rt_input.obsDistance_3 > 4) and ((rt_input.obsDistance_0 > rt_state.zone_1) and ((rt_state.speed_status == Stop) and ((rt_input.obsDistance_1 > 2) and ((5 > rt_input.obsDistance_1) and (rt_input.obsDistance_0 > rt_input.obsDistance_1)))))) or ((((rt_input.obsDistance_3 > 4) and (rt_input.obsDistance_3 >= 23)) and ((rt_input.obsDistance_0 > rt_state.zone_1) and ((!(rt_state.speed_status == Stop)) and ((2 > rt_state.zone_0) and ((rt_input.obsDistance_2 > rt_input.obsDistance_0) and ((5 > rt_input.obsDistance_1) and (7 > rt_input.obsDistance_0))))))) or (((rt_input.obsDistance_3 > 4) and ((rt_input.obsDistance_0 > rt_state.zone_1) and ((!(rt_state.speed_status == Stop)) and ((2 > rt_state.zone_0) and ((5 > rt_input.obsDistance_1) and (rt_input.obsDistance_0 > 6)))))) or (((((rt_input.obsDistance_3 - 9) >  1) and ((rt_input.obsDistance_3 > 4) and ((-1 + rt_input.obsDistance_1) > rt_input.obsDistance_3))) and (((rt_input.obsDistance_0 > rt_state.zone_1) and (!(rt_state.zone_0 == rt_state.zone_1))) and (rt_input.obsDistance_1 > 6))) or (((rt_input.obsDistance_3 > 4) and (((rt_input.obsDistance_0 > rt_state.zone_1) and (!(rt_state.zone_0 == rt_state.zone_1))) and ((rt_input.obsDistance_1 > 4) and (7 > rt_input.obsDistance_1)))) or (((rt_input.obsDistance_3 > rt_input.obsDistance_2) and ((rt_state.zone_1 >= rt_input.obsDistance_0) and (3 > rt_input.obsDistance_1))) or (((rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (((rt_state.zone_1 >= rt_input.obsDistance_0) and (rt_state.zone_1 >= rt_input.obsDistance_2)) and (3 > rt_input.obsDistance_1))) or ((rt_state.zone_1 >= rt_input.obsDistance_0) and (rt_input.obsDistance_1 > 2)))))))))))))))

[predicate24]
(((3 > rt_input.obsDistance_1) and (rt_input.obsDistance_0 > 2)) or (((rt_input.obsDistance_2 > rt_input.obsDistance_3) and ((rt_input.obsDistance_2 > 2) and ((3 > rt_input.obsDistance_1) and (3 > rt_input.obsDistance_0)))) or (((!(rt_state.speed_status == Midium_speed)) and ((7 > rt_input.obsDistance_3) and ((1 > rt_input.obsDistance_2) and (7 == rt_input.obsDistance_1)))) or (((rt_input.obsDistance_3 > 6) and ((1 > rt_input.obsDistance_2) and (rt_input.obsDistance_1 > 4))) or (((rt_input.obsDistance_2 > rt_input.obsDistance_3) and (((rt_input.obsDistance_2 > 0) and (5 > rt_input.obsDistance_2)) and ((rt_input.obsDistance_1 > 3) and ((rt_input.obsDistance_0 > 2) and ((9 + 3) > rt_input.obsDistance_0))))) or ((((rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 > rt_input.obsDistance_3)) and (((rt_input.obsDistance_2 > 0) and (5 > rt_input.obsDistance_2)) and ((rt_input.obsDistance_1 > 3) and (4 == rt_input.obsDistance_0)))) or ((((rt_input.obsDistance_3 > 4) and ((rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_0 > rt_input.obsDistance_3))) and (((rt_input.obsDistance_2 > 0) and (4 > rt_input.obsDistance_2)) and (((rt_input.obsDistance_1 > 3) and (((9 + 3) > rt_input.obsDistance_1) and (rt_input.obsDistance_1 > 4))) and ((rt_input.obsDistance_0 > 2) and (!(4 == rt_input.obsDistance_0)))))) or ((((rt_input.obsDistance_1 > rt_input.obsDistance_3) and ((rt_input.obsDistance_3 >= rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2))) and (((rt_input.obsDistance_2 > 0) and (3 > rt_input.obsDistance_2)) and ((rt_input.obsDistance_1 > 3) and ((rt_input.obsDistance_0 > 2) and (5 > rt_input.obsDistance_0))))) or ((((rt_input.obsDistance_3 >= rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2)) and (((rt_input.obsDistance_2 > 0) and (3 > rt_input.obsDistance_2)) and ((rt_input.obsDistance_1 > 3) and (rt_input.obsDistance_0 > 4)))) or ((((rt_input.obsDistance_3 >= rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2)) and (((rt_input.obsDistance_2 > 2) and (5 > rt_input.obsDistance_2)) and ((7 == rt_input.obsDistance_1) and (rt_input.obsDistance_0 > 2)))) or ((((rt_input.obsDistance_3 >= rt_input.obsDistance_0) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2)) and (((rt_input.obsDistance_2 > 2) and (5 > rt_input.obsDistance_2)) and ((4 == rt_input.obsDistance_1) and (rt_input.obsDistance_0 > 7)))) or (((!(1 == rt_state.zone_0)) and (((rt_input.obsDistance_2 > 4) and ((8 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 0))) and ((rt_input.obsDistance_1 > 3) and (3 == rt_input.obsDistance_0)))) or (((!(rt_state.speed_status == Slow_speed)) and ((7 > rt_input.obsDistance_3) and ((2 > rt_state.zone_1) and (((rt_input.obsDistance_2 > 4) and ((8 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 0))) and ((rt_input.obsDistance_1 > 3) and (rt_input.obsDistance_0 > 3)))))) or (((!(rt_state.speed_status == Slow_speed)) and (((rt_input.obsDistance_3 > 6) and (rt_input.obsDistance_3 >= rt_input.obsDistance_0)) and ((2 > rt_state.zone_1) and (((rt_input.obsDistance_2 > 4) and ((8 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 0))) and ((rt_input.obsDistance_1 > 3) and (rt_input.obsDistance_0 > 3)))))) or ((((9 + 9) + 6) ==  rt_input.obsDistance_2) and (4 == rt_input.obsDistance_1))))))))))))))))

[predicate25]
(((rt_state.speed_status == Slow_speed) and ((rt_state.zone_1 > 1) and ((2 == rt_state.zone_0) and ((rt_input.obsDistance_2 > 2) and (6 > rt_input.obsDistance_0))))) or (((3 > rt_input.obsDistance_3) and ((rt_state.zone_1 > 1) and ((1 == rt_input.obsDistance_2) and (rt_input.obsDistance_0 > 5)))) or ((rt_input.obsDistance_3 > 2) and ((rt_state.zone_1 > 1) and ((rt_input.obsDistance_2 > 2) and (rt_input.obsDistance_0 > 5))))))

[predicate26]
(((3 > rt_input.obsDistance_1) and (rt_input.obsDistance_0 > 2)) or (((rt_state.speed_status == Slow_speed) and ((rt_input.obsDistance_3 > 1) and ((2 == rt_state.zone_1) and ((1 == rt_input.obsDistance_2) and ((rt_input.obsDistance_1 > 2) and (rt_input.obsDistance_0 > 5)))))) or ((!(rt_state.speed_status == Slow_speed)) and ((2 == rt_state.zone_1) and ((3 > rt_input.obsDistance_2) and (rt_input.obsDistance_1 > 2))))))

[predicate27]
((rt_input.obsDistance_3 > 2) and ((rt_state.zone_1 > 1) and ((rt_state.zone_0 > 1) and ((rt_input.obsDistance_2 > 2) and (rt_input.obsDistance_1 > 2)))))

[predicate28]
(((rt_input.obsDistance_3 >= rt_input.obsDistance_2) and ((1 > rt_state.zone_1) and (1 > rt_state.zone_0))) or (((rt_state.zone_1 > 0) and (1 > rt_state.zone_0)) or ((!(rt_state.speed_status == Slow_speed)) and ((2 > rt_input.obsDistance_3) and (rt_state.zone_0 > 0)))))

[predicate29]
(((rt_input.obsDistance_3 > 4) and ((rt_state.speed_status == Stop) and ((2 == rt_state.zone_0) and (((rt_input.obsDistance_1 > 2) and (5 > rt_input.obsDistance_1)) and (rt_input.obsDistance_0 > 4))))) or (((rt_state.speed_status == Slow_speed) and (((rt_input.obsDistance_3 > rt_state.zone_1) and (5 > rt_input.obsDistance_3)) and ((rt_state.zone_1 >= rt_input.obsDistance_2) and ((2 == rt_state.zone_0) and ((8 > rt_input.obsDistance_2) and ((rt_input.obsDistance_1 > 4) and (rt_input.obsDistance_0 > 4))))))) or (((rt_state.speed_status == Slow_speed) and (((rt_state.zone_1 >= rt_input.obsDistance_3) and (5 > rt_input.obsDistance_3)) and ((2 == rt_state.zone_0) and (((rt_input.obsDistance_1 == rt_input.obsDistance_2) and ((8 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 4))) and ((rt_input.obsDistance_1 > 5) and (rt_input.obsDistance_0 > 4)))))) or (((rt_state.speed_status == Slow_speed) and (((rt_state.zone_1 >= rt_input.obsDistance_3) and (5 > rt_input.obsDistance_3)) and ((2 == rt_state.zone_0) and ((((8 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 4)) and ((!(rt_input.obsDistance_1 == rt_input.obsDistance_2)) and (rt_input.obsDistance_2 >= rt_input.obsDistance_0))) and ((rt_input.obsDistance_1 > 5) and (rt_input.obsDistance_0 > 5)))))) or (((rt_state.speed_status == Slow_speed) and (((rt_state.zone_1 >= rt_input.obsDistance_3) and (5 > rt_input.obsDistance_3)) and ((2 == rt_state.zone_0) and ((((!(rt_input.obsDistance_1 == rt_input.obsDistance_2)) and (rt_input.obsDistance_2 >= rt_input.obsDistance_0)) and ((rt_input.obsDistance_2 > rt_input.obsDistance_0) and ((8 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 4)))) and ((rt_input.obsDistance_1 > 5) and (5 == rt_input.obsDistance_0)))))) or (((rt_state.speed_status == Slow_speed) and (((rt_state.zone_1 >= rt_input.obsDistance_3) and (5 > rt_input.obsDistance_3)) and ((2 == rt_state.zone_0) and ((((8 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 4)) and ((!(rt_input.obsDistance_1 == rt_input.obsDistance_2)) and (rt_input.obsDistance_0 > rt_input.obsDistance_2))) and ((rt_input.obsDistance_1 > 5) and (((9 + 9)+ 5) == rt_input.obsDistance_0)))))) or (((rt_state.speed_status == Slow_speed) and (((rt_state.zone_1 > 0) and (1 == rt_input.obsDistance_3)) and ((2 == rt_state.zone_0) and ((((8 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 4)) and ((!(rt_input.obsDistance_1 == rt_input.obsDistance_2)) and (rt_input.obsDistance_0 > rt_input.obsDistance_2))) and ((7 == rt_input.obsDistance_1) and ((!(1 == (24 - rt_input.obsDistance_0))) and (rt_input.obsDistance_0 > 4))))))) or (((rt_state.speed_status == Slow_speed) and (((rt_state.zone_0 >= rt_input.obsDistance_3) and (5 > rt_input.obsDistance_3)) and ((2 == rt_state.zone_0) and ((rt_input.obsDistance_2 > 7) and ((rt_input.obsDistance_1 > 4) and (rt_input.obsDistance_0 > 4)))))) or (((!(rt_state.speed_status == Slow_speed)) and ((3 > rt_input.obsDistance_3) and ((2 == rt_state.zone_0) and ((rt_input.obsDistance_2 > rt_input.obsDistance_0) and ((rt_input.obsDistance_1 > 4) and (rt_input.obsDistance_0 > 4)))))) or (((!(rt_state.speed_status == Slow_speed)) and (((rt_state.zone_0 >= rt_input.obsDistance_3) and ((rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (5 > rt_input.obsDistance_3))) and ((2 == rt_state.zone_0) and ((((rt_input.obsDistance_0 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 4)) and ((!(rt_input.obsDistance_1 == rt_input.obsDistance_2)) and (rt_input.obsDistance_2 > 7))) and ((rt_input.obsDistance_1 > 4) and (rt_input.obsDistance_0 > 4)))))) or (((!(rt_state.speed_status == Slow_speed)) and (((rt_state.zone_0 >= rt_input.obsDistance_3) and ((rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (5 > rt_input.obsDistance_3))) and ((2 == rt_state.zone_0) and ((((rt_input.obsDistance_0 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 4)) and ((!(rt_input.obsDistance_1 == rt_input.obsDistance_2)) and (8 > rt_input.obsDistance_2))) and (((rt_input.obsDistance_1 > 4) and ((9 + 3) > rt_input.obsDistance_1)) and ((24 > rt_input.obsDistance_0) and (rt_input.obsDistance_0 > 4))))))) or (((!(rt_state.speed_status == Slow_speed)) and ((((rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (5 > rt_input.obsDistance_3)) and ((rt_state.zone_0 >= rt_input.obsDistance_3) and (rt_input.obsDistance_3 >= rt_state.zone_1))) and ((2 == rt_state.zone_0) and ((((rt_input.obsDistance_0 >= rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 4)) and ((!(rt_input.obsDistance_1 == rt_input.obsDistance_2)) and (8 > rt_input.obsDistance_2))) and (((9 + 3) == rt_input.obsDistance_1) and ((24 > rt_input.obsDistance_0) and (rt_input.obsDistance_0 > 4))))))) or (((!(rt_state.speed_status == Slow_speed)) and (((rt_input.obsDistance_3 > rt_input.obsDistance_2) and (5 > rt_input.obsDistance_3)) and ((2 == rt_state.zone_0) and ((rt_input.obsDistance_0 >= rt_input.obsDistance_2) and ((rt_input.obsDistance_1 > 8) and (rt_input.obsDistance_0 > 4)))))) or (((!(rt_state.speed_status == Slow_speed)) and (((rt_input.obsDistance_3 > rt_input.obsDistance_2) and (5 > rt_input.obsDistance_3)) and ((!(rt_state.speed_status == Stop)) and ((2 == rt_state.zone_0) and ((rt_input.obsDistance_0 >= rt_input.obsDistance_2) and (((9 > rt_input.obsDistance_1) and (rt_input.obsDistance_1 > 4)) and (rt_input.obsDistance_0 > 4))))))) or (((!(rt_state.speed_status == Slow_speed)) and ((5 > rt_input.obsDistance_3) and ((2 == rt_state.zone_0) and (((rt_input.obsDistance_1 > 2) and (5 > rt_input.obsDistance_1)) and (rt_input.obsDistance_0 > 4))))) or (((!(2 == rt_state.zone_0)) and ((7 == rt_input.obsDistance_2) and ((rt_input.obsDistance_1 > 4) and (rt_input.obsDistance_0 > 4)))) or (((!(2 == rt_state.zone_0)) and (((rt_input.obsDistance_1 > 2) and (5 > rt_input.obsDistance_1)) and (rt_input.obsDistance_0 > 4))) or (((rt_state.speed_status == Midium_speed) and (((rt_input.obsDistance_3 > rt_input.obsDistance_0) and (7 > rt_input.obsDistance_3)) and (((rt_input.obsDistance_2 - 9) > 3) and (((rt_input.obsDistance_1 - 9) > 3) and ((rt_input.obsDistance_0 > 2) and (5 > rt_input.obsDistance_0)))))) or (((rt_state.speed_status == Midium_speed) and ((7 > rt_input.obsDistance_3) and (((rt_input.obsDistance_2 - 9) > 3) and (((rt_input.obsDistance_1 > 6) and ((9 + 4) > rt_input.obsDistance_1)) and ((rt_input.obsDistance_0 > 2) and (5 > rt_input.obsDistance_0)))))) or (((rt_state.speed_status == Midium_speed) and (((rt_input.obsDistance_3 - 9) > 3) and (((9 + 4) > rt_input.obsDistance_2) and ((rt_input.obsDistance_1 > 6) and ((rt_input.obsDistance_0 > 2) and (5 > rt_input.obsDistance_0)))))) or (((rt_state.speed_status == Midium_speed) and (((9 + 4) > rt_input.obsDistance_3) and (((9 + 3) ==  rt_input.obsDistance_2) and ((rt_input.obsDistance_1 > 6) and ((rt_input.obsDistance_0 > 2) and (5 > rt_input.obsDistance_0)))))) or (((rt_input.obsDistance_3 > rt_input.obsDistance_2) and ((3 > rt_input.obsDistance_1) and (3 > rt_input.obsDistance_0))) or (((rt_input.obsDistance_2 >= rt_input.obsDistance_3) and ((3 > rt_input.obsDistance_2) and ((3 > rt_input.obsDistance_1) and (3 > rt_input.obsDistance_0)))) or ((rt_input.obsDistance_1 > 2) and (3 > rt_input.obsDistance_0)))))))))))))))))))))))))

[predicate30]
(((rt_state.speed_status == Midium_speed) and ((8 == rt_input.obsDistance_3) and (((rt_input.obsDistance_1 > 2) and (5 > rt_input.obsDistance_1)) and ((rt_input.obsDistance_0 - 9) > 3)))) or (((rt_state.speed_status == Midium_speed) and (((9 + 2) > rt_input.obsDistance_3) and (((rt_input.obsDistance_1 > 2) and (5 > rt_input.obsDistance_1)) and ((9 + 4) >  rt_input.obsDistance_0)))) or (((rt_state.speed_status == Midium_speed) and (((rt_input.obsDistance_3 - 9) > 3) and ((rt_state.zone_0 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 > 4)))) or (((rt_state.speed_status == Midium_speed) and ((8 == rt_input.obsDistance_3) and ((rt_state.zone_0 >= rt_input.obsDistance_2) and (rt_input.obsDistance_1 > 4)))) or (((!(rt_state.speed_status == Midium_speed)) and ((rt_input.obsDistance_3 >= rt_input.obsDistance_0) and ((2 > rt_state.zone_1) and ((4 > rt_input.obsDistance_2) and ((rt_input.obsDistance_1 > 4) and (rt_input.obsDistance_0 > 4)))))) or (((!(rt_state.speed_status == Midium_speed)) and ((rt_input.obsDistance_3 >= rt_input.obsDistance_0) and ((2 > rt_state.zone_1) and ((rt_input.obsDistance_1 > 4) and ((rt_input.obsDistance_0 > 2) and (5 > rt_input.obsDistance_0)))))) or (((!(rt_state.speed_status == Midium_speed)) and ((rt_input.obsDistance_3 >= rt_input.obsDistance_0) and ((rt_state.zone_1 > 1) and ((rt_state.speed_status == Stop) and ((rt_input.obsDistance_1 > 4) and ((rt_input.obsDistance_0 > 2) and (5 > rt_input.obsDistance_0))))))) or (((!(rt_state.speed_status == Midium_speed)) and (((rt_input.obsDistance_3 >= rt_input.obsDistance_0) and (rt_input.obsDistance_3 > 7)) and ((rt_state.zone_1 > 1) and ((rt_state.speed_status == Stop) and ((3 > rt_input.obsDistance_2) and ((rt_input.obsDistance_1 > 4) and (rt_input.obsDistance_0 > 4))))))) or (((!(rt_state.speed_status == Midium_speed)) and ((rt_input.obsDistance_0 == rt_input.obsDistance_3) and ((rt_state.zone_1 > 1) and ((!(rt_state.speed_status == Stop)) and ((rt_state.zone_0 >= rt_input.obsDistance_2) and ((rt_input.obsDistance_1 > 4) and (rt_input.obsDistance_0 > 5))))))) or (((!(rt_state.speed_status == Midium_speed)) and ((rt_input.obsDistance_3 > rt_input.obsDistance_0) and ((rt_state.zone_1 > 1) and ((!(rt_state.speed_status == Stop)) and ((rt_state.zone_0 >= rt_input.obsDistance_2) and ((rt_input.obsDistance_1 > 4) and (rt_input.obsDistance_0 > 4))))))) or (((!(rt_state.speed_status == Midium_speed)) and (((rt_input.obsDistance_3 > 6) and ((rt_input.obsDistance_0 > rt_input.obsDistance_3) and (!(4 == rt_input.obsDistance_3)))) and ((3 > rt_input.obsDistance_2) and ((rt_input.obsDistance_1 > 4) and (rt_input.obsDistance_0 > 2))))) or (((!(rt_state.speed_status == Midium_speed)) and ((((rt_input.obsDistance_0 > rt_input.obsDistance_3) and (!(4 == rt_input.obsDistance_3))) and ((7 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 > 3))) and ((rt_state.zone_1 > rt_input.obsDistance_2) and ((3 > rt_input.obsDistance_2) and (((7 == rt_input.obsDistance_1) and (rt_input.obsDistance_0 == rt_input.obsDistance_1)) and (rt_input.obsDistance_0 > 2)))))) or (((!(rt_state.speed_status == Midium_speed)) and ((((rt_input.obsDistance_0 > rt_input.obsDistance_3) and (!(4 == rt_input.obsDistance_3))) and ((7 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 > 3))) and ((2 == rt_state.zone_1) and ((3 > rt_input.obsDistance_2) and (((!(7 == rt_input.obsDistance_1)) and (rt_input.obsDistance_1 > 4)) and ((9 + 3) == rt_input.obsDistance_0)))))) or (((!(rt_state.speed_status == Midium_speed)) and ((((rt_input.obsDistance_0 > rt_input.obsDistance_3) and (!(4 == rt_input.obsDistance_3))) and ((7 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 > 3))) and ((2 == rt_state.zone_1) and ((1 == rt_input.obsDistance_2) and (((!(7 == rt_input.obsDistance_1)) and (rt_input.obsDistance_1 > 4)) and ((rt_input.obsDistance_0 > 2) and (!(12 == rt_input.obsDistance_0)))))))) or (((!(rt_state.speed_status == Midium_speed)) and ((((rt_input.obsDistance_0 > rt_input.obsDistance_3) and (!(4 == rt_input.obsDistance_3))) and ((7 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 > 3))) and ((2 == rt_state.zone_1) and (((1 > rt_input.obsDistance_2) or (2 == rt_input.obsDistance_2)) and (((rt_input.obsDistance_1 > 4) and ((!(7 == rt_input.obsDistance_1)) and (1 == (24 - rt_input.obsDistance_1)))) and ((rt_input.obsDistance_0 > 2) and (!(12 == rt_input.obsDistance_0)))))))) or (((!(rt_state.speed_status == Midium_speed)) and ((((rt_input.obsDistance_0 > rt_input.obsDistance_3) and (!(4 == rt_input.obsDistance_3))) and ((7 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 > 3))) and ((2 == rt_state.zone_1) and (((1 > rt_input.obsDistance_2) or (2 == rt_input.obsDistance_2)) and (((rt_input.obsDistance_0 > rt_input.obsDistance_1) and (8 == rt_input.obsDistance_1)) and (((!(11 == rt_input.obsDistance_0)) and (rt_input.obsDistance_0 > 7)) and (((9 + 3) > rt_input.obsDistance_0) and ((rt_input.obsDistance_0 > 2) and (!(12 == rt_input.obsDistance_0)))))))))) or (((!(rt_state.speed_status == Midium_speed)) and ((((rt_input.obsDistance_0 > rt_input.obsDistance_3) and (!(4 == rt_input.obsDistance_3))) and ((7 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 > 3))) and ((2 == rt_state.zone_1) and (((1 > rt_input.obsDistance_2) or (2 == rt_input.obsDistance_2)) and ((((!(8 == rt_input.obsDistance_1)) and (rt_input.obsDistance_1 > 4)) and (((!(7 == rt_input.obsDistance_1)) and (!(1 == (24 - rt_input.obsDistance_1)))) and (rt_input.obsDistance_0 > rt_input.obsDistance_1))) and (((rt_input.obsDistance_0 > 2) and (!(12 == rt_input.obsDistance_0))) and ((!(11 == rt_input.obsDistance_0)) and (rt_input.obsDistance_0 > 7)))))))) or (((!(rt_state.speed_status == Midium_speed)) and ((((rt_input.obsDistance_0 > rt_input.obsDistance_3) and (!(4 == rt_input.obsDistance_3))) and ((7 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 > 3))) and ((2 == rt_state.zone_1) and ((rt_state.zone_0 > rt_input.obsDistance_2) and (((1 > rt_input.obsDistance_2) or (2 == rt_input.obsDistance_2)) and (((rt_input.obsDistance_1 > rt_input.obsDistance_0) and ((rt_input.obsDistance_1 > 4) and ((!(7 == rt_input.obsDistance_1)) and (!(1 == (24 - rt_input.obsDistance_1)))))) and (((rt_input.obsDistance_0 > 2) and (!(12 == rt_input.obsDistance_0))) and (8 > rt_input.obsDistance_0)))))))) or (((!(rt_state.speed_status == Midium_speed)) and ((((rt_input.obsDistance_0 > rt_input.obsDistance_3) and (!(4 == rt_input.obsDistance_3))) and ((7 > rt_input.obsDistance_3) and (rt_input.obsDistance_3 > 3))) and ((2 == rt_state.zone_1) and ((rt_input.obsDistance_2 >= rt_state.zone_0) and (((1 > rt_input.obsDistance_2) or (2 == rt_input.obsDistance_2)) and (((((9 + 4) > rt_input.obsDistance_1) and (rt_input.obsDistance_1 > 4)) and (((!(7 == rt_input.obsDistance_1)) and (!(1 == (24 - rt_input.obsDistance_1)))) and (rt_input.obsDistance_1 > rt_input.obsDistance_0))) and (((rt_input.obsDistance_0 > 2) and (!(12 == rt_input.obsDistance_0))) and (8 > rt_input.obsDistance_0)))))))) or (((!(rt_state.speed_status == Midium_speed)) and ((((rt_input.obsDistance_0 > rt_input.obsDistance_3) and (!(4 == rt_input.obsDistance_3))) and (4 > rt_input.obsDistance_3)) and ((rt_state.speed_status == Stop) and ((3 > rt_input.obsDistance_2) and ((rt_input.obsDistance_1 > 4) and ((rt_input.obsDistance_0 > 2) and (5 > rt_input.obsDistance_0))))))) or (((!(rt_state.speed_status == Midium_speed)) and ((((rt_input.obsDistance_0 > rt_input.obsDistance_3) and (!(4 == rt_input.obsDistance_3))) and (4 > rt_input.obsDistance_3)) and ((2 > rt_state.zone_1) and ((!(rt_state.speed_status == Stop)) and ((3 > rt_input.obsDistance_2) and ((rt_input.obsDistance_1 > 4) and ((rt_input.obsDistance_0 > 2) and (5 > rt_input.obsDistance_0)))))))) or (((!(rt_state.speed_status == Midium_speed)) and ((((rt_input.obsDistance_0 > rt_input.obsDistance_3) and (!(4 == rt_input.obsDistance_3))) and (3 > rt_input.obsDistance_3)) and (((5 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2)) and ((rt_input.obsDistance_1 > 4) and (rt_input.obsDistance_0 > 4))))) or (((!(rt_state.speed_status == Midium_speed)) and (((7 > rt_input.obsDistance_3) and ((rt_input.obsDistance_0 > rt_input.obsDistance_3) and (!(4 == rt_input.obsDistance_3)))) and ((1 == rt_state.zone_1) and (((5 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2)) and ((rt_input.obsDistance_1 > 4) and ((rt_input.obsDistance_0 > 2) and (5 > rt_input.obsDistance_0))))))) or (((!(rt_state.speed_status == Midium_speed)) and (((7 > rt_input.obsDistance_3) and ((rt_input.obsDistance_0 > rt_input.obsDistance_3) and (!(4 == rt_input.obsDistance_3)))) and ((!(1 == rt_state.zone_1)) and ((rt_state.speed_status == Stop) and (((5 > rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 2)) and ((rt_input.obsDistance_1 > 4) and ((rt_input.obsDistance_0 > 2) and (5 > rt_input.obsDistance_0)))))))) or (((!(rt_state.speed_status == Midium_speed)) and ((rt_state.speed_status == Slow_speed) and ((rt_input.obsDistance_0 > rt_input.obsDistance_3) and ((rt_input.obsDistance_2 > 4) and ((7 == rt_input.obsDistance_1) and ((rt_input.obsDistance_0 > 2) and (5 > rt_input.obsDistance_0))))))) or (((!(rt_state.speed_status == Midium_speed)) and ((!(rt_state.speed_status == Slow_speed)) and ((rt_input.obsDistance_0 > rt_input.obsDistance_3) and ((rt_input.obsDistance_2 > 4) and ((rt_input.obsDistance_1 > 4) and ((rt_input.obsDistance_0 > 2) and (5 > rt_input.obsDistance_0))))))) or (((rt_input.obsDistance_2 > rt_input.obsDistance_3) and ((rt_input.obsDistance_2 > 2) and ((3 > rt_input.obsDistance_1) and (3 > rt_input.obsDistance_0)))) or ((3 > rt_input.obsDistance_1) and (rt_input.obsDistance_0 > 2)))))))))))))))))))))))))))))

[predicate31]
((((9 + 4) >  rt_input.obsDistance_3) and (((rt_input.obsDistance_2 - 9) > 4) and ((2 > rt_input.obsDistance_1) and (3 > rt_input.obsDistance_0)))) or (((2 > rt_input.obsDistance_1) and (rt_input.obsDistance_0 > 2)) or ((rt_input.obsDistance_3 > 6) and ((rt_state.zone_1 > 1) and ((2 == rt_state.zone_0) and ((3 > rt_input.obsDistance_2) and (rt_input.obsDistance_1 > 1)))))))

[predicate32]
(((((2 + rt_state.zone_0) > rt_input.obsDistance_3) and ((1 + rt_state.zone_1) == rt_input.obsDistance_3)) and ((rt_state.zone_1 > 1) and ((rt_input.obsDistance_2*rt_state.zone_0 > 0) and (((-1 + rt_input.obsDistance_2) > rt_state.zone_0) and (rt_input.obsDistance_1 > 4))))) or (((((2 + rt_state.zone_0) > rt_input.obsDistance_3) and (!(1 == (rt_input.obsDistance_3 - rt_state.zone_1)))) and (((2 + rt_state.zone_1) > rt_input.obsDistance_2) and ((rt_input.obsDistance_2*rt_state.zone_0 > 0) and ((rt_input.obsDistance_1 > 4) and (1 == (rt_input.obsDistance_0 - 19)))))) or ((((-1 + rt_input.obsDistance_3) >  rt_state.zone_0) and ((rt_input.obsDistance_2 > rt_state.zone_1) and ((rt_input.obsDistance_2*rt_state.zone_0 > 0) and ((rt_input.obsDistance_1 > 4) and (rt_input.obsDistance_0 > 4))))) or ((rt_state.speed_status == Midium_speed) and ((rt_input.obsDistance_2*rt_state.zone_0 > 0) and ((6 > rt_input.obsDistance_2) and (5 > rt_input.obsDistance_1)))))))

[predicate33]
(((rt_state.speed_status == Slow_speed) and ((rt_state.zone_1 > 1) and ((rt_state.zone_0 > 1) and (1 == rt_input.obsDistance_2)))) or (((3 > rt_input.obsDistance_3) and ((rt_state.zone_1 > 1) and ((rt_state.zone_0 > 1) and (2 == rt_input.obsDistance_2)))) or (((!(rt_state.speed_status == Slow_speed)) and ((3 > rt_input.obsDistance_3) and ((rt_state.zone_1 > 1) and ((rt_state.zone_0 > 1) and (rt_input.obsDistance_2 > 2))))) or ((rt_input.obsDistance_3 > 2) and ((rt_state.zone_1 > 1) and ((rt_state.zone_0 > 1) and (rt_input.obsDistance_2 > 2)))))))

[predicate34]
(((!(rt_state.speed_status == Slow_speed)) and ((3 > rt_input.obsDistance_1) and (3 > rt_input.obsDistance_0))) or (((rt_input.obsDistance_1 > 2) and (3 > rt_input.obsDistance_0)) or ((((7 > rt_input.obsDistance_3) and (!(2 == rt_input.obsDistance_3))) and ((rt_state.zone_1 > 1) and ((rt_state.speed_status == Fast_speed) and ((2 == rt_state.zone_0) and ((7 > rt_input.obsDistance_2) and (rt_input.obsDistance_0 > 2)))))) or ((3 > rt_input.obsDistance_3) and ((rt_state.zone_1 > 1) and ((2 == rt_state.zone_0) and ((rt_input.obsDistance_2 > 6) and (rt_input.obsDistance_0 > 2))))))))

[predicate35]
(((2 > rt_state.zone_1) and ((rt_input.obsDistance_1 > rt_state.zone_0) and (((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1))) and (3 == rt_input.obsDistance_0)))) or (((2 > rt_state.zone_1) and ((rt_input.obsDistance_1 > rt_state.zone_0) and (((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1))) and (4 == rt_input.obsDistance_0)))) or (((1 == rt_input.obsDistance_3) and ((2 > rt_state.zone_1) and ((rt_input.obsDistance_1 > rt_state.zone_0) and ((1 == rt_input.obsDistance_2) and (((7 > rt_input.obsDistance_1) and ((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1)))) and (rt_input.obsDistance_0 > 4)))))) or (((1 == rt_input.obsDistance_3) and ((2 > rt_state.zone_1) and ((rt_input.obsDistance_1 > rt_state.zone_0) and ((!(1 == rt_input.obsDistance_2)) and (((7 > rt_input.obsDistance_1) and ((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1)))) and ((!(3 == rt_input.obsDistance_0)) and (!(4 == rt_input.obsDistance_0)))))))) or ((((!(1 == rt_input.obsDistance_3)) and (rt_input.obsDistance_3 > rt_input.obsDistance_1)) and ((2 > rt_state.zone_1) and ((rt_input.obsDistance_1 > rt_state.zone_0) and (((7 > rt_input.obsDistance_1) and ((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1)))) and ((rt_input.obsDistance_0 - 9) >  2))))) or ((((!(1 == rt_input.obsDistance_3)) and (rt_input.obsDistance_2 > rt_input.obsDistance_3)) and ((2 > rt_state.zone_1) and ((rt_input.obsDistance_1 > rt_state.zone_0) and ((rt_input.obsDistance_2 > rt_input.obsDistance_1) and (((7 > rt_input.obsDistance_1) and ((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1)))) and (((!(3 == rt_input.obsDistance_0)) and (!(4 == rt_input.obsDistance_0))) and (8 > rt_input.obsDistance_0))))))) or ((((rt_state.zone_1 > 1) and (rt_input.obsDistance_0 > rt_state.zone_1)) and ((rt_state.speed_status == Stop) and ((rt_input.obsDistance_1 > rt_state.zone_0) and (((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1))) and (5 > rt_input.obsDistance_0))))) or ((((rt_state.zone_1 >= rt_input.obsDistance_3) and (rt_input.obsDistance_2 > rt_input.obsDistance_3)) and ((rt_state.zone_1 > 1) and ((rt_state.speed_status == Stop) and (((rt_input.obsDistance_1 > rt_state.zone_0) and (rt_input.obsDistance_2 > rt_state.zone_0)) and ((5 > rt_input.obsDistance_2) and (((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1))) and (rt_input.obsDistance_0 > 4))))))) or ((((rt_input.obsDistance_3 >= rt_input.obsDistance_2) and (rt_input.obsDistance_3 > 6)) and ((rt_state.zone_1 > 1) and ((rt_state.speed_status == Stop) and (((rt_input.obsDistance_1 > rt_state.zone_0) and (rt_state.zone_0 >= rt_input.obsDistance_2)) and ((5 > rt_input.obsDistance_2) and (((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1))) and (rt_input.obsDistance_0 > 4))))))) or ((((rt_input.obsDistance_3 > 5) and ((!(3 == rt_input.obsDistance_3)) and (rt_input.obsDistance_3 >= rt_input.obsDistance_2))) and ((rt_state.zone_1 > 1) and ((!(rt_state.speed_status == Stop)) and (((rt_input.obsDistance_1 > rt_state.zone_0) and (rt_state.zone_0 >= rt_input.obsDistance_2)) and ((5 > rt_input.obsDistance_2) and (((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1))) and (rt_input.obsDistance_0 > 4))))))) or ((((!(3 == rt_input.obsDistance_3)) and (rt_input.obsDistance_2 > rt_input.obsDistance_3)) and ((rt_state.zone_1 > 1) and ((!(rt_state.speed_status == Stop)) and (((rt_input.obsDistance_1 > rt_state.zone_0) and (rt_input.obsDistance_2 > rt_state.zone_0)) and ((5 > rt_input.obsDistance_2) and (((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1))) and (rt_input.obsDistance_0 > 4))))))) or (((rt_input.obsDistance_3 >= rt_input.obsDistance_2) and ((rt_state.zone_0 >= rt_input.obsDistance_1) and (((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1))) and (rt_input.obsDistance_0 > 2)))) or (((rt_input.obsDistance_2 > rt_input.obsDistance_3) and ((rt_state.zone_0 >= rt_input.obsDistance_1) and ((rt_input.obsDistance_2 > 2) and ((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1)))))) or ((rt_input.obsDistance_2 > rt_input.obsDistance_3) and ((rt_state.zone_0 >= rt_input.obsDistance_1) and ((3 > rt_input.obsDistance_2) and (((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1))) and (rt_input.obsDistance_0 > 2))))))))))))))))))

[predicate36]
(((rt_state.speed_status == Stop) and ((3 == rt_input.obsDistance_1) and ((!(3 == rt_input.obsDistance_0)) and (!(4 == rt_input.obsDistance_0))))) or (((rt_state.speed_status == Stop) and ((4 == rt_input.obsDistance_1) and ((!(3 == rt_input.obsDistance_0)) and (!(4 == rt_input.obsDistance_0))))) or (((3 > rt_input.obsDistance_3) and ((rt_input.obsDistance_0 > rt_state.zone_1) and ((rt_state.speed_status == Stop) and (((rt_input.obsDistance_2 - 9) > 8) and (((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1))) and ((!(rt_input.obsDistance_0 > 19)) and ((!(3 == rt_input.obsDistance_0)) and (!(4 == rt_input.obsDistance_0))))))))) or ((((rt_input.obsDistance_3 > rt_input.obsDistance_2) and (5 > rt_input.obsDistance_3)) and ((rt_input.obsDistance_0 > rt_state.zone_1) and ((rt_state.speed_status == Stop) and ((rt_input.obsDistance_2 == rt_state.zone_0) and (((9 + 9) > rt_input.obsDistance_2) and (((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1))) and ((!(3 == rt_input.obsDistance_0)) and (!(4 == rt_input.obsDistance_0))))))))) or ((((rt_input.obsDistance_3 > rt_input.obsDistance_2) and (5 > rt_input.obsDistance_3)) and ((rt_input.obsDistance_0 > rt_state.zone_1) and ((rt_state.speed_status == Stop) and ((!(rt_input.obsDistance_2 == rt_state.zone_0)) and ((((9 + 9) > rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 0)) and (((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1))) and ((9 + 3) == rt_input.obsDistance_0))))))) or ((((rt_state.zone_0 >= rt_input.obsDistance_3) and ((5 > rt_input.obsDistance_3) and (rt_input.obsDistance_2 >= rt_input.obsDistance_3))) and ((rt_input.obsDistance_0 > rt_state.zone_1) and ((rt_state.speed_status == Stop) and ((((9 + 9) > rt_input.obsDistance_2) and (rt_input.obsDistance_2 > 5)) and (((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1))) and ((!(3 == rt_input.obsDistance_0)) and (!(4 == rt_input.obsDistance_0)))))))) or (((rt_state.zone_0 == rt_input.obsDistance_3) and ((rt_state.zone_1 >= rt_input.obsDistance_0) and ((rt_state.speed_status == Stop) and ((rt_input.obsDistance_1 >= rt_input.obsDistance_2) and (((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1))) and ((!(3 == rt_input.obsDistance_0)) and (!(4 == rt_input.obsDistance_0)))))))) or (((!(rt_state.zone_0 == rt_input.obsDistance_3)) and ((rt_state.zone_1 >= rt_input.obsDistance_0) and ((rt_state.speed_status == Stop) and (((2 + rt_input.obsDistance_1) > rt_input.obsDistance_2) and (((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1))) and ((!(3 == rt_input.obsDistance_0)) and (!(4 == rt_input.obsDistance_0)))))))) or (((rt_input.obsDistance_3 > rt_input.obsDistance_2) and ((rt_state.zone_1 >= rt_input.obsDistance_0) and ((rt_state.speed_status == Stop) and (((-1 + rt_input.obsDistance_2) > rt_input.obsDistance_1) and (((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1))) and ((!(3 == rt_input.obsDistance_0)) and (!(4 == rt_input.obsDistance_0)))))))) or (((rt_input.obsDistance_2 >= rt_input.obsDistance_3) and ((rt_state.zone_1 >= rt_input.obsDistance_0) and ((rt_state.speed_status == Stop) and ((((-1 + rt_input.obsDistance_2) > rt_input.obsDistance_1) and (rt_input.obsDistance_2 > 2)) and ((7 == rt_input.obsDistance_1) and ((!(3 == rt_input.obsDistance_0)) and (!(4 == rt_input.obsDistance_0)))))))) or (((rt_input.obsDistance_2 >= rt_input.obsDistance_3) and ((rt_state.zone_1 >= rt_input.obsDistance_0) and ((rt_state.speed_status == Stop) and ((((-1 + rt_input.obsDistance_2) > rt_input.obsDistance_1) and (3 > rt_input.obsDistance_2)) and (((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1))) and ((!(3 == rt_input.obsDistance_0)) and (!(4 == rt_input.obsDistance_0)))))))) or (((3 > rt_input.obsDistance_3) and ((!(rt_state.speed_status == Stop)) and ((2 == rt_state.zone_0) and ((rt_input.obsDistance_2 > 5) and ((rt_input.obsDistance_1 > 4) and (rt_input.obsDistance_0 > 4)))))) or ((((rt_input.obsDistance_3 > 2) and ((rt_input.obsDistance_3 > rt_input.obsDistance_2) and (5 > rt_input.obsDistance_3))) and ((!(rt_state.speed_status == Stop)) and (((2 == rt_state.zone_0) and (!(1 == (rt_input.obsDistance_2 - rt_state.zone_0)))) and ((6 > rt_input.obsDistance_2) and ((rt_input.obsDistance_1 > 4) and (rt_input.obsDistance_0 > 4)))))) or (((rt_input.obsDistance_2 >= rt_input.obsDistance_3) and (((rt_input.obsDistance_1 > rt_state.zone_1) and (rt_input.obsDistance_2 > rt_state.zone_1)) and ((!(rt_state.speed_status == Stop)) and ((2 == rt_state.zone_0) and (3 > rt_input.obsDistance_0))))) or (((rt_input.obsDistance_3 > rt_input.obsDistance_2) and ((rt_input.obsDistance_2 > rt_state.zone_1) and ((!(rt_state.speed_status == Stop)) and ((2 == rt_state.zone_0) and (3 > rt_input.obsDistance_0))))) or (((rt_state.zone_1 >= rt_input.obsDistance_2) and ((!(rt_state.speed_status == Stop)) and ((2 == rt_state.zone_0) and (3 > rt_input.obsDistance_0)))) or (((!(rt_state.speed_status == Stop)) and ((!(2 == rt_state.zone_0)) and ((3 == rt_input.obsDistance_1) and ((!(3 == rt_input.obsDistance_0)) and (!(4 == rt_input.obsDistance_0)))))) or (((!(rt_state.speed_status == Stop)) and ((!(2 == rt_state.zone_0)) and ((4 == rt_input.obsDistance_1) and ((!(3 == rt_input.obsDistance_0)) and (!(4 == rt_input.obsDistance_0)))))) or (((!(rt_state.speed_status == Stop)) and (((!(2 == rt_state.zone_0)) and ((2 + rt_state.zone_0) > rt_input.obsDistance_2)) and (((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1))) and (3 > rt_input.obsDistance_0)))) or (((rt_input.obsDistance_3 > rt_input.obsDistance_2) and ((!(rt_state.speed_status == Stop)) and (((!(2 == rt_state.zone_0)) and ((-1 + rt_input.obsDistance_2) > rt_state.zone_0)) and (((!(3 == rt_input.obsDistance_1)) and (!(4 == rt_input.obsDistance_1))) and (3 > rt_input.obsDistance_0))))) or ((((rt_input.obsDistance_2 > 1) and (2 == rt_input.obsDistance_3)) and ((!(rt_state.speed_status == Stop)) and (((!(2 == rt_state.zone_0)) and ((-1 + rt_input.obsDistance_2) > rt_state.zone_0)) and ((rt_input.obsDistance_2 > 5) and ((rt_input.obsDistance_1 > 4) and (rt_input.obsDistance_0 > 4)))))) or ((rt_input.obsDistance_2 >= rt_input.obsDistance_3) and ((!(rt_state.speed_status == Stop)) and (((!(2 == rt_state.zone_0)) and ((-1 + rt_input.obsDistance_2) > rt_state.zone_0)) and ((rt_input.obsDistance_1 > 4) and (3 > rt_input.obsDistance_0))))))))))))))))))))))))))

[predicate37]
((((rt_input.obsDistance_3 - 9) > 4) and ((2 == rt_state.zone_1) and ((!(rt_state.speed_status == Fast_speed)) and ((rt_state.zone_0 > 1) and (((rt_input.obsDistance_2 > 2) and ((9 + 9)>= rt_input.obsDistance_2)) and (((9 + 5) > rt_input.obsDistance_1) and (rt_input.obsDistance_1 > 2))))))) or (((rt_input.obsDistance_3 > 2) and ((2 == rt_state.zone_1) and ((!(rt_state.speed_status == Fast_speed)) and ((rt_state.zone_0 > 1) and (((rt_input.obsDistance_2 - 9) > 9) and ((9 + 5) > rt_input.obsDistance_1)))))) or ((rt_input.obsDistance_3 > 2) and ((rt_state.zone_0 > 1) and ((rt_input.obsDistance_2 > 2) and ((rt_input.obsDistance_1 - 9) > 4))))))

[predicate38]
(((1 == rt_input.obsDistance_3) and (rt_state.speed_status == Fast_speed)) or ((1 == rt_input.obsDistance_3) and ((2 == rt_state.zone_1) and ((!(rt_state.speed_status == Fast_speed)) and((rt_state.zone_0 > 1) and (rt_input.obsDistance_2 > 7))))))

[predicate39]
((rt_input.obsDistance_3 > 2) and ((2 == rt_state.zone_1) and ((!(rt_state.speed_status == Fast_speed)) and ((2 == rt_state.zone_0) and ((rt_input.obsDistance_2 > 2) and (rt_input.obsDistance_0 > 8))))))

[predicate40]
((((rt_input.obsDistance_3 - 9) > 4) and ((2 == rt_state.zone_1) and ((!(rt_state.speed_status == Fast_speed)) and ((rt_state.zone_0 > 1) and (((rt_input.obsDistance_2 > 2) and ((9 + 9) >= rt_input.obsDistance_2)) and (((9 + 5) > rt_input.obsDistance_1) and (rt_input.obsDistance_1 > 2))))))) or (((rt_input.obsDistance_3 > 2) and ((2 == rt_state.zone_1) and ((!(rt_state.speed_status == Fast_speed)) and ((rt_state.zone_0 > 1) and (((rt_input.obsDistance_2 - 9) > 9) and ((9 + 5) > rt_input.obsDistance_1)))))) or ((rt_input.obsDistance_3 > 2) and ((rt_state.zone_0 > 1) and ((rt_input.obsDistance_2 > 2) and ((rt_input.obsDistance_1 - 9) > 4))))))